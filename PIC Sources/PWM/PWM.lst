;  ASM code generated by mikroVirtualMachine for PIC - V. 6.2.1.0
;  Date/Time: 26/06/2007 23.40.02
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2943			GOTO	_main
$0004	$	_PWM1_Init:
$0004	$1303			BCF	STATUS, RP1
$0005	$1283			BCF	STATUS, RP0
$0006	$0195			CLRF	CCPR1L, 1
$0007	$1217			BCF	CCP1CON, 4
$0008	$1297			BCF	CCP1CON, 5
$0009	$0008			RETURN
$000A	$	_PWM2_Init:
$000A	$1303			BCF	STATUS, RP1
$000B	$1283			BCF	STATUS, RP0
$000C	$019B			CLRF	CCPR2L, 1
$000D	$121D			BCF	CCP2CON, 4
$000E	$129D			BCF	CCP2CON, 5
$000F	$0008			RETURN
$0010	$	_Delay_500us:
;delays.c,22 :: 		void Delay_500us() {
;delays.c,23 :: 		Delay_us(498);
$0010	$3004			MOVLW	4
$0011	$1303			BCF	STATUS, RP1
$0012	$1283			BCF	STATUS, RP0
$0013	$00FB			MOVWF	STACK_11
$0014	$30FF			MOVLW	255
$0015	$00FA			MOVWF	STACK_10
$0016	$0BFB			DECFSZ	STACK_11, F
$0017	$2819			GOTO	$+2
$0018	$281C			GOTO	$+4
$0019	$0BFA			DECFSZ	STACK_10, F
$001A	$2819			GOTO	$-1
$001B	$2816			GOTO	$-5
$001C	$3038			MOVLW	56
$001D	$00FA			MOVWF	STACK_10
$001E	$0BFA			DECFSZ	STACK_10, F
$001F	$281E			GOTO	$-1
$0020	$0000			NOP
;delays.c,24 :: 		}
$0021	$0008			RETURN
$0022	$	_Mul_16x16_S:
$0022	$1303			BCF	STATUS, RP1
$0023	$1283			BCF	STATUS, RP0
$0024	$01FB			CLRF	STACK_11
$0025	$01FA			CLRF	STACK_10
$0026	$01F9			CLRF	STACK_9
$0027	$3080			MOVLW	128
$0028	$00F8			MOVWF	STACK_8
$0029	$01FD			CLRF	STACK_13
$002A	$1FF1			BTFSS	STACK_1, 7
$002B	$2832			GOTO	$+7
$002C	$09F1			COMF	STACK_1, F
$002D	$09F0			COMF	STACK_0, F
$002E	$0AF0			INCF	STACK_0, F
$002F	$1903			BTFSC	STATUS, Z
$0030	$0AF1			INCF	STACK_1, F
$0031	$0AFD			INCF	STACK_13, F
$0032	$1FF5			BTFSS	STACK_5, 7
$0033	$283A			GOTO	$+7
$0034	$09F5			COMF	STACK_5, F
$0035	$09F4			COMF	STACK_4, F
$0036	$0AF4			INCF	STACK_4, F
$0037	$1903			BTFSC	STATUS, Z
$0038	$0AF5			INCF	STACK_5, F
$0039	$0AFD			INCF	STACK_13, F
$003A	$0CF1			RRF	STACK_1, F
$003B	$0CF0			RRF	STACK_0, F
$003C	$1C03			BTFSS	STATUS, C
$003D	$2847			GOTO	$+10
$003E	$0874			MOVF	STACK_4, W
$003F	$07F9			ADDWF	STACK_9, F
$0040	$0875			MOVF	STACK_5, W
$0041	$1803			BTFSC	STATUS, C
$0042	$0F75			INCFSZ	STACK_5, W
$0043	$07FA			ADDWF	STACK_10, F
$0044	$1803			BTFSC	STATUS, C
$0045	$0AFB			INCF	STACK_11, F
$0046	$1003			BCF	STATUS, C
$0047	$1FF0			BTFSS	STACK_0, 7
$0048	$284F			GOTO	$+7
$0049	$0874			MOVF	STACK_4, W
$004A	$07FA			ADDWF	STACK_10, F
$004B	$1803			BTFSC	STATUS, C
$004C	$0AFB			INCF	STACK_11, F
$004D	$0875			MOVF	STACK_5, W
$004E	$07FB			ADDWF	STACK_11, F
$004F	$0CFB			RRF	STACK_11, F
$0050	$0CFA			RRF	STACK_10, F
$0051	$0CF9			RRF	STACK_9, F
$0052	$0CF8			RRF	STACK_8, F
$0053	$1C03			BTFSS	STATUS, C
$0054	$283A			GOTO	$-26
$0055	$1C7D			BTFSS	STACK_13, 0
$0056	$2862			GOTO	$+12
$0057	$09FB			COMF	STACK_11, F
$0058	$09FA			COMF	STACK_10, F
$0059	$09F9			COMF	STACK_9, F
$005A	$09F8			COMF	STACK_8, F
$005B	$0AF8			INCF	STACK_8, F
$005C	$1903			BTFSC	STATUS, Z
$005D	$0AF9			INCF	STACK_9, F
$005E	$1903			BTFSC	STATUS, Z
$005F	$0AFA			INCF	STACK_10, F
$0060	$1903			BTFSC	STATUS, Z
$0061	$0AFB			INCF	STACK_11, F
$0062	$087B			MOVF	STACK_11, W
$0063	$00F3			MOVWF	STACK_3
$0064	$087A			MOVF	STACK_10, W
$0065	$00F2			MOVWF	STACK_2
$0066	$0879			MOVF	STACK_9, W
$0067	$00F1			MOVWF	STACK_1
$0068	$0878			MOVF	STACK_8, W
$0069	$00F0			MOVWF	STACK_0
$006A	$0000			NOP
$006B	$0008			RETURN
$006C	$	_InitMain:
;PWM.c,24 :: 		void InitMain() {
;PWM.c,25 :: 		PORTB = 0;                     // set PORTB to 0
$006C	$1303			BCF	STATUS, RP1
$006D	$1283			BCF	STATUS, RP0
$006E	$0186			CLRF	PORTB, 1
;PWM.c,26 :: 		TRISB = 0;                     // designate portb pins as output
$006F	$1683			BSF	STATUS, RP0
$0070	$0186			CLRF	TRISB, 1
;PWM.c,28 :: 		ADCON1 = 6;                    // all ADC pins to digital I/O
$0071	$3006			MOVLW	6
$0072	$009F			MOVWF	ADCON1
;PWM.c,29 :: 		PORTA = 255;
$0073	$30FF			MOVLW	255
$0074	$1283			BCF	STATUS, RP0
$0075	$0085			MOVWF	PORTA
;PWM.c,30 :: 		TRISA = 255;                   // PORTA is input
$0076	$30FF			MOVLW	255
$0077	$1683			BSF	STATUS, RP0
$0078	$0085			MOVWF	TRISA
;PWM.c,32 :: 		PORTC = 0x0;                   // set PORTC to $FF
$0079	$1283			BCF	STATUS, RP0
$007A	$0187			CLRF	PORTC, 1
;PWM.c,33 :: 		TRISC = 0;                     // designate PORTC pins as output
$007B	$1683			BSF	STATUS, RP0
$007C	$0187			CLRF	TRISC, 1
;PWM.c,34 :: 		PWM1_Init(200000);                // initialize PWM1 module
$007D	$3018			MOVLW	24
$007E	$0092			MOVWF	PR2
$007F	$2004			CALL	_PWM1_Init
;PWM.c,35 :: 		PWM2_Init(200000);                // initialize PWM1 module                                                           PWM1_Init(5000);                // initialize PWM1 module
$0080	$3018			MOVLW	24
$0081	$1683			BSF	STATUS, RP0
$0082	$0092			MOVWF	PR2
$0083	$200A			CALL	_PWM2_Init
;PWM.c,36 :: 		}//~
$0084	$0008			RETURN
$0085	$	_PWM1_Start:
$0085	$1303			BCF	STATUS, RP1
$0086	$1683			BSF	STATUS, RP0
$0087	$1107			BCF	TRISC, 2
$0088	$1283			BCF	STATUS, RP0
$0089	$1512			BSF	T2CON, 2
$008A	$300C			MOVLW	12
$008B	$0497			IORWF	CCP1CON, 1
$008C	$0008			RETURN
$008D	$	_PWM2_Start:
$008D	$1303			BCF	STATUS, RP1
$008E	$1683			BSF	STATUS, RP0
$008F	$1087			BCF	TRISC, 1
$0090	$1283			BCF	STATUS, RP0
$0091	$1512			BSF	T2CON, 2
$0092	$300C			MOVLW	12
$0093	$049D			IORWF	CCP2CON, 1
$0094	$0008			RETURN
$0095	$	_Button:
$0095	$1303			BCF	STATUS, RP1
$0096	$1283			BCF	STATUS, RP0
$0097	$0823			MOVF	FARG_Button+1, 0
$0098	$00F0			MOVWF	STACK_0
$0099	$3001			MOVLW	1
$009A	$00F1			MOVWF	STACK_1
$009B	$01F2			CLRF	STACK_1+1
$009C	$0870			MOVF	STACK_0, 0
$009D	$	L_Button_4:
$009D	$1903			BTFSC	STATUS, Z
$009E	$28A4			GOTO	L_Button_5
$009F	$0DF1			RLF	STACK_1, 1
$00A0	$0DF2			RLF	STACK_1+1, 1
$00A1	$1071			BCF	STACK_1, 0
$00A2	$3FFF			ADDLW	255
$00A3	$289D			GOTO	L_Button_4
$00A4	$	L_Button_5:
$00A4	$0871			MOVF	STACK_1, 0
$00A5	$00A6			MOVWF	Button_pMask_L0
$00A6	$0822			MOVF	FARG_Button+0, 0
$00A7	$0084			MOVWF	FSR
$00A8	$0800			MOVF	INDF, 0
$00A9	$00F0			MOVWF	STACK_0
$00AA	$0871			MOVF	STACK_1, 0
$00AB	$05F0			ANDWF	STACK_0, 1
$00AC	$0870			MOVF	STACK_0, 0
$00AD	$3001			MOVLW	1
$00AE	$1D03			BTFSS	STATUS, Z
$00AF	$3000			MOVLW	0
$00B0	$00F0			MOVWF	STACK_0
$00B1	$0825			MOVF	FARG_Button+3, 0
$00B2	$06F0			XORWF	STACK_0, 1
$00B3	$1903			BTFSC	STATUS, Z
$00B4	$28CF			GOTO	L_Button_0
$00B5	$	L_Button_1:
$00B5	$0824			MOVF	FARG_Button+2, 0
$00B6	$3C00			SUBLW	0
$00B7	$1803			BTFSC	STATUS, C
$00B8	$28BD			GOTO	L_Button_2
$00B9	$2010			CALL	_Delay_500us
$00BA	$2010			CALL	_Delay_500us
$00BB	$03A4			DECF	FARG_Button+2, 1
$00BC	$28B5			GOTO	L_Button_1
$00BD	$	L_Button_2:
$00BD	$0822			MOVF	FARG_Button+0, 0
$00BE	$0084			MOVWF	FSR
$00BF	$0800			MOVF	INDF, 0
$00C0	$00F0			MOVWF	STACK_0
$00C1	$0826			MOVF	Button_pMask_L0, 0
$00C2	$05F0			ANDWF	STACK_0, 1
$00C3	$0870			MOVF	STACK_0, 0
$00C4	$3001			MOVLW	1
$00C5	$1D03			BTFSS	STATUS, Z
$00C6	$3000			MOVLW	0
$00C7	$00F0			MOVWF	STACK_0
$00C8	$0825			MOVF	FARG_Button+3, 0
$00C9	$06F0			XORWF	STACK_0, 1
$00CA	$1903			BTFSC	STATUS, Z
$00CB	$28CF			GOTO	L_Button_3
$00CC	$30FF			MOVLW	255
$00CD	$00F0			MOVWF	STACK_0
$00CE	$0008			RETURN
$00CF	$	L_Button_3:
$00CF	$	L_Button_0:
$00CF	$01F0			CLRF	STACK_0, 1
$00D0	$0008			RETURN
$00D1	$	_PWM1_Change_Duty:
$00D1	$1303			BCF	STATUS, RP1
$00D2	$1683			BSF	STATUS, RP0
$00D3	$0812			MOVF	PR2, 0
$00D4	$3F01			ADDLW	1
$00D5	$00F0			MOVWF	STACK_0
$00D6	$01F1			CLRF	STACK_0+1
$00D7	$1803			BTFSC	STATUS, C
$00D8	$0AF1			INCF	STACK_0+1, 1
$00D9	$1283			BCF	STATUS, RP0
$00DA	$0822			MOVF	FARG_PWM1_Change_Duty+0, 0
$00DB	$00F4			MOVWF	STACK_4
$00DC	$01F5			CLRF	STACK_4+1
$00DD	$2022			CALL	_mul_16x16_s
$00DE	$3006			MOVLW	6
$00DF	$00F2			MOVWF	STACK_2
$00E0	$0870			MOVF	STACK_0, 0
$00E1	$00F4			MOVWF	STACK_4
$00E2	$0871			MOVF	STACK_0+1, 0
$00E3	$00F5			MOVWF	STACK_4+1
$00E4	$0872			MOVF	STACK_2, 0
$00E5	$	L_PWM1_Change_Duty_2:
$00E5	$1903			BTFSC	STATUS, Z
$00E6	$28EC			GOTO	L_PWM1_Change_Duty_3
$00E7	$0CF5			RRF	STACK_4+1, 1
$00E8	$0CF4			RRF	STACK_4, 1
$00E9	$13F5			BCF	STACK_4+1, 7
$00EA	$3FFF			ADDLW	255
$00EB	$28E5			GOTO	L_PWM1_Change_Duty_2
$00EC	$	L_PWM1_Change_Duty_3:
$00EC	$0874			MOVF	STACK_4, 0
$00ED	$00F0			MOVWF	STACK_0
$00EE	$0DF0			RLF	STACK_0, 1
$00EF	$1070			BCF	STACK_0, 0
$00F0	$0DF0			RLF	STACK_0, 1
$00F1	$1070			BCF	STACK_0, 0
$00F2	$0DF0			RLF	STACK_0, 1
$00F3	$1070			BCF	STACK_0, 0
$00F4	$0DF0			RLF	STACK_0, 1
$00F5	$1070			BCF	STACK_0, 0
$00F6	$3030			MOVLW	48
$00F7	$0570			ANDWF	STACK_0, 0
$00F8	$00F3			MOVWF	STACK_3
$00F9	$0874			MOVF	STACK_4, 0
$00FA	$00F0			MOVWF	STACK_0
$00FB	$0875			MOVF	STACK_4+1, 0
$00FC	$00F1			MOVWF	STACK_0+1
$00FD	$0CF1			RRF	STACK_0+1, 1
$00FE	$0CF0			RRF	STACK_0, 1
$00FF	$13F1			BCF	STACK_0+1, 7
$0100	$0CF1			RRF	STACK_0+1, 1
$0101	$0CF0			RRF	STACK_0, 1
$0102	$13F1			BCF	STACK_0+1, 7
$0103	$0870			MOVF	STACK_0, 0
$0104	$0095			MOVWF	CCPR1L
$0105	$300F			MOVLW	15
$0106	$0597			ANDWF	CCP1CON, 1
$0107	$0873			MOVF	STACK_3, 0
$0108	$0497			IORWF	CCP1CON, 1
$0109	$0008			RETURN
$010A	$	_PWM2_Change_Duty:
$010A	$1303			BCF	STATUS, RP1
$010B	$1683			BSF	STATUS, RP0
$010C	$0812			MOVF	PR2, 0
$010D	$3F01			ADDLW	1
$010E	$00F0			MOVWF	STACK_0
$010F	$01F1			CLRF	STACK_0+1
$0110	$1803			BTFSC	STATUS, C
$0111	$0AF1			INCF	STACK_0+1, 1
$0112	$1283			BCF	STATUS, RP0
$0113	$0822			MOVF	FARG_PWM2_Change_Duty+0, 0
$0114	$00F4			MOVWF	STACK_4
$0115	$01F5			CLRF	STACK_4+1
$0116	$2022			CALL	_mul_16x16_s
$0117	$3006			MOVLW	6
$0118	$00F2			MOVWF	STACK_2
$0119	$0870			MOVF	STACK_0, 0
$011A	$00F4			MOVWF	STACK_4
$011B	$0871			MOVF	STACK_0+1, 0
$011C	$00F5			MOVWF	STACK_4+1
$011D	$0872			MOVF	STACK_2, 0
$011E	$	L_PWM2_Change_Duty_0:
$011E	$1903			BTFSC	STATUS, Z
$011F	$2925			GOTO	L_PWM2_Change_Duty_1
$0120	$0CF5			RRF	STACK_4+1, 1
$0121	$0CF4			RRF	STACK_4, 1
$0122	$13F5			BCF	STACK_4+1, 7
$0123	$3FFF			ADDLW	255
$0124	$291E			GOTO	L_PWM2_Change_Duty_0
$0125	$	L_PWM2_Change_Duty_1:
$0125	$0874			MOVF	STACK_4, 0
$0126	$00F0			MOVWF	STACK_0
$0127	$0DF0			RLF	STACK_0, 1
$0128	$1070			BCF	STACK_0, 0
$0129	$0DF0			RLF	STACK_0, 1
$012A	$1070			BCF	STACK_0, 0
$012B	$0DF0			RLF	STACK_0, 1
$012C	$1070			BCF	STACK_0, 0
$012D	$0DF0			RLF	STACK_0, 1
$012E	$1070			BCF	STACK_0, 0
$012F	$3030			MOVLW	48
$0130	$0570			ANDWF	STACK_0, 0
$0131	$00F3			MOVWF	STACK_3
$0132	$0874			MOVF	STACK_4, 0
$0133	$00F0			MOVWF	STACK_0
$0134	$0875			MOVF	STACK_4+1, 0
$0135	$00F1			MOVWF	STACK_0+1
$0136	$0CF1			RRF	STACK_0+1, 1
$0137	$0CF0			RRF	STACK_0, 1
$0138	$13F1			BCF	STACK_0+1, 7
$0139	$0CF1			RRF	STACK_0+1, 1
$013A	$0CF0			RRF	STACK_0, 1
$013B	$13F1			BCF	STACK_0+1, 7
$013C	$0870			MOVF	STACK_0, 0
$013D	$009B			MOVWF	CCPR2L
$013E	$300F			MOVLW	15
$013F	$059D			ANDWF	CCP2CON, 1
$0140	$0873			MOVF	STACK_3, 0
$0141	$049D			IORWF	CCP2CON, 1
$0142	$0008			RETURN
$0143	$	_main:
;PWM.c,38 :: 		void main() {
;PWM.c,39 :: 		initMain();
$0143	$206C			CALL	_InitMain
;PWM.c,41 :: 		j     = 127;                   // initial value for j
$0144	$307F			MOVLW	127
$0145	$00A0			MOVWF	_j
;PWM.c,42 :: 		oj    = 0;                     // oj will keep the 'old j' value
$0146	$01A1			CLRF	_oj, 1
;PWM.c,43 :: 		PWM1_Start();                   // start PWM1
$0147	$2085			CALL	_PWM1_Start
;PWM.c,44 :: 		PWM2_Start();
$0148	$208D			CALL	_PWM2_Start
;PWM.c,46 :: 		while (1) {                    // endless loop
$0149	$	L_main_0:
;PWM.c,47 :: 		if (Button(&PORTA, 0,1,1))   // button on RA0 pressed
$0149	$3005			MOVLW	PORTA
$014A	$00A2			MOVWF	FARG_Button+0
$014B	$01A3			CLRF	FARG_Button+1, 1
$014C	$3001			MOVLW	1
$014D	$00A4			MOVWF	FARG_Button+2
$014E	$3001			MOVLW	1
$014F	$00A5			MOVWF	FARG_Button+3
$0150	$2095			CALL	_Button
$0151	$0870			MOVF	STACK_0, 0
$0152	$1903			BTFSC	STATUS, Z
$0153	$2956			GOTO	L_main_2
;PWM.c,48 :: 		j=j+10 ;                      //    increment j
$0154	$300A			MOVLW	10
$0155	$07A0			ADDWF	_j, 1
$0156	$	L_main_2:
;PWM.c,49 :: 		if (Button(&PORTA, 1,1,1))   // button on RA1 pressed
$0156	$3005			MOVLW	PORTA
$0157	$00A2			MOVWF	FARG_Button+0
$0158	$3001			MOVLW	1
$0159	$00A3			MOVWF	FARG_Button+1
$015A	$3001			MOVLW	1
$015B	$00A4			MOVWF	FARG_Button+2
$015C	$3001			MOVLW	1
$015D	$00A5			MOVWF	FARG_Button+3
$015E	$2095			CALL	_Button
$015F	$0870			MOVF	STACK_0, 0
$0160	$1903			BTFSC	STATUS, Z
$0161	$2964			GOTO	L_main_3
;PWM.c,50 :: 		j=j-10 ;                      //    decrement j
$0162	$300A			MOVLW	10
$0163	$02A0			SUBWF	_j, 1
$0164	$	L_main_3:
;PWM.c,52 :: 		if (oj != j) {               // if change in duty cycle requested
$0164	$0821			MOVF	_oj, 0
$0165	$0620			XORWF	_j, 0
$0166	$1903			BTFSC	STATUS, Z
$0167	$2972			GOTO	L_main_4
;PWM.c,53 :: 		PWM1_Change_Duty(j);        //    set new duty ratio,
$0168	$0820			MOVF	_j, 0
$0169	$00A2			MOVWF	FARG_PWM1_Change_Duty+0
$016A	$20D1			CALL	_PWM1_Change_Duty
;PWM.c,54 :: 		PWM2_Change_Duty(j);        //    set new duty ratio,
$016B	$0820			MOVF	_j, 0
$016C	$00A2			MOVWF	FARG_PWM2_Change_Duty+0
$016D	$210A			CALL	_PWM2_Change_Duty
;PWM.c,55 :: 		oj = j;                    //    memorize it
$016E	$0820			MOVF	_j, 0
$016F	$00A1			MOVWF	_oj
;PWM.c,56 :: 		PORTB = oj;                //    and display on PORTB
$0170	$0820			MOVF	_j, 0
$0171	$0086			MOVWF	PORTB
;PWM.c,57 :: 		}
$0172	$	L_main_4:
;PWM.c,58 :: 		Delay_ms(200);               // slow down change pace a little
$0172	$3006			MOVLW	6
$0173	$00FC			MOVWF	STACK_12
$0174	$30FF			MOVLW	255
$0175	$00FB			MOVWF	STACK_11
$0176	$30FF			MOVLW	255
$0177	$00FA			MOVWF	STACK_10
$0178	$0BFC			DECFSZ	STACK_12, F
$0179	$297B			GOTO	$+2
$017A	$2982			GOTO	$+8
$017B	$0BFB			DECFSZ	STACK_11, F
$017C	$297E			GOTO	$+2
$017D	$2981			GOTO	$+4
$017E	$0BFA			DECFSZ	STACK_10, F
$017F	$297E			GOTO	$-1
$0180	$297B			GOTO	$-5
$0181	$2978			GOTO	$-9
$0182	$301A			MOVLW	26
$0183	$00FB			MOVWF	STACK_11
$0184	$30FF			MOVLW	255
$0185	$00FA			MOVWF	STACK_10
$0186	$0BFB			DECFSZ	STACK_11, F
$0187	$2989			GOTO	$+2
$0188	$298C			GOTO	$+4
$0189	$0BFA			DECFSZ	STACK_10, F
$018A	$2989			GOTO	$-1
$018B	$2986			GOTO	$-5
$018C	$3042			MOVLW	66
$018D	$00FA			MOVWF	STACK_10
$018E	$0BFA			DECFSZ	STACK_10, F
$018F	$298E			GOTO	$-1
$0190	$0000			NOP
;PWM.c,59 :: 		}
$0191	$2949			GOTO	L_main_0
;PWM.c,60 :: 		}//~!
$0192	$2992			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		PWM1_Init
$000A		PWM2_Init
$0010		Delay_500us
$0022		Mul_16x16_S
$006C		InitMain
$0085		PWM1_Start
$008D		PWM2_Start
$0095		Button
$00D1		PWM1_Change_Duty
$010A		PWM2_Change_Duty
$0143		main


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_PWM1_Init:
$000A		_PWM2_Init:
$0010		_Delay_500us:
$0022		_Mul_16x16_S:
$006C		_InitMain:
$0085		_PWM1_Start:
$008D		_PWM2_Start:
$0095		_Button:
$009D		L_Button_4:
$00A4		L_Button_5:
$00B5		L_Button_1:
$00BD		L_Button_2:
$00CF		L_Button_0:
$00CF		L_Button_3:
$00D1		_PWM1_Change_Duty:
$00E5		L_PWM1_Change_Duty_2:
$00EC		L_PWM1_Change_Duty_3:
$010A		_PWM2_Change_Duty:
$011E		L_PWM2_Change_Duty_0:
$0125		L_PWM2_Change_Duty_1:
$0143		_main:
$0149		L_main_0:
$0156		L_main_2:
$0164		L_main_3:
$0172		L_main_4:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0006		PORTB
$0007		PORTC
$000A		PCLATH
$0012		T2CON
$0015		CCPR1L
$0017		CCP1CON
$001B		CCPR2L
$001D		CCP2CON
$0020		_j
$0021		_oj
$0022		FARG_Button+0
$0022		FARG_PWM1_Change_Duty+0
$0022		FARG_PWM2_Change_Duty+0
$0023		FARG_Button+1
$0024		FARG_Button+2
$0025		FARG_Button+3
$0026		Button_pMask_L0
$0027		FARG_PWM1_Init+0
$0027		FARG_PWM2_Init+0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0086		TRISB
$0087		TRISC
$0092		PR2
$009F		ADCON1


