;  ASM code generated by mikroVirtualMachine for PIC - V. 6.0.0.0
;  Date/Time: 14/01/2007 18.18.49
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2B7B			GOTO	_main
$0004	$	_Delay_1us:
;delays.c,2 :: 		void Delay_1us() {
;delays.c,3 :: 		Delay_us(1);
$0004	$3001			MOVLW	1
$0005	$1303			BCF	STATUS, RP1
$0006	$1283			BCF	STATUS, RP0
$0007	$00FA			MOVWF	STACK_10
$0008	$0BFA			DECFSZ	STACK_10, F
$0009	$2808			GOTO	$-1
$000A	$0000			NOP
;delays.c,4 :: 		}
$000B	$0008			RETURN
$000C	$	_Delay_5500us:
;delays.c,26 :: 		void Delay_5500us() {
;delays.c,27 :: 		Delay_us(5500);
$000C	$3024			MOVLW	36
$000D	$1303			BCF	STATUS, RP1
$000E	$1283			BCF	STATUS, RP0
$000F	$00FB			MOVWF	STACK_11
$0010	$30FF			MOVLW	255
$0011	$00FA			MOVWF	STACK_10
$0012	$0BFB			DECFSZ	STACK_11, F
$0013	$2815			GOTO	$+2
$0014	$2818			GOTO	$+4
$0015	$0BFA			DECFSZ	STACK_10, F
$0016	$2815			GOTO	$-1
$0017	$2812			GOTO	$-5
$0018	$309E			MOVLW	158
$0019	$00FA			MOVWF	STACK_10
$001A	$0BFA			DECFSZ	STACK_10, F
$001B	$281A			GOTO	$-1
;delays.c,28 :: 		}
$001C	$0008			RETURN
$001D	$	_Delay_50us:
;delays.c,14 :: 		void Delay_50us() {
;delays.c,15 :: 		Delay_us(50);
$001D	$3053			MOVLW	83
$001E	$1303			BCF	STATUS, RP1
$001F	$1283			BCF	STATUS, RP0
$0020	$00FA			MOVWF	STACK_10
$0021	$0BFA			DECFSZ	STACK_10, F
$0022	$2821			GOTO	$-1
;delays.c,16 :: 		}
$0023	$0008			RETURN
$0024	$	_Lcd_Cmd:
$0024	$1303			BCF	STATUS, RP1
$0025	$1283			BCF	STATUS, RP0
$0026	$0821			MOVF	LCD_port_address, 0
$0027	$0084			MOVWF	FSR
$0028	$0857			MOVF	FARG_Lcd_Cmd+0, 0
$0029	$1903			BTFSC	STATUS, Z
$002A	$282B			GOTO	L_Lcd_Cmd_0
$002B	$	L_Lcd_Cmd_0:
$002B	$1180			BCF	INDF, ___ENABLE
$002C	$1380			BCF	INDF, ___DB7
$002D	$1300			BCF	INDF, ___DB6
$002E	$1280			BCF	INDF, ___DB5
$002F	$1200			BCF	INDF, ___DB4
$0030	$1100			BCF	INDF, ___RS
$0031	$1BD7			BTFSC	FARG_Lcd_Cmd+0, 7
$0032	$1780			BSF	INDF, ___DB7
$0033	$1B57			BTFSC	FARG_Lcd_Cmd+0, 6
$0034	$1700			BSF	INDF, ___DB6
$0035	$1AD7			BTFSC	FARG_Lcd_Cmd+0, 5
$0036	$1680			BSF	INDF, ___DB5
$0037	$1A57			BTFSC	FARG_Lcd_Cmd+0, 4
$0038	$1600			BSF	INDF, ___DB4
$0039	$0822			MOVF	LCD_cmd_status, 0
$003A	$1903			BTFSC	STATUS, Z
$003B	$283E			GOTO	L_Lcd_Cmd_1
$003C	$1100			BCF	INDF, ___RS
$003D	$283F			GOTO	L_Lcd_Cmd_2
$003E	$	L_Lcd_Cmd_1:
$003E	$1500			BSF	INDF, ___RS
$003F	$	L_Lcd_Cmd_2:
$003F	$1580			BSF	INDF, ___ENABLE
$0040	$2004			CALL	_Delay_1us
$0041	$0857			MOVF	FARG_Lcd_Cmd+0, 0
$0042	$1903			BTFSC	STATUS, Z
$0043	$2844			GOTO	L_Lcd_Cmd_3
$0044	$	L_Lcd_Cmd_3:
$0044	$1180			BCF	INDF, ___ENABLE
$0045	$1380			BCF	INDF, ___DB7
$0046	$1300			BCF	INDF, ___DB6
$0047	$1280			BCF	INDF, ___DB5
$0048	$1200			BCF	INDF, ___DB4
$0049	$1100			BCF	INDF, ___RS
$004A	$19D7			BTFSC	FARG_Lcd_Cmd+0, 3
$004B	$1780			BSF	INDF, ___DB7
$004C	$1957			BTFSC	FARG_Lcd_Cmd+0, 2
$004D	$1700			BSF	INDF, ___DB6
$004E	$18D7			BTFSC	FARG_Lcd_Cmd+0, 1
$004F	$1680			BSF	INDF, ___DB5
$0050	$1857			BTFSC	FARG_Lcd_Cmd+0, 0
$0051	$1600			BSF	INDF, ___DB4
$0052	$0822			MOVF	LCD_cmd_status, 0
$0053	$1903			BTFSC	STATUS, Z
$0054	$2857			GOTO	L_Lcd_Cmd_4
$0055	$1100			BCF	INDF, ___RS
$0056	$2858			GOTO	L_Lcd_Cmd_5
$0057	$	L_Lcd_Cmd_4:
$0057	$1500			BSF	INDF, ___RS
$0058	$	L_Lcd_Cmd_5:
$0058	$1580			BSF	INDF, ___ENABLE
$0059	$2004			CALL	_Delay_1us
$005A	$1180			BCF	INDF, ___ENABLE
$005B	$0822			MOVF	LCD_cmd_status, 0
$005C	$1903			BTFSC	STATUS, Z
$005D	$2860			GOTO	L_Lcd_Cmd_6
$005E	$200C			CALL	_Delay_5500us
$005F	$2861			GOTO	L_Lcd_Cmd_7
$0060	$	L_Lcd_Cmd_6:
$0060	$201D			CALL	_Delay_50us
$0061	$	L_Lcd_Cmd_7:
$0061	$0008			RETURN
$0062	$	_Lcd_Chr_CP:
$0062	$1303			BCF	STATUS, RP1
$0063	$1283			BCF	STATUS, RP0
$0064	$01A2			CLRF	LCD_cmd_status, 1
$0065	$0856			MOVF	FARG_Lcd_Chr_CP+0, 0
$0066	$00D7			MOVWF	FARG_Lcd_Cmd+0
$0067	$2024			CALL	_Lcd_Cmd
$0068	$3001			MOVLW	1
$0069	$00A2			MOVWF	LCD_cmd_status
$006A	$0008			RETURN
$006B	$	_Delay_22us:
;delays.c,10 :: 		void Delay_22us() {
;delays.c,11 :: 		Delay_us(22);
$006B	$3024			MOVLW	36
$006C	$1303			BCF	STATUS, RP1
$006D	$1283			BCF	STATUS, RP0
$006E	$00FA			MOVWF	STACK_10
$006F	$0BFA			DECFSZ	STACK_10, F
$0070	$286F			GOTO	$-1
$0071	$0000			NOP
;delays.c,12 :: 		}
$0072	$0008			RETURN
$0073	$	_SDIV3232L:
$0073	$1303			BCF	STATUS, RP1
$0074	$1283			BCF	STATUS, RP0
$0075	$0874			MOVF	STACK_4, W
$0076	$02F8			SUBWF	STACK_8, F
$0077	$0875			MOVF	STACK_5, W
$0078	$1C03			BTFSS	STATUS, C
$0079	$0F75			INCFSZ	STACK_5, W
$007A	$02F9			SUBWF	STACK_9, F
$007B	$0876			MOVF	STACK_6, W
$007C	$1C03			BTFSS	STATUS, C
$007D	$0F76			INCFSZ	STACK_6, W
$007E	$02FA			SUBWF	STACK_10, F
$007F	$0877			MOVF	STACK_7, W
$0080	$1C03			BTFSS	STATUS, C
$0081	$0F77			INCFSZ	STACK_7, W
$0082	$02FB			SUBWF	STACK_11, F
$0083	$0DF3			RLF	STACK_3, F
$0084	$3007			MOVLW	7
$0085	$00FC			MOVWF	STACK_12
$0086	$	LOOPS3232A:
$0086	$0D73			RLF	STACK_3, W
$0087	$0DF8			RLF	STACK_8, F
$0088	$0DF9			RLF	STACK_9, F
$0089	$0DFA			RLF	STACK_10, F
$008A	$0DFB			RLF	STACK_11, F
$008B	$0874			MOVF	STACK_4, W
$008C	$1C73			BTFSS	STACK_3, 0
$008D	$289C			GOTO	SADD22LA
$008E	$02F8			SUBWF	STACK_8, F
$008F	$0875			MOVF	STACK_5, W
$0090	$1C03			BTFSS	STATUS, C
$0091	$0F75			INCFSZ	STACK_5, W
$0092	$02F9			SUBWF	STACK_9, F
$0093	$0876			MOVF	STACK_6, W
$0094	$1C03			BTFSS	STATUS, C
$0095	$0F76			INCFSZ	STACK_6, W
$0096	$02FA			SUBWF	STACK_10, F
$0097	$0877			MOVF	STACK_7, W
$0098	$1C03			BTFSS	STATUS, C
$0099	$0F77			INCFSZ	STACK_7, W
$009A	$02FB			SUBWF	STACK_11, F
$009B	$28A9			GOTO	SOK22LA
$009C	$	SADD22LA:
$009C	$07F8			ADDWF	STACK_8, F
$009D	$0875			MOVF	STACK_5, W
$009E	$1803			BTFSC	STATUS, C
$009F	$0F75			INCFSZ	STACK_5, W
$00A0	$07F9			ADDWF	STACK_9, F
$00A1	$0876			MOVF	STACK_6, W
$00A2	$1803			BTFSC	STATUS, C
$00A3	$0F76			INCFSZ	STACK_6, W
$00A4	$07FA			ADDWF	STACK_10, F
$00A5	$0877			MOVF	STACK_7, W
$00A6	$1803			BTFSC	STATUS, C
$00A7	$0F77			INCFSZ	STACK_7, W
$00A8	$07FB			ADDWF	STACK_11, F
$00A9	$	SOK22LA:
$00A9	$0DF3			RLF	STACK_3, F
$00AA	$0BFC			DECFSZ	STACK_12, F
$00AB	$2886			GOTO	LOOPS3232A
$00AC	$0D72			RLF	STACK_2, W
$00AD	$0DF8			RLF	STACK_8, F
$00AE	$0DF9			RLF	STACK_9, F
$00AF	$0DFA			RLF	STACK_10, F
$00B0	$0DFB			RLF	STACK_11, F
$00B1	$0874			MOVF	STACK_4, W
$00B2	$1C73			BTFSS	STACK_3, 0
$00B3	$28C2			GOTO	SADD22L8
$00B4	$02F8			SUBWF	STACK_8, F
$00B5	$0875			MOVF	STACK_5, W
$00B6	$1C03			BTFSS	STATUS, C
$00B7	$0F75			INCFSZ	STACK_5, W
$00B8	$02F9			SUBWF	STACK_9, F
$00B9	$0876			MOVF	STACK_6, W
$00BA	$1C03			BTFSS	STATUS, C
$00BB	$0F76			INCFSZ	STACK_6, W
$00BC	$02FA			SUBWF	STACK_10, F
$00BD	$0877			MOVF	STACK_7, W
$00BE	$1C03			BTFSS	STATUS, C
$00BF	$0F77			INCFSZ	STACK_7, W
$00C0	$02FB			SUBWF	STACK_11, F
$00C1	$28CF			GOTO	SOK22L8
$00C2	$	SADD22L8:
$00C2	$07F8			ADDWF	STACK_8, F
$00C3	$0875			MOVF	STACK_5, W
$00C4	$1803			BTFSC	STATUS, C
$00C5	$0F75			INCFSZ	STACK_5, W
$00C6	$07F9			ADDWF	STACK_9, F
$00C7	$0876			MOVF	STACK_6, W
$00C8	$1803			BTFSC	STATUS, C
$00C9	$0F76			INCFSZ	STACK_6, W
$00CA	$07FA			ADDWF	STACK_10, F
$00CB	$0877			MOVF	STACK_7, W
$00CC	$1803			BTFSC	STATUS, C
$00CD	$0F77			INCFSZ	STACK_7, W
$00CE	$07FB			ADDWF	STACK_11, F
$00CF	$	SOK22L8:
$00CF	$0DF2			RLF	STACK_2, F
$00D0	$3007			MOVLW	7
$00D1	$00FC			MOVWF	STACK_12
$00D2	$	LOOPS3232B:
$00D2	$0D72			RLF	STACK_2, W
$00D3	$0DF8			RLF	STACK_8, F
$00D4	$0DF9			RLF	STACK_9, F
$00D5	$0DFA			RLF	STACK_10, F
$00D6	$0DFB			RLF	STACK_11, F
$00D7	$0874			MOVF	STACK_4, W
$00D8	$1C72			BTFSS	STACK_2, 0
$00D9	$28E8			GOTO	SADD22LB
$00DA	$02F8			SUBWF	STACK_8, F
$00DB	$0875			MOVF	STACK_5, W
$00DC	$1C03			BTFSS	STATUS, C
$00DD	$0F75			INCFSZ	STACK_5, W
$00DE	$02F9			SUBWF	STACK_9, F
$00DF	$0876			MOVF	STACK_6, W
$00E0	$1C03			BTFSS	STATUS, C
$00E1	$0F76			INCFSZ	STACK_6, W
$00E2	$02FA			SUBWF	STACK_10, F
$00E3	$0877			MOVF	STACK_7, W
$00E4	$1C03			BTFSS	STATUS, C
$00E5	$0F77			INCFSZ	STACK_7, W
$00E6	$02FB			SUBWF	STACK_11, F
$00E7	$28F5			GOTO	SOK22LB
$00E8	$	SADD22LB:
$00E8	$07F8			ADDWF	STACK_8, F
$00E9	$0875			MOVF	STACK_5, W
$00EA	$1803			BTFSC	STATUS, C
$00EB	$0F75			INCFSZ	STACK_5, W
$00EC	$07F9			ADDWF	STACK_9, F
$00ED	$0876			MOVF	STACK_6, W
$00EE	$1803			BTFSC	STATUS, C
$00EF	$0F76			INCFSZ	STACK_6, W
$00F0	$07FA			ADDWF	STACK_10, F
$00F1	$0877			MOVF	STACK_7, W
$00F2	$1803			BTFSC	STATUS, C
$00F3	$0F77			INCFSZ	STACK_7, W
$00F4	$07FB			ADDWF	STACK_11, F
$00F5	$	SOK22LB:
$00F5	$0DF2			RLF	STACK_2, F
$00F6	$0BFC			DECFSZ	STACK_12, F
$00F7	$28D2			GOTO	LOOPS3232B
$00F8	$0D71			RLF	STACK_1, W
$00F9	$0DF8			RLF	STACK_8, F
$00FA	$0DF9			RLF	STACK_9, F
$00FB	$0DFA			RLF	STACK_10, F
$00FC	$0DFB			RLF	STACK_11, F
$00FD	$0874			MOVF	STACK_4, W
$00FE	$1C72			BTFSS	STACK_2, 0
$00FF	$290E			GOTO	SADD22L16
$0100	$02F8			SUBWF	STACK_8, F
$0101	$0875			MOVF	STACK_5, W
$0102	$1C03			BTFSS	STATUS, C
$0103	$0F75			INCFSZ	STACK_5, W
$0104	$02F9			SUBWF	STACK_9, F
$0105	$0876			MOVF	STACK_6, W
$0106	$1C03			BTFSS	STATUS, C
$0107	$0F76			INCFSZ	STACK_6, W
$0108	$02FA			SUBWF	STACK_10, F
$0109	$0877			MOVF	STACK_7, W
$010A	$1C03			BTFSS	STATUS, C
$010B	$0F77			INCFSZ	STACK_7, W
$010C	$02FB			SUBWF	STACK_11, F
$010D	$291B			GOTO	SOK22L16
$010E	$	SADD22L16:
$010E	$07F8			ADDWF	STACK_8, F
$010F	$0875			MOVF	STACK_5, W
$0110	$1803			BTFSC	STATUS, C
$0111	$0F75			INCFSZ	STACK_5, W
$0112	$07F9			ADDWF	STACK_9, F
$0113	$0876			MOVF	STACK_6, W
$0114	$1803			BTFSC	STATUS, C
$0115	$0F76			INCFSZ	STACK_6, W
$0116	$07FA			ADDWF	STACK_10, F
$0117	$0877			MOVF	STACK_7, W
$0118	$1803			BTFSC	STATUS, C
$0119	$0F77			INCFSZ	STACK_7, W
$011A	$07FB			ADDWF	STACK_11, F
$011B	$	SOK22L16:
$011B	$0DF1			RLF	STACK_1, F
$011C	$3007			MOVLW	7
$011D	$00FC			MOVWF	STACK_12
$011E	$	LOOPS3232C:
$011E	$0D71			RLF	STACK_1, W
$011F	$0DF8			RLF	STACK_8, F
$0120	$0DF9			RLF	STACK_9, F
$0121	$0DFA			RLF	STACK_10, F
$0122	$0DFB			RLF	STACK_11, F
$0123	$0874			MOVF	STACK_4, W
$0124	$1C71			BTFSS	STACK_1, 0
$0125	$2934			GOTO	SADD22LC
$0126	$02F8			SUBWF	STACK_8, F
$0127	$0875			MOVF	STACK_5, W
$0128	$1C03			BTFSS	STATUS, C
$0129	$0F75			INCFSZ	STACK_5, W
$012A	$02F9			SUBWF	STACK_9, F
$012B	$0876			MOVF	STACK_6, W
$012C	$1C03			BTFSS	STATUS, C
$012D	$0F76			INCFSZ	STACK_6, W
$012E	$02FA			SUBWF	STACK_10, F
$012F	$0877			MOVF	STACK_7, W
$0130	$1C03			BTFSS	STATUS, C
$0131	$0F77			INCFSZ	STACK_7, W
$0132	$02FB			SUBWF	STACK_11, F
$0133	$2941			GOTO	SOK22LC
$0134	$	SADD22LC:
$0134	$07F8			ADDWF	STACK_8, F
$0135	$0875			MOVF	STACK_5, W
$0136	$1803			BTFSC	STATUS, C
$0137	$0F75			INCFSZ	STACK_5, W
$0138	$07F9			ADDWF	STACK_9, F
$0139	$0876			MOVF	STACK_6, W
$013A	$1803			BTFSC	STATUS, C
$013B	$0F76			INCFSZ	STACK_6, W
$013C	$07FA			ADDWF	STACK_10, F
$013D	$0877			MOVF	STACK_7, W
$013E	$1803			BTFSC	STATUS, C
$013F	$0F77			INCFSZ	STACK_7, W
$0140	$07FB			ADDWF	STACK_11, F
$0141	$	SOK22LC:
$0141	$0DF1			RLF	STACK_1, F
$0142	$0BFC			DECFSZ	STACK_12, F
$0143	$291E			GOTO	LOOPS3232C
$0144	$0D70			RLF	STACK_0, W
$0145	$0DF8			RLF	STACK_8, F
$0146	$0DF9			RLF	STACK_9, F
$0147	$0DFA			RLF	STACK_10, F
$0148	$0DFB			RLF	STACK_11, F
$0149	$0874			MOVF	STACK_4, W
$014A	$1C71			BTFSS	STACK_1, 0
$014B	$295A			GOTO	SADD22L24
$014C	$02F8			SUBWF	STACK_8, F
$014D	$0875			MOVF	STACK_5, W
$014E	$1C03			BTFSS	STATUS, C
$014F	$0F75			INCFSZ	STACK_5, W
$0150	$02F9			SUBWF	STACK_9, F
$0151	$0876			MOVF	STACK_6, W
$0152	$1C03			BTFSS	STATUS, C
$0153	$0F76			INCFSZ	STACK_6, W
$0154	$02FA			SUBWF	STACK_10, F
$0155	$0877			MOVF	STACK_7, W
$0156	$1C03			BTFSS	STATUS, C
$0157	$0F77			INCFSZ	STACK_7, W
$0158	$02FB			SUBWF	STACK_11, F
$0159	$2967			GOTO	SOK22L24
$015A	$	SADD22L24:
$015A	$07F8			ADDWF	STACK_8, F
$015B	$0875			MOVF	STACK_5, W
$015C	$1803			BTFSC	STATUS, C
$015D	$0F75			INCFSZ	STACK_5, W
$015E	$07F9			ADDWF	STACK_9, F
$015F	$0876			MOVF	STACK_6, W
$0160	$1803			BTFSC	STATUS, C
$0161	$0F76			INCFSZ	STACK_6, W
$0162	$07FA			ADDWF	STACK_10, F
$0163	$0877			MOVF	STACK_7, W
$0164	$1803			BTFSC	STATUS, C
$0165	$0F77			INCFSZ	STACK_7, W
$0166	$07FB			ADDWF	STACK_11, F
$0167	$	SOK22L24:
$0167	$0DF0			RLF	STACK_0, F
$0168	$3007			MOVLW	7
$0169	$00FC			MOVWF	STACK_12
$016A	$	LOOPS3232D:
$016A	$0D70			RLF	STACK_0, W
$016B	$0DF8			RLF	STACK_8, F
$016C	$0DF9			RLF	STACK_9, F
$016D	$0DFA			RLF	STACK_10, F
$016E	$0DFB			RLF	STACK_11, F
$016F	$0874			MOVF	STACK_4, W
$0170	$1C70			BTFSS	STACK_0, 0
$0171	$2980			GOTO	SADD22LD
$0172	$02F8			SUBWF	STACK_8, F
$0173	$0875			MOVF	STACK_5, W
$0174	$1C03			BTFSS	STATUS, C
$0175	$0F75			INCFSZ	STACK_5, W
$0176	$02F9			SUBWF	STACK_9, F
$0177	$0876			MOVF	STACK_6, W
$0178	$1C03			BTFSS	STATUS, C
$0179	$0F76			INCFSZ	STACK_6, W
$017A	$02FA			SUBWF	STACK_10, F
$017B	$0877			MOVF	STACK_7, W
$017C	$1C03			BTFSS	STATUS, C
$017D	$0F77			INCFSZ	STACK_7, W
$017E	$02FB			SUBWF	STACK_11, F
$017F	$298D			GOTO	SOK22LD
$0180	$	SADD22LD:
$0180	$07F8			ADDWF	STACK_8, F
$0181	$0875			MOVF	STACK_5, W
$0182	$1803			BTFSC	STATUS, C
$0183	$0F75			INCFSZ	STACK_5, W
$0184	$07F9			ADDWF	STACK_9, F
$0185	$0876			MOVF	STACK_6, W
$0186	$1803			BTFSC	STATUS, C
$0187	$0F76			INCFSZ	STACK_6, W
$0188	$07FA			ADDWF	STACK_10, F
$0189	$0877			MOVF	STACK_7, W
$018A	$1803			BTFSC	STATUS, C
$018B	$0F77			INCFSZ	STACK_7, W
$018C	$07FB			ADDWF	STACK_11, F
$018D	$	SOK22LD:
$018D	$0DF0			RLF	STACK_0, F
$018E	$0BFC			DECFSZ	STACK_12, F
$018F	$296A			GOTO	LOOPS3232D
$0190	$1870			BTFSC	STACK_0, 0
$0191	$29A0			GOTO	SOK22L
$0192	$0874			MOVF	STACK_4, W
$0193	$07F8			ADDWF	STACK_8, F
$0194	$0875			MOVF	STACK_5, W
$0195	$1803			BTFSC	STATUS, C
$0196	$0F75			INCFSZ	STACK_5, W
$0197	$07F9			ADDWF	STACK_9, F
$0198	$0876			MOVF	STACK_6, W
$0199	$1803			BTFSC	STATUS, C
$019A	$0F76			INCFSZ	STACK_6, W
$019B	$07FA			ADDWF	STACK_10, F
$019C	$0877			MOVF	STACK_7, W
$019D	$1803			BTFSC	STATUS, C
$019E	$0F77			INCFSZ	STACK_7, W
$019F	$07FB			ADDWF	STACK_11, F
$01A0	$	SOK22L:
$01A0	$0008			RETURN
$01A1	$	_COMFREM:
$01A1	$1303			BCF	STATUS, RP1
$01A2	$1283			BCF	STATUS, RP0
$01A3	$09FB			COMF	STACK_11, F
$01A4	$09FA			COMF	STACK_10, F
$01A5	$09F9			COMF	STACK_9, F
$01A6	$09F8			COMF	STACK_8, F
$01A7	$0AF8			INCF	STACK_8, F
$01A8	$1903			BTFSC	STATUS, Z
$01A9	$0AF9			INCF	STACK_9, F
$01AA	$1903			BTFSC	STATUS, Z
$01AB	$0AFA			INCF	STACK_10, F
$01AC	$1903			BTFSC	STATUS, Z
$01AD	$0AFB			INCF	STACK_11, F
$01AE	$0008			RETURN
$01AF	$	_Lcd_Init:
$01AF	$200C			CALL	_Delay_5500us
$01B0	$200C			CALL	_Delay_5500us
$01B1	$200C			CALL	_Delay_5500us
$01B2	$0852			MOVF	FARG_Lcd_Init+0, 0
$01B3	$00A1			MOVWF	LCD_port_address
$01B4	$0852			MOVF	FARG_Lcd_Init+0, 0
$01B5	$0084			MOVWF	FSR
$01B6	$0180			CLRF	INDF, 1
$01B7	$1784			BSF	FSR, 7
$01B8	$0180			CLRF	INDF
$01B9	$1384			BCF	FSR, 7
$01BA	$1680			BSF	INDF, ___DB5
$01BB	$1600			BSF	INDF, ___DB4
$01BC	$1580			BSF	INDF, ___ENABLE
$01BD	$1180			BCF	INDF, ___ENABLE
$01BE	$200C			CALL	_Delay_5500us
$01BF	$1580			BSF	INDF, ___ENABLE
$01C0	$1180			BCF	INDF, ___ENABLE
$01C1	$200C			CALL	_Delay_5500us
$01C2	$1580			BSF	INDF, ___ENABLE
$01C3	$1180			BCF	INDF, ___ENABLE
$01C4	$200C			CALL	_Delay_5500us
$01C5	$1680			BSF	INDF, ___DB5
$01C6	$1200			BCF	INDF, ___DB4
$01C7	$1580			BSF	INDF, ___ENABLE
$01C8	$1180			BCF	INDF, ___ENABLE
$01C9	$200C			CALL	_Delay_5500us
$01CA	$0180			CLRF	INDF
$01CB	$1680			BSF	INDF, ___DB5
$01CC	$1580			BSF	INDF, ___ENABLE
$01CD	$1180			BCF	INDF, ___ENABLE
$01CE	$0180			CLRF	INDF
$01CF	$1780			BSF	INDF, ___DB7
$01D0	$1580			BSF	INDF, ___ENABLE
$01D1	$1180			BCF	INDF, ___ENABLE
$01D2	$200C			CALL	_Delay_5500us
$01D3	$0180			CLRF	INDF
$01D4	$1600			BSF	INDF, ___DB4
$01D5	$1580			BSF	INDF, ___ENABLE
$01D6	$1180			BCF	INDF, ___ENABLE
$01D7	$0180			CLRF	INDF
$01D8	$1580			BSF	INDF, ___ENABLE
$01D9	$1180			BCF	INDF, ___ENABLE
$01DA	$200C			CALL	_Delay_5500us
$01DB	$0180			CLRF	INDF
$01DC	$1580			BSF	INDF, ___ENABLE
$01DD	$1180			BCF	INDF, ___ENABLE
$01DE	$1600			BSF	INDF, ___DB4
$01DF	$1580			BSF	INDF, ___ENABLE
$01E0	$1180			BCF	INDF, ___ENABLE
$01E1	$200C			CALL	_Delay_5500us
$01E2	$0180			CLRF	INDF
$01E3	$1580			BSF	INDF, ___ENABLE
$01E4	$1180			BCF	INDF, ___ENABLE
$01E5	$1600			BSF	INDF, ___DB4
$01E6	$1680			BSF	INDF, ___DB5
$01E7	$1700			BSF	INDF, ___DB6
$01E8	$1780			BSF	INDF, ___DB7
$01E9	$1580			BSF	INDF, ___ENABLE
$01EA	$1180			BCF	INDF, ___ENABLE
$01EB	$200C			CALL	_Delay_5500us
$01EC	$3001			MOVLW	1
$01ED	$00A2			MOVWF	LCD_cmd_status
$01EE	$0008			RETURN
$01EF	$	_LCD_Out:
$01EF	$1303			BCF	STATUS, RP1
$01F0	$1283			BCF	STATUS, RP0
$01F1	$0852			MOVF	FARG_LCD_Out+0, 0
$01F2	$1903			BTFSC	STATUS, Z
$01F3	$29F4			GOTO	L_LCD_Out_18
$01F4	$	L_LCD_Out_18:
$01F4	$2A04			GOTO	L_LCD_Out_19
$01F5	$	L_LCD_Out_21:
$01F5	$3080			MOVLW	128
$01F6	$00D2			MOVWF	FARG_LCD_Out+0
$01F7	$2A15			GOTO	L_LCD_Out_20
$01F8	$	L_LCD_Out_22:
$01F8	$30C0			MOVLW	192
$01F9	$00D2			MOVWF	FARG_LCD_Out+0
$01FA	$2A15			GOTO	L_LCD_Out_20
$01FB	$	L_LCD_Out_23:
$01FB	$3094			MOVLW	148
$01FC	$00D2			MOVWF	FARG_LCD_Out+0
$01FD	$2A15			GOTO	L_LCD_Out_20
$01FE	$	L_LCD_Out_24:
$01FE	$30D4			MOVLW	212
$01FF	$00D2			MOVWF	FARG_LCD_Out+0
$0200	$2A15			GOTO	L_LCD_Out_20
$0201	$	L_LCD_Out_25:
$0201	$3080			MOVLW	128
$0202	$00D2			MOVWF	FARG_LCD_Out+0
$0203	$2A15			GOTO	L_LCD_Out_20
$0204	$	L_LCD_Out_19:
$0204	$0852			MOVF	FARG_LCD_Out+0, 0
$0205	$3A01			XORLW	1
$0206	$1903			BTFSC	STATUS, Z
$0207	$29F5			GOTO	L_LCD_Out_21
$0208	$0852			MOVF	FARG_LCD_Out+0, 0
$0209	$3A02			XORLW	2
$020A	$1903			BTFSC	STATUS, Z
$020B	$29F8			GOTO	L_LCD_Out_22
$020C	$0852			MOVF	FARG_LCD_Out+0, 0
$020D	$3A03			XORLW	3
$020E	$1903			BTFSC	STATUS, Z
$020F	$29FB			GOTO	L_LCD_Out_23
$0210	$0852			MOVF	FARG_LCD_Out+0, 0
$0211	$3A04			XORLW	4
$0212	$1903			BTFSC	STATUS, Z
$0213	$29FE			GOTO	L_LCD_Out_24
$0214	$2A01			GOTO	L_LCD_Out_25
$0215	$	L_LCD_Out_20:
$0215	$0353			DECF	FARG_LCD_Out+1, 0
$0216	$00F0			MOVWF	STACK_0
$0217	$0852			MOVF	FARG_LCD_Out+0, 0
$0218	$07F0			ADDWF	STACK_0, 1
$0219	$0870			MOVF	STACK_0, 0
$021A	$00D2			MOVWF	FARG_LCD_Out+0
$021B	$0870			MOVF	STACK_0, 0
$021C	$00D7			MOVWF	FARG_Lcd_Cmd+0
$021D	$2024			CALL	_Lcd_Cmd
$021E	$01A2			CLRF	LCD_cmd_status, 1
$021F	$01D5			CLRF	LCD_Out_i_L0, 1
$0220	$	L_LCD_Out_26:
$0220	$0855			MOVF	LCD_Out_i_L0, 0
$0221	$0754			ADDWF	FARG_LCD_Out+2, 0
$0222	$0084			MOVWF	FSR
$0223	$0800			MOVF	INDF, 0
$0224	$00F0			MOVWF	STACK_0
$0225	$0870			MOVF	STACK_0, 0
$0226	$1903			BTFSC	STATUS, Z
$0227	$2A30			GOTO	L_LCD_Out_27
$0228	$0855			MOVF	LCD_Out_i_L0, 0
$0229	$0754			ADDWF	FARG_LCD_Out+2, 0
$022A	$0084			MOVWF	FSR
$022B	$0800			MOVF	INDF, 0
$022C	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$022D	$2062			CALL	_Lcd_Chr_CP
$022E	$0AD5			INCF	LCD_Out_i_L0, 1
$022F	$2A20			GOTO	L_LCD_Out_26
$0230	$	L_LCD_Out_27:
$0230	$3001			MOVLW	1
$0231	$00A2			MOVWF	LCD_cmd_status
$0232	$0008			RETURN
$0233	$	_Adc_Read:
$0233	$1303			BCF	STATUS, RP1
$0234	$1283			BCF	STATUS, RP0
$0235	$019F			CLRF	ADCON0, 1
$0236	$30C0			MOVLW	192
$0237	$049F			IORWF	ADCON0, 1
$0238	$1683			BSF	STATUS, RP0
$0239	$171F			BSF	ADCON1, 6
$023A	$179F			BSF	ADCON1, 7
$023B	$1283			BCF	STATUS, RP0
$023C	$0852			MOVF	FARG_Adc_Read+0, 0
$023D	$00F0			MOVWF	STACK_0
$023E	$0DF0			RLF	STACK_0, 1
$023F	$1070			BCF	STACK_0, 0
$0240	$0DF0			RLF	STACK_0, 1
$0241	$1070			BCF	STACK_0, 0
$0242	$0DF0			RLF	STACK_0, 1
$0243	$1070			BCF	STACK_0, 0
$0244	$0870			MOVF	STACK_0, 0
$0245	$049F			IORWF	ADCON0, 1
$0246	$141F			BSF	ADCON0, 0
$0247	$206B			CALL	_Delay_22us
$0248	$151F			BSF	ADCON0, 2
$0249	$	L_Adc_Read_0:
$0249	$1D1F			BTFSS	ADCON0, 2
$024A	$2A4D			GOTO	L_Adc_Read_1
$024B	$0000			NOP
$024C	$2A49			GOTO	L_Adc_Read_0
$024D	$	L_Adc_Read_1:
$024D	$101F			BCF	ADCON0, 0
$024E	$3008			MOVLW	8
$024F	$00F2			MOVWF	STACK_2
$0250	$081E			MOVF	ADRESH, 0
$0251	$00F0			MOVWF	STACK_0
$0252	$01F1			CLRF	STACK_0+1
$0253	$0872			MOVF	STACK_2, 0
$0254	$	L_Adc_Read_2:
$0254	$1903			BTFSC	STATUS, Z
$0255	$2A5B			GOTO	L_Adc_Read_3
$0256	$0DF0			RLF	STACK_0, 1
$0257	$0DF1			RLF	STACK_0+1, 1
$0258	$1070			BCF	STACK_0, 0
$0259	$3FFF			ADDLW	255
$025A	$2A54			GOTO	L_Adc_Read_2
$025B	$	L_Adc_Read_3:
$025B	$1683			BSF	STATUS, RP0
$025C	$081E			MOVF	ADRESL, 0
$025D	$04F0			IORWF	STACK_0, 1
$025E	$3000			MOVLW	0
$025F	$04F1			IORWF	STACK_0+1, 1
$0260	$0008			RETURN
$0261	$	_Lcd_Chr:
$0261	$1303			BCF	STATUS, RP1
$0262	$1283			BCF	STATUS, RP0
$0263	$0852			MOVF	FARG_Lcd_Chr+0, 0
$0264	$1903			BTFSC	STATUS, Z
$0265	$2A66			GOTO	L_Lcd_Chr_8
$0266	$	L_Lcd_Chr_8:
$0266	$2A76			GOTO	L_Lcd_Chr_9
$0267	$	L_Lcd_Chr_11:
$0267	$3080			MOVLW	128
$0268	$00D2			MOVWF	FARG_Lcd_Chr+0
$0269	$2A87			GOTO	L_Lcd_Chr_10
$026A	$	L_Lcd_Chr_12:
$026A	$30C0			MOVLW	192
$026B	$00D2			MOVWF	FARG_Lcd_Chr+0
$026C	$2A87			GOTO	L_Lcd_Chr_10
$026D	$	L_Lcd_Chr_13:
$026D	$3094			MOVLW	148
$026E	$00D2			MOVWF	FARG_Lcd_Chr+0
$026F	$2A87			GOTO	L_Lcd_Chr_10
$0270	$	L_Lcd_Chr_14:
$0270	$30D4			MOVLW	212
$0271	$00D2			MOVWF	FARG_Lcd_Chr+0
$0272	$2A87			GOTO	L_Lcd_Chr_10
$0273	$	L_Lcd_Chr_15:
$0273	$3080			MOVLW	128
$0274	$00D2			MOVWF	FARG_Lcd_Chr+0
$0275	$2A87			GOTO	L_Lcd_Chr_10
$0276	$	L_Lcd_Chr_9:
$0276	$0852			MOVF	FARG_Lcd_Chr+0, 0
$0277	$3A01			XORLW	1
$0278	$1903			BTFSC	STATUS, Z
$0279	$2A67			GOTO	L_Lcd_Chr_11
$027A	$0852			MOVF	FARG_Lcd_Chr+0, 0
$027B	$3A02			XORLW	2
$027C	$1903			BTFSC	STATUS, Z
$027D	$2A6A			GOTO	L_Lcd_Chr_12
$027E	$0852			MOVF	FARG_Lcd_Chr+0, 0
$027F	$3A03			XORLW	3
$0280	$1903			BTFSC	STATUS, Z
$0281	$2A6D			GOTO	L_Lcd_Chr_13
$0282	$0852			MOVF	FARG_Lcd_Chr+0, 0
$0283	$3A04			XORLW	4
$0284	$1903			BTFSC	STATUS, Z
$0285	$2A70			GOTO	L_Lcd_Chr_14
$0286	$2A73			GOTO	L_Lcd_Chr_15
$0287	$	L_Lcd_Chr_10:
$0287	$0353			DECF	FARG_Lcd_Chr+1, 0
$0288	$00F0			MOVWF	STACK_0
$0289	$0852			MOVF	FARG_Lcd_Chr+0, 0
$028A	$07F0			ADDWF	STACK_0, 1
$028B	$0870			MOVF	STACK_0, 0
$028C	$00D2			MOVWF	FARG_Lcd_Chr+0
$028D	$3001			MOVLW	1
$028E	$00A2			MOVWF	LCD_cmd_status
$028F	$0870			MOVF	STACK_0, 0
$0290	$00D7			MOVWF	FARG_Lcd_Cmd+0
$0291	$2024			CALL	_Lcd_Cmd
$0292	$01A2			CLRF	LCD_cmd_status, 1
$0293	$0854			MOVF	FARG_Lcd_Chr+2, 0
$0294	$00D7			MOVWF	FARG_Lcd_Cmd+0
$0295	$2024			CALL	_Lcd_Cmd
$0296	$3001			MOVLW	1
$0297	$00A2			MOVWF	LCD_cmd_status
$0298	$0008			RETURN
$0299	$	_Div_32x32_S:
$0299	$1303			BCF	STATUS, RP1
$029A	$1283			BCF	STATUS, RP0
$029B	$	FXD3232S:
$029B	$01FC			CLRF	STACK_12
$029C	$1BF7			BTFSC	STACK_7, 7
$029D	$0AFC			INCF	STACK_12, F
$029E	$01FD			CLRF	STACK_13
$029F	$01FB			CLRF	STACK_11
$02A0	$01FA			CLRF	STACK_10
$02A1	$01F9			CLRF	STACK_9
$02A2	$01F8			CLRF	STACK_8
$02A3	$0873			MOVF	STACK_3, W
$02A4	$0472			IORWF	STACK_2, W
$02A5	$0471			IORWF	STACK_1, W
$02A6	$0470			IORWF	STACK_0, W
$02A7	$1903			BTFSC	STATUS, Z
$02A8	$2B2D			GOTO	END_ALL
$02A9	$0873			MOVF	STACK_3, W
$02AA	$0677			XORWF	STACK_7, W
$02AB	$00A0			MOVWF	___math_tempb
$02AC	$1BA0			BTFSC	___math_tempb, 7
$02AD	$09FD			COMF	STACK_13, F
$02AE	$1FF7			BTFSS	STACK_7, 7
$02AF	$2ABB			GOTO	CA3232S
$02B0	$09F4			COMF	STACK_4, F
$02B1	$09F5			COMF	STACK_5, F
$02B2	$09F6			COMF	STACK_6, F
$02B3	$09F7			COMF	STACK_7, F
$02B4	$0AF4			INCF	STACK_4, F
$02B5	$1903			BTFSC	STATUS, Z
$02B6	$0AF5			INCF	STACK_5, F
$02B7	$1903			BTFSC	STATUS, Z
$02B8	$0AF6			INCF	STACK_6, F
$02B9	$1903			BTFSC	STATUS, Z
$02BA	$0AF7			INCF	STACK_7, F
$02BB	$	CA3232S:
$02BB	$1FF3			BTFSS	STACK_3, 7
$02BC	$2AC8			GOTO	C3232SX
$02BD	$09F0			COMF	STACK_0, F
$02BE	$09F1			COMF	STACK_1, F
$02BF	$09F2			COMF	STACK_2, F
$02C0	$09F3			COMF	STACK_3, F
$02C1	$0AF0			INCF	STACK_0, F
$02C2	$1903			BTFSC	STATUS, Z
$02C3	$0AF1			INCF	STACK_1, F
$02C4	$1903			BTFSC	STATUS, Z
$02C5	$0AF2			INCF	STACK_2, F
$02C6	$1903			BTFSC	STATUS, Z
$02C7	$0AF3			INCF	STACK_3, F
$02C8	$	C3232SX:
$02C8	$0873			MOVF	STACK_3, W
$02C9	$0477			IORWF	STACK_7, W
$02CA	$00A0			MOVWF	___math_tempb
$02CB	$1BA0			BTFSC	___math_tempb, 7
$02CC	$2AE9			GOTO	C3232SX1
$02CD	$	C3232S:
$02CD	$2073			CALL	_SDIV3232L
$02CE	$	C3232S2:
$02CE	$1BFC			BTFSC	STACK_12, 7
$02CF	$2B06			GOTO	C3232SX4
$02D0	$	C3232SOK:
$02D0	$1FFD			BTFSS	STACK_13, 7
$02D1	$2B2D			GOTO	END_ALL
$02D2	$09F0			COMF	STACK_0, F
$02D3	$09F1			COMF	STACK_1, F
$02D4	$09F2			COMF	STACK_2, F
$02D5	$09F3			COMF	STACK_3, F
$02D6	$0AF0			INCF	STACK_0, F
$02D7	$1903			BTFSC	STATUS, Z
$02D8	$0AF1			INCF	STACK_1, F
$02D9	$1903			BTFSC	STATUS, Z
$02DA	$0AF2			INCF	STACK_2, F
$02DB	$1903			BTFSC	STATUS, Z
$02DC	$0AF3			INCF	STACK_3, F
$02DD	$09F8			COMF	STACK_8, F
$02DE	$09F9			COMF	STACK_9, F
$02DF	$09FA			COMF	STACK_10, F
$02E0	$09FB			COMF	STACK_11, F
$02E1	$0AF8			INCF	STACK_8, F
$02E2	$1903			BTFSC	STATUS, Z
$02E3	$0AF9			INCF	STACK_9, F
$02E4	$1903			BTFSC	STATUS, Z
$02E5	$0AFA			INCF	STACK_10, F
$02E6	$1903			BTFSC	STATUS, Z
$02E7	$0AFB			INCF	STACK_11, F
$02E8	$2B2D			GOTO	END_ALL
$02E9	$	C3232SX1:
$02E9	$1FF7			BTFSS	STACK_7, 7
$02EA	$2B00			GOTO	C3232SX3
$02EB	$1BF3			BTFSC	STACK_3, 7
$02EC	$2AFA			GOTO	C3232SX2
$02ED	$0873			MOVF	STACK_3, W
$02EE	$00FB			MOVWF	STACK_11
$02EF	$0872			MOVF	STACK_2, W
$02F0	$00FA			MOVWF	STACK_10
$02F1	$0871			MOVF	STACK_1, W
$02F2	$00F9			MOVWF	STACK_9
$02F3	$0870			MOVF	STACK_0, W
$02F4	$00F8			MOVWF	STACK_8
$02F5	$01F3			CLRF	STACK_3
$02F6	$01F2			CLRF	STACK_2
$02F7	$01F1			CLRF	STACK_1
$02F8	$01F0			CLRF	STACK_0
$02F9	$2AD0			GOTO	C3232SOK
$02FA	$	C3232SX2:
$02FA	$01F3			CLRF	STACK_3
$02FB	$01F2			CLRF	STACK_2
$02FC	$01F1			CLRF	STACK_1
$02FD	$01F0			CLRF	STACK_0
$02FE	$0AF0			INCF	STACK_0, F
$02FF	$3400			RETLW	0x00
$0300	$	C3232SX3:
$0300	$09F3			COMF	STACK_3, F
$0301	$09F2			COMF	STACK_2, F
$0302	$09F1			COMF	STACK_1, F
$0303	$09F0			COMF	STACK_0, F
$0304	$17FC			BSF	STACK_12, 7
$0305	$2ACD			GOTO	C3232S
$0306	$	C3232SX4:
$0306	$0AF8			INCF	STACK_8, F
$0307	$1903			BTFSC	STATUS, Z
$0308	$0AF9			INCF	STACK_9, F
$0309	$1903			BTFSC	STATUS, Z
$030A	$0AFA			INCF	STACK_10, F
$030B	$1903			BTFSC	STATUS, Z
$030C	$0AFB			INCF	STACK_11, F
$030D	$0874			MOVF	STACK_4, W
$030E	$0278			SUBWF	STACK_8, W
$030F	$1D03			BTFSS	STATUS, Z
$0310	$2AD0			GOTO	C3232SOK
$0311	$0875			MOVF	STACK_5, W
$0312	$0279			SUBWF	STACK_9, W
$0313	$1D03			BTFSS	STATUS, Z
$0314	$2AD0			GOTO	C3232SOK
$0315	$0876			MOVF	STACK_6, W
$0316	$027A			SUBWF	STACK_10, W
$0317	$1D03			BTFSS	STATUS, Z
$0318	$2AD0			GOTO	C3232SOK
$0319	$0877			MOVF	STACK_7, W
$031A	$027B			SUBWF	STACK_11, W
$031B	$1D03			BTFSS	STATUS, Z
$031C	$2AD0			GOTO	C3232SOK
$031D	$01FB			CLRF	STACK_11
$031E	$01FA			CLRF	STACK_10
$031F	$01F9			CLRF	STACK_9
$0320	$01F8			CLRF	STACK_8
$0321	$0AF0			INCF	STACK_0, F
$0322	$1903			BTFSC	STATUS, Z
$0323	$0AF1			INCF	STACK_1, F
$0324	$1903			BTFSC	STATUS, Z
$0325	$0AF2			INCF	STACK_2, F
$0326	$1903			BTFSC	STATUS, Z
$0327	$0AF3			INCF	STACK_3, F
$0328	$1FF3			BTFSS	STACK_3, 7
$0329	$2AD0			GOTO	C3232SOK
$032A	$01A0			CLRF	___math_tempb
$032B	$1620			BSF	___math_tempb, 4
$032C	$34FF			RETLW	0xFF
$032D	$	END_ALL:
$032D	$01A0			CLRF	___math_tempb
$032E	$1C7C			BTFSS	STACK_12, 0
$032F	$2B31			GOTO	avoid_comfrem
$0330	$21A1			CALL	_COMFREM
$0331	$	avoid_comfrem:
$0331	$3F00			ADDLW	0x00
$0332	$0008			RETURN
$0333	$	_Mul_16x16_U:
$0333	$1303			BCF	STATUS, RP1
$0334	$1283			BCF	STATUS, RP0
$0335	$01FB			CLRF	STACK_11
$0336	$01FA			CLRF	STACK_10
$0337	$01F9			CLRF	STACK_9
$0338	$3080			MOVLW	128
$0339	$00F8			MOVWF	STACK_8
$033A	$0CF1			RRF	STACK_1, F
$033B	$0CF0			RRF	STACK_0, F
$033C	$1C03			BTFSS	STATUS, C
$033D	$2B47			GOTO	$+10
$033E	$0874			MOVF	STACK_4, W
$033F	$07F9			ADDWF	STACK_9, F
$0340	$0875			MOVF	STACK_5, W
$0341	$1803			BTFSC	STATUS, C
$0342	$0F75			INCFSZ	STACK_5, W
$0343	$07FA			ADDWF	STACK_10, F
$0344	$1803			BTFSC	STATUS, C
$0345	$0AFB			INCF	STACK_11, F
$0346	$1003			BCF	STATUS, C
$0347	$1FF0			BTFSS	STACK_0, 7
$0348	$2B4F			GOTO	$+7
$0349	$0874			MOVF	STACK_4, W
$034A	$07FA			ADDWF	STACK_10, F
$034B	$0875			MOVF	STACK_5, W
$034C	$1803			BTFSC	STATUS, C
$034D	$0F75			INCFSZ	STACK_5, W
$034E	$07FB			ADDWF	STACK_11, F
$034F	$0CFB			RRF	STACK_11, F
$0350	$0CFA			RRF	STACK_10, F
$0351	$0CF9			RRF	STACK_9, F
$0352	$0CF8			RRF	STACK_8, F
$0353	$1C03			BTFSS	STATUS, C
$0354	$2B3A			GOTO	$-26
$0355	$087B			MOVF	STACK_11, W
$0356	$00F3			MOVWF	STACK_3
$0357	$087A			MOVF	STACK_10, W
$0358	$00F2			MOVWF	STACK_2
$0359	$0879			MOVF	STACK_9, W
$035A	$00F1			MOVWF	STACK_1
$035B	$0878			MOVF	STACK_8, W
$035C	$00F0			MOVWF	STACK_0
$035D	$0008			RETURN
$035E	$	_Div_16x16_U:
$035E	$1303			BCF	STATUS, RP1
$035F	$1283			BCF	STATUS, RP0
$0360	$01F8			CLRF	STACK_8
$0361	$01F9			CLRF	STACK_9
$0362	$3010			MOVLW	16
$0363	$00FC			MOVWF	STACK_12
$0364	$0D71			RLF	STACK_1, W
$0365	$0DF8			RLF	STACK_8, F
$0366	$0DF9			RLF	STACK_9, F
$0367	$0874			MOVF	STACK_4, W
$0368	$02F8			SUBWF	STACK_8, F
$0369	$0875			MOVF	STACK_5, W
$036A	$1C03			BTFSS	STATUS, C
$036B	$0F75			INCFSZ	STACK_5, W
$036C	$02F9			SUBWF	STACK_9, F
$036D	$1803			BTFSC	STATUS, C
$036E	$2B76			GOTO	$+8
$036F	$0874			MOVF	STACK_4, W
$0370	$07F8			ADDWF	STACK_8, F
$0371	$0875			MOVF	STACK_5, W
$0372	$1803			BTFSC	STATUS, C
$0373	$0F75			INCFSZ	STACK_5, W
$0374	$07F9			ADDWF	STACK_9, F
$0375	$1003			BCF	STATUS, C
$0376	$0DF0			RLF	STACK_0, F
$0377	$0DF1			RLF	STACK_1, F
$0378	$0BFC			DECFSZ	STACK_12, F
$0379	$2B64			GOTO	$-21
$037A	$0008			RETURN
$037B	$	_main:
$037B	$3043			MOVLW	67
$037C	$1303			BCF	STATUS, RP1
$037D	$1283			BCF	STATUS, RP0
$037E	$00B1			MOVWF	lstr1_Accelerometro_LCD+0
$037F	$3053			MOVLW	83
$0380	$00B2			MOVWF	lstr1_Accelerometro_LCD+1
$0381	$3054			MOVLW	84
$0382	$00B3			MOVWF	lstr1_Accelerometro_LCD+2
$0383	$3065			MOVLW	101
$0384	$00B4			MOVWF	lstr1_Accelerometro_LCD+3
$0385	$3063			MOVLW	99
$0386	$00B5			MOVWF	lstr1_Accelerometro_LCD+4
$0387	$3068			MOVLW	104
$0388	$00B6			MOVWF	lstr1_Accelerometro_LCD+5
$0389	$3020			MOVLW	32
$038A	$00B7			MOVWF	lstr1_Accelerometro_LCD+6
$038B	$3030			MOVLW	48
$038C	$00B8			MOVWF	lstr1_Accelerometro_LCD+7
$038D	$3032			MOVLW	50
$038E	$00B9			MOVWF	lstr1_Accelerometro_LCD+8
$038F	$302F			MOVLW	47
$0390	$00BA			MOVWF	lstr1_Accelerometro_LCD+9
$0391	$3031			MOVLW	49
$0392	$00BB			MOVWF	lstr1_Accelerometro_LCD+10
$0393	$3032			MOVLW	50
$0394	$00BC			MOVWF	lstr1_Accelerometro_LCD+11
$0395	$302F			MOVLW	47
$0396	$00BD			MOVWF	lstr1_Accelerometro_LCD+12
$0397	$3030			MOVLW	48
$0398	$00BE			MOVWF	lstr1_Accelerometro_LCD+13
$0399	$3036			MOVLW	54
$039A	$00BF			MOVWF	lstr1_Accelerometro_LCD+14
$039B	$01C0			CLRF	lstr1_Accelerometro_LCD+15
$039C	$01C1			CLRF	lstr2_Accelerometro_LCD+0
$039D	$3056			MOVLW	86
$039E	$00C2			MOVWF	lstr3_Accelerometro_LCD+0
$039F	$306F			MOVLW	111
$03A0	$00C3			MOVWF	lstr3_Accelerometro_LCD+1
$03A1	$306C			MOVLW	108
$03A2	$00C4			MOVWF	lstr3_Accelerometro_LCD+2
$03A3	$3074			MOVLW	116
$03A4	$00C5			MOVWF	lstr3_Accelerometro_LCD+3
$03A5	$3020			MOVLW	32
$03A6	$00C6			MOVWF	lstr3_Accelerometro_LCD+4
$03A7	$3058			MOVLW	88
$03A8	$00C7			MOVWF	lstr3_Accelerometro_LCD+5
$03A9	$303A			MOVLW	58
$03AA	$00C8			MOVWF	lstr3_Accelerometro_LCD+6
$03AB	$01C9			CLRF	lstr3_Accelerometro_LCD+7
$03AC	$3056			MOVLW	86
$03AD	$00CA			MOVWF	lstr4_Accelerometro_LCD+0
$03AE	$306F			MOVLW	111
$03AF	$00CB			MOVWF	lstr4_Accelerometro_LCD+1
$03B0	$306C			MOVLW	108
$03B1	$00CC			MOVWF	lstr4_Accelerometro_LCD+2
$03B2	$3074			MOVLW	116
$03B3	$00CD			MOVWF	lstr4_Accelerometro_LCD+3
$03B4	$3020			MOVLW	32
$03B5	$00CE			MOVWF	lstr4_Accelerometro_LCD+4
$03B6	$3059			MOVLW	89
$03B7	$00CF			MOVWF	lstr4_Accelerometro_LCD+5
$03B8	$303A			MOVLW	58
$03B9	$00D0			MOVWF	lstr4_Accelerometro_LCD+6
$03BA	$01D1			CLRF	lstr4_Accelerometro_LCD+7
;Accelerometro_LCD.c,11 :: 		void main() {
;Accelerometro_LCD.c,12 :: 		INTCON = 0;                        // disable all interrupts
$03BB	$018B			CLRF	INTCON, 1
;Accelerometro_LCD.c,13 :: 		LCD_Init(&PORTB);                  // initialize  (4-bit interface connection)
$03BC	$3006			MOVLW	PORTB
$03BD	$00D2			MOVWF	FARG_Lcd_Init+0
$03BE	$21AF			CALL	_Lcd_Init
;Accelerometro_LCD.c,14 :: 		LCD_Cmd(LCD_CURSOR_OFF);           // send command to LCD (cursor off)
$03BF	$300C			MOVLW	12
$03C0	$00D7			MOVWF	FARG_Lcd_Cmd+0
$03C1	$2024			CALL	_Lcd_Cmd
;Accelerometro_LCD.c,15 :: 		LCD_Cmd(LCD_CLEAR);                // send command  to LCD (clear LCD)
$03C2	$3001			MOVLW	1
$03C3	$00D7			MOVWF	FARG_Lcd_Cmd+0
$03C4	$2024			CALL	_Lcd_Cmd
;Accelerometro_LCD.c,17 :: 		tc = "CSTech 02/12/06";           // assign text to string a
$03C5	$3031			MOVLW	lstr1_Accelerometro_LCD
$03C6	$00A3			MOVWF	_tc
;Accelerometro_LCD.c,18 :: 		LCD_Out(1,1,tc);                   // print string a on LCD, 1st row, 1st column
$03C7	$3001			MOVLW	1
$03C8	$00D2			MOVWF	FARG_LCD_Out+0
$03C9	$3001			MOVLW	1
$03CA	$00D3			MOVWF	FARG_LCD_Out+1
$03CB	$0823			MOVF	_tc, 0
$03CC	$00D4			MOVWF	FARG_LCD_Out+2
$03CD	$21EF			CALL	_LCD_Out
;Accelerometro_LCD.c,19 :: 		tc = "";                // assign text to string a
$03CE	$3041			MOVLW	lstr2_Accelerometro_LCD
$03CF	$00A3			MOVWF	_tc
;Accelerometro_LCD.c,20 :: 		LCD_Out(2,1,tc);                   // print string a on LCD, 2nd row, 1st column
$03D0	$3002			MOVLW	2
$03D1	$00D2			MOVWF	FARG_LCD_Out+0
$03D2	$3001			MOVLW	1
$03D3	$00D3			MOVWF	FARG_LCD_Out+1
$03D4	$0823			MOVF	_tc, 0
$03D5	$00D4			MOVWF	FARG_LCD_Out+2
$03D6	$21EF			CALL	_LCD_Out
;Accelerometro_LCD.c,22 :: 		OPTION_REG  = 0x80;
$03D7	$3080			MOVLW	128
$03D8	$1683			BSF	STATUS, RP0
$03D9	$0081			MOVWF	OPTION_REG
;Accelerometro_LCD.c,23 :: 		ADCON1     = 0x80;                 // configure VDD as Vref, and analog channels
$03DA	$3080			MOVLW	128
$03DB	$009F			MOVWF	ADCON1
;Accelerometro_LCD.c,24 :: 		TRISA      = 0xFF;                 // designate porta as input
$03DC	$30FF			MOVLW	255
$03DD	$0085			MOVWF	TRISA
;Accelerometro_LCD.c,25 :: 		TRISC  = 0;
$03DE	$0187			CLRF	TRISC, 1
;Accelerometro_LCD.c,26 :: 		Delay_ms(2000);
$03DF	$3033			MOVLW	51
$03E0	$00FC			MOVWF	STACK_12
$03E1	$30FF			MOVLW	255
$03E2	$00FB			MOVWF	STACK_11
$03E3	$30FF			MOVLW	255
$03E4	$00FA			MOVWF	STACK_10
$03E5	$0BFC			DECFSZ	STACK_12, F
$03E6	$2BE8			GOTO	$+2
$03E7	$2BEF			GOTO	$+8
$03E8	$0BFB			DECFSZ	STACK_11, F
$03E9	$2BEB			GOTO	$+2
$03EA	$2BEE			GOTO	$+4
$03EB	$0BFA			DECFSZ	STACK_10, F
$03EC	$2BEB			GOTO	$-1
$03ED	$2BE8			GOTO	$-5
$03EE	$2BE5			GOTO	$-9
$03EF	$30FD			MOVLW	253
$03F0	$00FB			MOVWF	STACK_11
$03F1	$30FF			MOVLW	255
$03F2	$00FA			MOVWF	STACK_10
$03F3	$0BFB			DECFSZ	STACK_11, F
$03F4	$2BF6			GOTO	$+2
$03F5	$2BF9			GOTO	$+4
$03F6	$0BFA			DECFSZ	STACK_10, F
$03F7	$2BF6			GOTO	$-1
$03F8	$2BF3			GOTO	$-5
$03F9	$30B5			MOVLW	181
$03FA	$00FA			MOVWF	STACK_10
$03FB	$0BFA			DECFSZ	STACK_10, F
$03FC	$2BFB			GOTO	$-1
$03FD	$0000			NOP
;Accelerometro_LCD.c,27 :: 		LCD_Cmd(LCD_CLEAR);
$03FE	$3001			MOVLW	1
$03FF	$1283			BCF	STATUS, RP0
$0400	$00D7			MOVWF	FARG_Lcd_Cmd+0
$0401	$2024			CALL	_Lcd_Cmd
;Accelerometro_LCD.c,28 :: 		tc  = "Volt X:";                  // assign text to string a
$0402	$3042			MOVLW	lstr3_Accelerometro_LCD
$0403	$00A3			MOVWF	_tc
;Accelerometro_LCD.c,29 :: 		tc1 = "Volt Y:";
$0404	$304A			MOVLW	lstr4_Accelerometro_LCD
$0405	$00A4			MOVWF	_tc1
;Accelerometro_LCD.c,30 :: 		while (1) {
$0406	$	L_main_0:
;Accelerometro_LCD.c,32 :: 		somma=0;
$0406	$01A5			CLRF	_somma
$0407	$01A6			CLRF	_somma+1
$0408	$01A7			CLRF	_somma+2
$0409	$01A8			CLRF	_somma+3
;Accelerometro_LCD.c,33 :: 		for (i=0;i<50;i++)
$040A	$01A9			CLRF	_i, 1
$040B	$	L_main_2:
$040B	$3032			MOVLW	50
$040C	$0229			SUBWF	_i, 0
$040D	$1803			BTFSC	STATUS, C
$040E	$2C3C			GOTO	L_main_3
;Accelerometro_LCD.c,35 :: 		somma = somma + ADC_read(0);
$040F	$01D2			CLRF	FARG_Adc_Read+0, 1
$0410	$2233			CALL	_Adc_Read
$0411	$3000			MOVLW	0
$0412	$00F2			MOVWF	STACK_0+2
$0413	$00F3			MOVWF	STACK_0+3
$0414	$1283			BCF	STATUS, RP0
$0415	$0825			MOVF	_somma, 0
$0416	$07F0			ADDWF	STACK_0, 1
$0417	$0826			MOVF	_somma+1, 0
$0418	$1803			BTFSC	STATUS, C
$0419	$0F26			INCFSZ	_somma+1, 0
$041A	$07F1			ADDWF	STACK_0+1, 1
$041B	$0827			MOVF	_somma+2, 0
$041C	$1803			BTFSC	STATUS, C
$041D	$0F27			INCFSZ	_somma+2, 0
$041E	$07F2			ADDWF	STACK_0+2, 1
$041F	$0828			MOVF	_somma+3, 0
$0420	$1803			BTFSC	STATUS, C
$0421	$0F28			INCFSZ	_somma+3, 0
$0422	$07F3			ADDWF	STACK_0+3, 1
$0423	$0870			MOVF	STACK_0, 0
$0424	$00A5			MOVWF	_somma
$0425	$0871			MOVF	STACK_0+1, 0
$0426	$00A6			MOVWF	_somma+1
$0427	$0872			MOVF	STACK_0+2, 0
$0428	$00A7			MOVWF	_somma+2
$0429	$0873			MOVF	STACK_0+3, 0
$042A	$00A8			MOVWF	_somma+3
;Accelerometro_LCD.c,36 :: 		Delay_ms(5);
$042B	$3021			MOVLW	33
$042C	$00FB			MOVWF	STACK_11
$042D	$30FF			MOVLW	255
$042E	$00FA			MOVWF	STACK_10
$042F	$0BFB			DECFSZ	STACK_11, F
$0430	$2C32			GOTO	$+2
$0431	$2C35			GOTO	$+4
$0432	$0BFA			DECFSZ	STACK_10, F
$0433	$2C32			GOTO	$-1
$0434	$2C2F			GOTO	$-5
$0435	$3060			MOVLW	96
$0436	$00FA			MOVWF	STACK_10
$0437	$0BFA			DECFSZ	STACK_10, F
$0438	$2C37			GOTO	$-1
$0439	$0000			NOP
;Accelerometro_LCD.c,37 :: 		}
$043A	$	L_main_4:
;Accelerometro_LCD.c,33 :: 		for (i=0;i<50;i++)
$043A	$0AA9			INCF	_i, 1
;Accelerometro_LCD.c,37 :: 		}
$043B	$2C0B			GOTO	L_main_2
$043C	$	L_main_3:
;Accelerometro_LCD.c,39 :: 		t1 = somma / 60;
$043C	$303C			MOVLW	60
$043D	$00F4			MOVWF	STACK_4
$043E	$01F5			CLRF	STACK_4+1
$043F	$01F6			CLRF	STACK_4+2
$0440	$01F7			CLRF	STACK_4+3
$0441	$0825			MOVF	_somma, 0
$0442	$00F0			MOVWF	STACK_0
$0443	$0826			MOVF	_somma+1, 0
$0444	$00F1			MOVWF	STACK_0+1
$0445	$0827			MOVF	_somma+2, 0
$0446	$00F2			MOVWF	STACK_0+2
$0447	$0828			MOVF	_somma+3, 0
$0448	$00F3			MOVWF	STACK_0+3
$0449	$2299			CALL	_div_32x32_s
$044A	$0870			MOVF	STACK_0, 0
$044B	$00AA			MOVWF	_t1
$044C	$0871			MOVF	STACK_0+1, 0
$044D	$00AB			MOVWF	_t1+1
;Accelerometro_LCD.c,42 :: 		LCD_Out(2,1,tc);                 // print string a on LCD, 2nd row, 1st column
$044E	$3002			MOVLW	2
$044F	$00D2			MOVWF	FARG_LCD_Out+0
$0450	$3001			MOVLW	1
$0451	$00D3			MOVWF	FARG_LCD_Out+1
$0452	$0823			MOVF	_tc, 0
$0453	$00D4			MOVWF	FARG_LCD_Out+2
$0454	$21EF			CALL	_LCD_Out
;Accelerometro_LCD.c,44 :: 		tlong  = t1 * 5000;               // use (int) multiplication instead of (long)
$0455	$082A			MOVF	_t1, 0
$0456	$00F0			MOVWF	STACK_0
$0457	$082B			MOVF	_t1+1, 0
$0458	$00F1			MOVWF	STACK_0+1
$0459	$3088			MOVLW	136
$045A	$00F4			MOVWF	STACK_4
$045B	$3013			MOVLW	19
$045C	$00F5			MOVWF	STACK_4+1
$045D	$2333			CALL	_mul_16x16_u
$045E	$0870			MOVF	STACK_0, 0
$045F	$00AC			MOVWF	_tlong
$0460	$0871			MOVF	STACK_0+1, 0
$0461	$00AD			MOVWF	_tlong+1
$0462	$01AE			CLRF	_tlong+2
$0463	$01AF			CLRF	_tlong+3
;Accelerometro_LCD.c,46 :: 		MOVF STACK_2,W
$0464	$0872			MOVF	STACK_2, W
;Accelerometro_LCD.c,47 :: 		MOVWF _tlong+2
$0465	$00AE			MOVWF	_tlong+2
;Accelerometro_LCD.c,48 :: 		MOVF STACK_3,W
$0466	$0873			MOVF	STACK_3, W
;Accelerometro_LCD.c,49 :: 		MOVWF _tlong+3
$0467	$00AF			MOVWF	_tlong+3
;Accelerometro_LCD.c,51 :: 		t1= tlong >> 10;
$0468	$300A			MOVLW	10
$0469	$00F4			MOVWF	STACK_4
$046A	$082C			MOVF	_tlong, 0
$046B	$00F0			MOVWF	STACK_0
$046C	$082D			MOVF	_tlong+1, 0
$046D	$00F1			MOVWF	STACK_0+1
$046E	$082E			MOVF	_tlong+2, 0
$046F	$00F2			MOVWF	STACK_0+2
$0470	$082F			MOVF	_tlong+3, 0
$0471	$00F3			MOVWF	STACK_0+3
$0472	$0874			MOVF	STACK_4, 0
$0473	$	L_main_8:
$0473	$1903			BTFSC	STATUS, Z
$0474	$2C7E			GOTO	L_main_9
$0475	$0CF3			RRF	STACK_0+3, 1
$0476	$0CF2			RRF	STACK_0+2, 1
$0477	$0CF1			RRF	STACK_0+1, 1
$0478	$0CF0			RRF	STACK_0, 1
$0479	$13F3			BCF	STACK_0+3, 7
$047A	$1B73			BTFSC	STACK_0+3, 6
$047B	$17F3			BSF	STACK_0+3, 7
$047C	$3FFF			ADDLW	255
$047D	$2C73			GOTO	L_main_8
$047E	$	L_main_9:
$047E	$0870			MOVF	STACK_0, 0
$047F	$00AA			MOVWF	_t1
$0480	$0871			MOVF	STACK_0+1, 0
$0481	$00AB			MOVWF	_t1+1
;Accelerometro_LCD.c,53 :: 		ch     = t1 / 1000;               // prepare value for diplay
$0482	$30E8			MOVLW	232
$0483	$00F4			MOVWF	STACK_4
$0484	$3003			MOVLW	3
$0485	$00F5			MOVWF	STACK_4+1
$0486	$235E			CALL	_div_16x16_u
$0487	$0870			MOVF	STACK_0, 0
$0488	$00B0			MOVWF	_ch
;Accelerometro_LCD.c,54 :: 		LCD_Chr(2,9,48+ch);              // write ASCII at 2nd row, 9th column
$0489	$3002			MOVLW	2
$048A	$00D2			MOVWF	FARG_Lcd_Chr+0
$048B	$3009			MOVLW	9
$048C	$00D3			MOVWF	FARG_Lcd_Chr+1
$048D	$0870			MOVF	STACK_0, 0
$048E	$3F30			ADDLW	48
$048F	$00D4			MOVWF	FARG_Lcd_Chr+2
$0490	$2261			CALL	_Lcd_Chr
;Accelerometro_LCD.c,55 :: 		LCD_Chr_CP('.');
$0491	$302E			MOVLW	46
$0492	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$0493	$2062			CALL	_Lcd_Chr_CP
;Accelerometro_LCD.c,57 :: 		ch    = (t1 / 100) % 10;
$0494	$3064			MOVLW	100
$0495	$00F4			MOVWF	STACK_4
$0496	$3000			MOVLW	0
$0497	$00F5			MOVWF	STACK_4+1
$0498	$082A			MOVF	_t1, 0
$0499	$00F0			MOVWF	STACK_0
$049A	$082B			MOVF	_t1+1, 0
$049B	$00F1			MOVWF	STACK_0+1
$049C	$235E			CALL	_div_16x16_u
$049D	$300A			MOVLW	10
$049E	$00F4			MOVWF	STACK_4
$049F	$3000			MOVLW	0
$04A0	$00F5			MOVWF	STACK_4+1
$04A1	$235E			CALL	_div_16x16_u
$04A2	$0878			MOVF	STACK_8, 0
$04A3	$00F0			MOVWF	STACK_0
$04A4	$0879			MOVF	STACK_9, 0
$04A5	$00F1			MOVWF	STACK_1
$04A6	$0870			MOVF	STACK_0, 0
$04A7	$00B0			MOVWF	_ch
;Accelerometro_LCD.c,58 :: 		LCD_Chr_CP(48+ch);
$04A8	$0870			MOVF	STACK_0, 0
$04A9	$3F30			ADDLW	48
$04AA	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$04AB	$2062			CALL	_Lcd_Chr_CP
;Accelerometro_LCD.c,60 :: 		ch    = (t1 / 10) % 10;
$04AC	$300A			MOVLW	10
$04AD	$00F4			MOVWF	STACK_4
$04AE	$3000			MOVLW	0
$04AF	$00F5			MOVWF	STACK_4+1
$04B0	$082A			MOVF	_t1, 0
$04B1	$00F0			MOVWF	STACK_0
$04B2	$082B			MOVF	_t1+1, 0
$04B3	$00F1			MOVWF	STACK_0+1
$04B4	$235E			CALL	_div_16x16_u
$04B5	$300A			MOVLW	10
$04B6	$00F4			MOVWF	STACK_4
$04B7	$3000			MOVLW	0
$04B8	$00F5			MOVWF	STACK_4+1
$04B9	$235E			CALL	_div_16x16_u
$04BA	$0878			MOVF	STACK_8, 0
$04BB	$00F0			MOVWF	STACK_0
$04BC	$0879			MOVF	STACK_9, 0
$04BD	$00F1			MOVWF	STACK_1
$04BE	$0870			MOVF	STACK_0, 0
$04BF	$00B0			MOVWF	_ch
;Accelerometro_LCD.c,61 :: 		LCD_Chr_CP(48+ch);
$04C0	$0870			MOVF	STACK_0, 0
$04C1	$3F30			ADDLW	48
$04C2	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$04C3	$2062			CALL	_Lcd_Chr_CP
;Accelerometro_LCD.c,63 :: 		ch    = t1 % 10;
$04C4	$300A			MOVLW	10
$04C5	$00F4			MOVWF	STACK_4
$04C6	$3000			MOVLW	0
$04C7	$00F5			MOVWF	STACK_4+1
$04C8	$082A			MOVF	_t1, 0
$04C9	$00F0			MOVWF	STACK_0
$04CA	$082B			MOVF	_t1+1, 0
$04CB	$00F1			MOVWF	STACK_0+1
$04CC	$235E			CALL	_div_16x16_u
$04CD	$0878			MOVF	STACK_8, 0
$04CE	$00F0			MOVWF	STACK_0
$04CF	$0879			MOVF	STACK_9, 0
$04D0	$00F1			MOVWF	STACK_1
$04D1	$0870			MOVF	STACK_0, 0
$04D2	$00B0			MOVWF	_ch
;Accelerometro_LCD.c,64 :: 		LCD_Chr_CP(48+ch);
$04D3	$0870			MOVF	STACK_0, 0
$04D4	$3F30			ADDLW	48
$04D5	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$04D6	$2062			CALL	_Lcd_Chr_CP
;Accelerometro_LCD.c,65 :: 		LCD_Chr_CP('V');
$04D7	$3056			MOVLW	86
$04D8	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$04D9	$2062			CALL	_Lcd_Chr_CP
;Accelerometro_LCD.c,69 :: 		somma=0;
$04DA	$01A5			CLRF	_somma
$04DB	$01A6			CLRF	_somma+1
$04DC	$01A7			CLRF	_somma+2
$04DD	$01A8			CLRF	_somma+3
;Accelerometro_LCD.c,70 :: 		for (i=0;i<50;i++)
$04DE	$01A9			CLRF	_i, 1
$04DF	$	L_main_5:
$04DF	$3032			MOVLW	50
$04E0	$0229			SUBWF	_i, 0
$04E1	$1803			BTFSC	STATUS, C
$04E2	$2D11			GOTO	L_main_6
;Accelerometro_LCD.c,72 :: 		somma = somma + ADC_read(1);
$04E3	$3001			MOVLW	1
$04E4	$00D2			MOVWF	FARG_Adc_Read+0
$04E5	$2233			CALL	_Adc_Read
$04E6	$3000			MOVLW	0
$04E7	$00F2			MOVWF	STACK_0+2
$04E8	$00F3			MOVWF	STACK_0+3
$04E9	$1283			BCF	STATUS, RP0
$04EA	$0825			MOVF	_somma, 0
$04EB	$07F0			ADDWF	STACK_0, 1
$04EC	$0826			MOVF	_somma+1, 0
$04ED	$1803			BTFSC	STATUS, C
$04EE	$0F26			INCFSZ	_somma+1, 0
$04EF	$07F1			ADDWF	STACK_0+1, 1
$04F0	$0827			MOVF	_somma+2, 0
$04F1	$1803			BTFSC	STATUS, C
$04F2	$0F27			INCFSZ	_somma+2, 0
$04F3	$07F2			ADDWF	STACK_0+2, 1
$04F4	$0828			MOVF	_somma+3, 0
$04F5	$1803			BTFSC	STATUS, C
$04F6	$0F28			INCFSZ	_somma+3, 0
$04F7	$07F3			ADDWF	STACK_0+3, 1
$04F8	$0870			MOVF	STACK_0, 0
$04F9	$00A5			MOVWF	_somma
$04FA	$0871			MOVF	STACK_0+1, 0
$04FB	$00A6			MOVWF	_somma+1
$04FC	$0872			MOVF	STACK_0+2, 0
$04FD	$00A7			MOVWF	_somma+2
$04FE	$0873			MOVF	STACK_0+3, 0
$04FF	$00A8			MOVWF	_somma+3
;Accelerometro_LCD.c,73 :: 		Delay_ms(5);
$0500	$3021			MOVLW	33
$0501	$00FB			MOVWF	STACK_11
$0502	$30FF			MOVLW	255
$0503	$00FA			MOVWF	STACK_10
$0504	$0BFB			DECFSZ	STACK_11, F
$0505	$2D07			GOTO	$+2
$0506	$2D0A			GOTO	$+4
$0507	$0BFA			DECFSZ	STACK_10, F
$0508	$2D07			GOTO	$-1
$0509	$2D04			GOTO	$-5
$050A	$3060			MOVLW	96
$050B	$00FA			MOVWF	STACK_10
$050C	$0BFA			DECFSZ	STACK_10, F
$050D	$2D0C			GOTO	$-1
$050E	$0000			NOP
;Accelerometro_LCD.c,74 :: 		}
$050F	$	L_main_7:
;Accelerometro_LCD.c,70 :: 		for (i=0;i<50;i++)
$050F	$0AA9			INCF	_i, 1
;Accelerometro_LCD.c,74 :: 		}
$0510	$2CDF			GOTO	L_main_5
$0511	$	L_main_6:
;Accelerometro_LCD.c,75 :: 		t1 = somma / 60;
$0511	$303C			MOVLW	60
$0512	$00F4			MOVWF	STACK_4
$0513	$01F5			CLRF	STACK_4+1
$0514	$01F6			CLRF	STACK_4+2
$0515	$01F7			CLRF	STACK_4+3
$0516	$0825			MOVF	_somma, 0
$0517	$00F0			MOVWF	STACK_0
$0518	$0826			MOVF	_somma+1, 0
$0519	$00F1			MOVWF	STACK_0+1
$051A	$0827			MOVF	_somma+2, 0
$051B	$00F2			MOVWF	STACK_0+2
$051C	$0828			MOVF	_somma+3, 0
$051D	$00F3			MOVWF	STACK_0+3
$051E	$2299			CALL	_div_32x32_s
$051F	$0870			MOVF	STACK_0, 0
$0520	$00AA			MOVWF	_t1
$0521	$0871			MOVF	STACK_0+1, 0
$0522	$00AB			MOVWF	_t1+1
;Accelerometro_LCD.c,77 :: 		LCD_Out(1,1,tc1);                 // print string a on LCD, 2nd row, 1st column
$0523	$3001			MOVLW	1
$0524	$00D2			MOVWF	FARG_LCD_Out+0
$0525	$3001			MOVLW	1
$0526	$00D3			MOVWF	FARG_LCD_Out+1
$0527	$0824			MOVF	_tc1, 0
$0528	$00D4			MOVWF	FARG_LCD_Out+2
$0529	$21EF			CALL	_LCD_Out
;Accelerometro_LCD.c,79 :: 		tlong  = t1 * 5000;               // use (int) multiplication instead of (long)
$052A	$082A			MOVF	_t1, 0
$052B	$00F0			MOVWF	STACK_0
$052C	$082B			MOVF	_t1+1, 0
$052D	$00F1			MOVWF	STACK_0+1
$052E	$3088			MOVLW	136
$052F	$00F4			MOVWF	STACK_4
$0530	$3013			MOVLW	19
$0531	$00F5			MOVWF	STACK_4+1
$0532	$2333			CALL	_mul_16x16_u
$0533	$0870			MOVF	STACK_0, 0
$0534	$00AC			MOVWF	_tlong
$0535	$0871			MOVF	STACK_0+1, 0
$0536	$00AD			MOVWF	_tlong+1
$0537	$01AE			CLRF	_tlong+2
$0538	$01AF			CLRF	_tlong+3
;Accelerometro_LCD.c,81 :: 		MOVF STACK_2,W
$0539	$0872			MOVF	STACK_2, W
;Accelerometro_LCD.c,82 :: 		MOVWF _tlong+2
$053A	$00AE			MOVWF	_tlong+2
;Accelerometro_LCD.c,83 :: 		MOVF STACK_3,W
$053B	$0873			MOVF	STACK_3, W
;Accelerometro_LCD.c,84 :: 		MOVWF _tlong+3
$053C	$00AF			MOVWF	_tlong+3
;Accelerometro_LCD.c,86 :: 		t1= tlong >> 10;
$053D	$300A			MOVLW	10
$053E	$00F4			MOVWF	STACK_4
$053F	$082C			MOVF	_tlong, 0
$0540	$00F0			MOVWF	STACK_0
$0541	$082D			MOVF	_tlong+1, 0
$0542	$00F1			MOVWF	STACK_0+1
$0543	$082E			MOVF	_tlong+2, 0
$0544	$00F2			MOVWF	STACK_0+2
$0545	$082F			MOVF	_tlong+3, 0
$0546	$00F3			MOVWF	STACK_0+3
$0547	$0874			MOVF	STACK_4, 0
$0548	$	L_main_10:
$0548	$1903			BTFSC	STATUS, Z
$0549	$2D53			GOTO	L_main_11
$054A	$0CF3			RRF	STACK_0+3, 1
$054B	$0CF2			RRF	STACK_0+2, 1
$054C	$0CF1			RRF	STACK_0+1, 1
$054D	$0CF0			RRF	STACK_0, 1
$054E	$13F3			BCF	STACK_0+3, 7
$054F	$1B73			BTFSC	STACK_0+3, 6
$0550	$17F3			BSF	STACK_0+3, 7
$0551	$3FFF			ADDLW	255
$0552	$2D48			GOTO	L_main_10
$0553	$	L_main_11:
$0553	$0870			MOVF	STACK_0, 0
$0554	$00AA			MOVWF	_t1
$0555	$0871			MOVF	STACK_0+1, 0
$0556	$00AB			MOVWF	_t1+1
;Accelerometro_LCD.c,88 :: 		ch     = t1 / 1000;               // prepare value for diplay
$0557	$30E8			MOVLW	232
$0558	$00F4			MOVWF	STACK_4
$0559	$3003			MOVLW	3
$055A	$00F5			MOVWF	STACK_4+1
$055B	$235E			CALL	_div_16x16_u
$055C	$0870			MOVF	STACK_0, 0
$055D	$00B0			MOVWF	_ch
;Accelerometro_LCD.c,89 :: 		LCD_Chr(1,9,48+ch);              // write ASCII at 2nd row, 9th column
$055E	$3001			MOVLW	1
$055F	$00D2			MOVWF	FARG_Lcd_Chr+0
$0560	$3009			MOVLW	9
$0561	$00D3			MOVWF	FARG_Lcd_Chr+1
$0562	$0870			MOVF	STACK_0, 0
$0563	$3F30			ADDLW	48
$0564	$00D4			MOVWF	FARG_Lcd_Chr+2
$0565	$2261			CALL	_Lcd_Chr
;Accelerometro_LCD.c,90 :: 		LCD_Chr_CP('.');
$0566	$302E			MOVLW	46
$0567	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$0568	$2062			CALL	_Lcd_Chr_CP
;Accelerometro_LCD.c,92 :: 		ch    = (t1 / 100) % 10;
$0569	$3064			MOVLW	100
$056A	$00F4			MOVWF	STACK_4
$056B	$3000			MOVLW	0
$056C	$00F5			MOVWF	STACK_4+1
$056D	$082A			MOVF	_t1, 0
$056E	$00F0			MOVWF	STACK_0
$056F	$082B			MOVF	_t1+1, 0
$0570	$00F1			MOVWF	STACK_0+1
$0571	$235E			CALL	_div_16x16_u
$0572	$300A			MOVLW	10
$0573	$00F4			MOVWF	STACK_4
$0574	$3000			MOVLW	0
$0575	$00F5			MOVWF	STACK_4+1
$0576	$235E			CALL	_div_16x16_u
$0577	$0878			MOVF	STACK_8, 0
$0578	$00F0			MOVWF	STACK_0
$0579	$0879			MOVF	STACK_9, 0
$057A	$00F1			MOVWF	STACK_1
$057B	$0870			MOVF	STACK_0, 0
$057C	$00B0			MOVWF	_ch
;Accelerometro_LCD.c,93 :: 		LCD_Chr_CP(48+ch);
$057D	$0870			MOVF	STACK_0, 0
$057E	$3F30			ADDLW	48
$057F	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$0580	$2062			CALL	_Lcd_Chr_CP
;Accelerometro_LCD.c,95 :: 		ch    = (t1 / 10) % 10;
$0581	$300A			MOVLW	10
$0582	$00F4			MOVWF	STACK_4
$0583	$3000			MOVLW	0
$0584	$00F5			MOVWF	STACK_4+1
$0585	$082A			MOVF	_t1, 0
$0586	$00F0			MOVWF	STACK_0
$0587	$082B			MOVF	_t1+1, 0
$0588	$00F1			MOVWF	STACK_0+1
$0589	$235E			CALL	_div_16x16_u
$058A	$300A			MOVLW	10
$058B	$00F4			MOVWF	STACK_4
$058C	$3000			MOVLW	0
$058D	$00F5			MOVWF	STACK_4+1
$058E	$235E			CALL	_div_16x16_u
$058F	$0878			MOVF	STACK_8, 0
$0590	$00F0			MOVWF	STACK_0
$0591	$0879			MOVF	STACK_9, 0
$0592	$00F1			MOVWF	STACK_1
$0593	$0870			MOVF	STACK_0, 0
$0594	$00B0			MOVWF	_ch
;Accelerometro_LCD.c,96 :: 		LCD_Chr_CP(48+ch);
$0595	$0870			MOVF	STACK_0, 0
$0596	$3F30			ADDLW	48
$0597	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$0598	$2062			CALL	_Lcd_Chr_CP
;Accelerometro_LCD.c,98 :: 		ch    = t1 % 10;
$0599	$300A			MOVLW	10
$059A	$00F4			MOVWF	STACK_4
$059B	$3000			MOVLW	0
$059C	$00F5			MOVWF	STACK_4+1
$059D	$082A			MOVF	_t1, 0
$059E	$00F0			MOVWF	STACK_0
$059F	$082B			MOVF	_t1+1, 0
$05A0	$00F1			MOVWF	STACK_0+1
$05A1	$235E			CALL	_div_16x16_u
$05A2	$0878			MOVF	STACK_8, 0
$05A3	$00F0			MOVWF	STACK_0
$05A4	$0879			MOVF	STACK_9, 0
$05A5	$00F1			MOVWF	STACK_1
$05A6	$0870			MOVF	STACK_0, 0
$05A7	$00B0			MOVWF	_ch
;Accelerometro_LCD.c,99 :: 		LCD_Chr_CP(48+ch);
$05A8	$0870			MOVF	STACK_0, 0
$05A9	$3F30			ADDLW	48
$05AA	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$05AB	$2062			CALL	_Lcd_Chr_CP
;Accelerometro_LCD.c,100 :: 		LCD_Chr_CP('V');
$05AC	$3056			MOVLW	86
$05AD	$00D6			MOVWF	FARG_Lcd_Chr_CP+0
$05AE	$2062			CALL	_Lcd_Chr_CP
;Accelerometro_LCD.c,102 :: 		Delay_ms(400);
$05AF	$300B			MOVLW	11
$05B0	$00FC			MOVWF	STACK_12
$05B1	$30FF			MOVLW	255
$05B2	$00FB			MOVWF	STACK_11
$05B3	$30FF			MOVLW	255
$05B4	$00FA			MOVWF	STACK_10
$05B5	$0BFC			DECFSZ	STACK_12, F
$05B6	$2DB8			GOTO	$+2
$05B7	$2DBF			GOTO	$+8
$05B8	$0BFB			DECFSZ	STACK_11, F
$05B9	$2DBB			GOTO	$+2
$05BA	$2DBE			GOTO	$+4
$05BB	$0BFA			DECFSZ	STACK_10, F
$05BC	$2DBB			GOTO	$-1
$05BD	$2DB8			GOTO	$-5
$05BE	$2DB5			GOTO	$-9
$05BF	$3033			MOVLW	51
$05C0	$00FB			MOVWF	STACK_11
$05C1	$30FF			MOVLW	255
$05C2	$00FA			MOVWF	STACK_10
$05C3	$0BFB			DECFSZ	STACK_11, F
$05C4	$2DC6			GOTO	$+2
$05C5	$2DC9			GOTO	$+4
$05C6	$0BFA			DECFSZ	STACK_10, F
$05C7	$2DC6			GOTO	$-1
$05C8	$2DC3			GOTO	$-5
$05C9	$3088			MOVLW	136
$05CA	$00FA			MOVWF	STACK_10
$05CB	$0BFA			DECFSZ	STACK_10, F
$05CC	$2DCB			GOTO	$-1
$05CD	$0000			NOP
;Accelerometro_LCD.c,103 :: 		}
$05CE	$2C06			GOTO	L_main_0
;Accelerometro_LCD.c,104 :: 		}//~!
$05CF	$2DCF			GOTO	$
