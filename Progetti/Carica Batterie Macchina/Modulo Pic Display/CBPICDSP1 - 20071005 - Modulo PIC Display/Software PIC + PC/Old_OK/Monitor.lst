;  ASM code generated by mikroVirtualMachine for PIC - V. 6.2.1.0
;  Date/Time: 19/09/2007 19.25.54
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2D68			GOTO	_main
$0004	$	_Delay_1us:
;delays.c,2 :: 		void Delay_1us() {
;delays.c,3 :: 		Delay_us(1);
$0004	$3001			MOVLW	1
$0005	$1303			BCF	STATUS, RP1
$0006	$1283			BCF	STATUS, RP0
$0007	$00FA			MOVWF	STACK_10
$0008	$0BFA			DECFSZ	STACK_10, F
$0009	$2808			GOTO	$-1
$000A	$0000			NOP
;delays.c,4 :: 		}
$000B	$0008			RETURN
$000C	$	_Delay_5500us:
;delays.c,26 :: 		void Delay_5500us() {
;delays.c,27 :: 		Delay_us(5500);
$000C	$3024			MOVLW	36
$000D	$1303			BCF	STATUS, RP1
$000E	$1283			BCF	STATUS, RP0
$000F	$00FB			MOVWF	STACK_11
$0010	$30FF			MOVLW	255
$0011	$00FA			MOVWF	STACK_10
$0012	$0BFB			DECFSZ	STACK_11, F
$0013	$2815			GOTO	$+2
$0014	$2818			GOTO	$+4
$0015	$0BFA			DECFSZ	STACK_10, F
$0016	$2815			GOTO	$-1
$0017	$2812			GOTO	$-5
$0018	$309E			MOVLW	158
$0019	$00FA			MOVWF	STACK_10
$001A	$0BFA			DECFSZ	STACK_10, F
$001B	$281A			GOTO	$-1
;delays.c,28 :: 		}
$001C	$0008			RETURN
$001D	$	_Delay_50us:
;delays.c,14 :: 		void Delay_50us() {
;delays.c,15 :: 		Delay_us(50);
$001D	$3053			MOVLW	83
$001E	$1303			BCF	STATUS, RP1
$001F	$1283			BCF	STATUS, RP0
$0020	$00FA			MOVWF	STACK_10
$0021	$0BFA			DECFSZ	STACK_10, F
$0022	$2821			GOTO	$-1
;delays.c,16 :: 		}
$0023	$0008			RETURN
$0024	$	_Lcd_Cmd:
$0024	$1303			BCF	STATUS, RP1
$0025	$1283			BCF	STATUS, RP0
$0026	$0821			MOVF	LCD_port_address, 0
$0027	$0084			MOVWF	FSR
$0028	$084E			MOVF	FARG_Lcd_Cmd+0, 0
$0029	$1903			BTFSC	STATUS, Z
$002A	$282B			GOTO	L_Lcd_Cmd_0
$002B	$	L_Lcd_Cmd_0:
$002B	$0180			CLRF	INDF
$002C	$1BCE			BTFSC	FARG_Lcd_Cmd+0, 7
$002D	$1780			BSF	INDF, ___DB7
$002E	$1B4E			BTFSC	FARG_Lcd_Cmd+0, 6
$002F	$1700			BSF	INDF, ___DB6
$0030	$1ACE			BTFSC	FARG_Lcd_Cmd+0, 5
$0031	$1680			BSF	INDF, ___DB5
$0032	$1A4E			BTFSC	FARG_Lcd_Cmd+0, 4
$0033	$1600			BSF	INDF, ___DB4
$0034	$0822			MOVF	LCD_cmd_status, 0
$0035	$1903			BTFSC	STATUS, Z
$0036	$2839			GOTO	L_Lcd_Cmd_1
$0037	$1100			BCF	INDF, ___RS
$0038	$283A			GOTO	L_Lcd_Cmd_2
$0039	$	L_Lcd_Cmd_1:
$0039	$1500			BSF	INDF, ___RS
$003A	$	L_Lcd_Cmd_2:
$003A	$1580			BSF	INDF, ___ENABLE
$003B	$2004			CALL	_Delay_1us
$003C	$084E			MOVF	FARG_Lcd_Cmd+0, 0
$003D	$1903			BTFSC	STATUS, Z
$003E	$283F			GOTO	L_Lcd_Cmd_3
$003F	$	L_Lcd_Cmd_3:
$003F	$1180			BCF	INDF, ___ENABLE
$0040	$0180			CLRF	INDF
$0041	$19CE			BTFSC	FARG_Lcd_Cmd+0, 3
$0042	$1780			BSF	INDF, ___DB7
$0043	$194E			BTFSC	FARG_Lcd_Cmd+0, 2
$0044	$1700			BSF	INDF, ___DB6
$0045	$18CE			BTFSC	FARG_Lcd_Cmd+0, 1
$0046	$1680			BSF	INDF, ___DB5
$0047	$184E			BTFSC	FARG_Lcd_Cmd+0, 0
$0048	$1600			BSF	INDF, ___DB4
$0049	$0822			MOVF	LCD_cmd_status, 0
$004A	$1903			BTFSC	STATUS, Z
$004B	$284E			GOTO	L_Lcd_Cmd_4
$004C	$1100			BCF	INDF, ___RS
$004D	$284F			GOTO	L_Lcd_Cmd_5
$004E	$	L_Lcd_Cmd_4:
$004E	$1500			BSF	INDF, ___RS
$004F	$	L_Lcd_Cmd_5:
$004F	$1580			BSF	INDF, ___ENABLE
$0050	$2004			CALL	_Delay_1us
$0051	$1180			BCF	INDF, ___ENABLE
$0052	$0822			MOVF	LCD_cmd_status, 0
$0053	$1903			BTFSC	STATUS, Z
$0054	$2857			GOTO	L_Lcd_Cmd_6
$0055	$200C			CALL	_Delay_5500us
$0056	$2858			GOTO	L_Lcd_Cmd_7
$0057	$	L_Lcd_Cmd_6:
$0057	$201D			CALL	_Delay_50us
$0058	$	L_Lcd_Cmd_7:
$0058	$0008			RETURN
$0059	$	_Lcd_Chr_CP:
$0059	$1303			BCF	STATUS, RP1
$005A	$1283			BCF	STATUS, RP0
$005B	$01A2			CLRF	LCD_cmd_status, 1
$005C	$084D			MOVF	FARG_Lcd_Chr_CP+0, 0
$005D	$00CE			MOVWF	FARG_Lcd_Cmd+0
$005E	$2024			CALL	_Lcd_Cmd
$005F	$3001			MOVLW	1
$0060	$00A2			MOVWF	LCD_cmd_status
$0061	$0008			RETURN
$0062	$	_SDIV3232L:
$0062	$1303			BCF	STATUS, RP1
$0063	$1283			BCF	STATUS, RP0
$0064	$0874			MOVF	STACK_4, W
$0065	$02F8			SUBWF	STACK_8, F
$0066	$0875			MOVF	STACK_5, W
$0067	$1C03			BTFSS	STATUS, C
$0068	$0F75			INCFSZ	STACK_5, W
$0069	$02F9			SUBWF	STACK_9, F
$006A	$0876			MOVF	STACK_6, W
$006B	$1C03			BTFSS	STATUS, C
$006C	$0F76			INCFSZ	STACK_6, W
$006D	$02FA			SUBWF	STACK_10, F
$006E	$0877			MOVF	STACK_7, W
$006F	$1C03			BTFSS	STATUS, C
$0070	$0F77			INCFSZ	STACK_7, W
$0071	$02FB			SUBWF	STACK_11, F
$0072	$0DF3			RLF	STACK_3, F
$0073	$3007			MOVLW	7
$0074	$00FC			MOVWF	STACK_12
$0075	$	LOOPS3232A:
$0075	$0D73			RLF	STACK_3, W
$0076	$0DF8			RLF	STACK_8, F
$0077	$0DF9			RLF	STACK_9, F
$0078	$0DFA			RLF	STACK_10, F
$0079	$0DFB			RLF	STACK_11, F
$007A	$0874			MOVF	STACK_4, W
$007B	$1C73			BTFSS	STACK_3, 0
$007C	$288B			GOTO	SADD22LA
$007D	$02F8			SUBWF	STACK_8, F
$007E	$0875			MOVF	STACK_5, W
$007F	$1C03			BTFSS	STATUS, C
$0080	$0F75			INCFSZ	STACK_5, W
$0081	$02F9			SUBWF	STACK_9, F
$0082	$0876			MOVF	STACK_6, W
$0083	$1C03			BTFSS	STATUS, C
$0084	$0F76			INCFSZ	STACK_6, W
$0085	$02FA			SUBWF	STACK_10, F
$0086	$0877			MOVF	STACK_7, W
$0087	$1C03			BTFSS	STATUS, C
$0088	$0F77			INCFSZ	STACK_7, W
$0089	$02FB			SUBWF	STACK_11, F
$008A	$2898			GOTO	SOK22LA
$008B	$	SADD22LA:
$008B	$07F8			ADDWF	STACK_8, F
$008C	$0875			MOVF	STACK_5, W
$008D	$1803			BTFSC	STATUS, C
$008E	$0F75			INCFSZ	STACK_5, W
$008F	$07F9			ADDWF	STACK_9, F
$0090	$0876			MOVF	STACK_6, W
$0091	$1803			BTFSC	STATUS, C
$0092	$0F76			INCFSZ	STACK_6, W
$0093	$07FA			ADDWF	STACK_10, F
$0094	$0877			MOVF	STACK_7, W
$0095	$1803			BTFSC	STATUS, C
$0096	$0F77			INCFSZ	STACK_7, W
$0097	$07FB			ADDWF	STACK_11, F
$0098	$	SOK22LA:
$0098	$0DF3			RLF	STACK_3, F
$0099	$0BFC			DECFSZ	STACK_12, F
$009A	$2875			GOTO	LOOPS3232A
$009B	$0D72			RLF	STACK_2, W
$009C	$0DF8			RLF	STACK_8, F
$009D	$0DF9			RLF	STACK_9, F
$009E	$0DFA			RLF	STACK_10, F
$009F	$0DFB			RLF	STACK_11, F
$00A0	$0874			MOVF	STACK_4, W
$00A1	$1C73			BTFSS	STACK_3, 0
$00A2	$28B1			GOTO	SADD22L8
$00A3	$02F8			SUBWF	STACK_8, F
$00A4	$0875			MOVF	STACK_5, W
$00A5	$1C03			BTFSS	STATUS, C
$00A6	$0F75			INCFSZ	STACK_5, W
$00A7	$02F9			SUBWF	STACK_9, F
$00A8	$0876			MOVF	STACK_6, W
$00A9	$1C03			BTFSS	STATUS, C
$00AA	$0F76			INCFSZ	STACK_6, W
$00AB	$02FA			SUBWF	STACK_10, F
$00AC	$0877			MOVF	STACK_7, W
$00AD	$1C03			BTFSS	STATUS, C
$00AE	$0F77			INCFSZ	STACK_7, W
$00AF	$02FB			SUBWF	STACK_11, F
$00B0	$28BE			GOTO	SOK22L8
$00B1	$	SADD22L8:
$00B1	$07F8			ADDWF	STACK_8, F
$00B2	$0875			MOVF	STACK_5, W
$00B3	$1803			BTFSC	STATUS, C
$00B4	$0F75			INCFSZ	STACK_5, W
$00B5	$07F9			ADDWF	STACK_9, F
$00B6	$0876			MOVF	STACK_6, W
$00B7	$1803			BTFSC	STATUS, C
$00B8	$0F76			INCFSZ	STACK_6, W
$00B9	$07FA			ADDWF	STACK_10, F
$00BA	$0877			MOVF	STACK_7, W
$00BB	$1803			BTFSC	STATUS, C
$00BC	$0F77			INCFSZ	STACK_7, W
$00BD	$07FB			ADDWF	STACK_11, F
$00BE	$	SOK22L8:
$00BE	$0DF2			RLF	STACK_2, F
$00BF	$3007			MOVLW	7
$00C0	$00FC			MOVWF	STACK_12
$00C1	$	LOOPS3232B:
$00C1	$0D72			RLF	STACK_2, W
$00C2	$0DF8			RLF	STACK_8, F
$00C3	$0DF9			RLF	STACK_9, F
$00C4	$0DFA			RLF	STACK_10, F
$00C5	$0DFB			RLF	STACK_11, F
$00C6	$0874			MOVF	STACK_4, W
$00C7	$1C72			BTFSS	STACK_2, 0
$00C8	$28D7			GOTO	SADD22LB
$00C9	$02F8			SUBWF	STACK_8, F
$00CA	$0875			MOVF	STACK_5, W
$00CB	$1C03			BTFSS	STATUS, C
$00CC	$0F75			INCFSZ	STACK_5, W
$00CD	$02F9			SUBWF	STACK_9, F
$00CE	$0876			MOVF	STACK_6, W
$00CF	$1C03			BTFSS	STATUS, C
$00D0	$0F76			INCFSZ	STACK_6, W
$00D1	$02FA			SUBWF	STACK_10, F
$00D2	$0877			MOVF	STACK_7, W
$00D3	$1C03			BTFSS	STATUS, C
$00D4	$0F77			INCFSZ	STACK_7, W
$00D5	$02FB			SUBWF	STACK_11, F
$00D6	$28E4			GOTO	SOK22LB
$00D7	$	SADD22LB:
$00D7	$07F8			ADDWF	STACK_8, F
$00D8	$0875			MOVF	STACK_5, W
$00D9	$1803			BTFSC	STATUS, C
$00DA	$0F75			INCFSZ	STACK_5, W
$00DB	$07F9			ADDWF	STACK_9, F
$00DC	$0876			MOVF	STACK_6, W
$00DD	$1803			BTFSC	STATUS, C
$00DE	$0F76			INCFSZ	STACK_6, W
$00DF	$07FA			ADDWF	STACK_10, F
$00E0	$0877			MOVF	STACK_7, W
$00E1	$1803			BTFSC	STATUS, C
$00E2	$0F77			INCFSZ	STACK_7, W
$00E3	$07FB			ADDWF	STACK_11, F
$00E4	$	SOK22LB:
$00E4	$0DF2			RLF	STACK_2, F
$00E5	$0BFC			DECFSZ	STACK_12, F
$00E6	$28C1			GOTO	LOOPS3232B
$00E7	$0D71			RLF	STACK_1, W
$00E8	$0DF8			RLF	STACK_8, F
$00E9	$0DF9			RLF	STACK_9, F
$00EA	$0DFA			RLF	STACK_10, F
$00EB	$0DFB			RLF	STACK_11, F
$00EC	$0874			MOVF	STACK_4, W
$00ED	$1C72			BTFSS	STACK_2, 0
$00EE	$28FD			GOTO	SADD22L16
$00EF	$02F8			SUBWF	STACK_8, F
$00F0	$0875			MOVF	STACK_5, W
$00F1	$1C03			BTFSS	STATUS, C
$00F2	$0F75			INCFSZ	STACK_5, W
$00F3	$02F9			SUBWF	STACK_9, F
$00F4	$0876			MOVF	STACK_6, W
$00F5	$1C03			BTFSS	STATUS, C
$00F6	$0F76			INCFSZ	STACK_6, W
$00F7	$02FA			SUBWF	STACK_10, F
$00F8	$0877			MOVF	STACK_7, W
$00F9	$1C03			BTFSS	STATUS, C
$00FA	$0F77			INCFSZ	STACK_7, W
$00FB	$02FB			SUBWF	STACK_11, F
$00FC	$290A			GOTO	SOK22L16
$00FD	$	SADD22L16:
$00FD	$07F8			ADDWF	STACK_8, F
$00FE	$0875			MOVF	STACK_5, W
$00FF	$1803			BTFSC	STATUS, C
$0100	$0F75			INCFSZ	STACK_5, W
$0101	$07F9			ADDWF	STACK_9, F
$0102	$0876			MOVF	STACK_6, W
$0103	$1803			BTFSC	STATUS, C
$0104	$0F76			INCFSZ	STACK_6, W
$0105	$07FA			ADDWF	STACK_10, F
$0106	$0877			MOVF	STACK_7, W
$0107	$1803			BTFSC	STATUS, C
$0108	$0F77			INCFSZ	STACK_7, W
$0109	$07FB			ADDWF	STACK_11, F
$010A	$	SOK22L16:
$010A	$0DF1			RLF	STACK_1, F
$010B	$3007			MOVLW	7
$010C	$00FC			MOVWF	STACK_12
$010D	$	LOOPS3232C:
$010D	$0D71			RLF	STACK_1, W
$010E	$0DF8			RLF	STACK_8, F
$010F	$0DF9			RLF	STACK_9, F
$0110	$0DFA			RLF	STACK_10, F
$0111	$0DFB			RLF	STACK_11, F
$0112	$0874			MOVF	STACK_4, W
$0113	$1C71			BTFSS	STACK_1, 0
$0114	$2923			GOTO	SADD22LC
$0115	$02F8			SUBWF	STACK_8, F
$0116	$0875			MOVF	STACK_5, W
$0117	$1C03			BTFSS	STATUS, C
$0118	$0F75			INCFSZ	STACK_5, W
$0119	$02F9			SUBWF	STACK_9, F
$011A	$0876			MOVF	STACK_6, W
$011B	$1C03			BTFSS	STATUS, C
$011C	$0F76			INCFSZ	STACK_6, W
$011D	$02FA			SUBWF	STACK_10, F
$011E	$0877			MOVF	STACK_7, W
$011F	$1C03			BTFSS	STATUS, C
$0120	$0F77			INCFSZ	STACK_7, W
$0121	$02FB			SUBWF	STACK_11, F
$0122	$2930			GOTO	SOK22LC
$0123	$	SADD22LC:
$0123	$07F8			ADDWF	STACK_8, F
$0124	$0875			MOVF	STACK_5, W
$0125	$1803			BTFSC	STATUS, C
$0126	$0F75			INCFSZ	STACK_5, W
$0127	$07F9			ADDWF	STACK_9, F
$0128	$0876			MOVF	STACK_6, W
$0129	$1803			BTFSC	STATUS, C
$012A	$0F76			INCFSZ	STACK_6, W
$012B	$07FA			ADDWF	STACK_10, F
$012C	$0877			MOVF	STACK_7, W
$012D	$1803			BTFSC	STATUS, C
$012E	$0F77			INCFSZ	STACK_7, W
$012F	$07FB			ADDWF	STACK_11, F
$0130	$	SOK22LC:
$0130	$0DF1			RLF	STACK_1, F
$0131	$0BFC			DECFSZ	STACK_12, F
$0132	$290D			GOTO	LOOPS3232C
$0133	$0D70			RLF	STACK_0, W
$0134	$0DF8			RLF	STACK_8, F
$0135	$0DF9			RLF	STACK_9, F
$0136	$0DFA			RLF	STACK_10, F
$0137	$0DFB			RLF	STACK_11, F
$0138	$0874			MOVF	STACK_4, W
$0139	$1C71			BTFSS	STACK_1, 0
$013A	$2949			GOTO	SADD22L24
$013B	$02F8			SUBWF	STACK_8, F
$013C	$0875			MOVF	STACK_5, W
$013D	$1C03			BTFSS	STATUS, C
$013E	$0F75			INCFSZ	STACK_5, W
$013F	$02F9			SUBWF	STACK_9, F
$0140	$0876			MOVF	STACK_6, W
$0141	$1C03			BTFSS	STATUS, C
$0142	$0F76			INCFSZ	STACK_6, W
$0143	$02FA			SUBWF	STACK_10, F
$0144	$0877			MOVF	STACK_7, W
$0145	$1C03			BTFSS	STATUS, C
$0146	$0F77			INCFSZ	STACK_7, W
$0147	$02FB			SUBWF	STACK_11, F
$0148	$2956			GOTO	SOK22L24
$0149	$	SADD22L24:
$0149	$07F8			ADDWF	STACK_8, F
$014A	$0875			MOVF	STACK_5, W
$014B	$1803			BTFSC	STATUS, C
$014C	$0F75			INCFSZ	STACK_5, W
$014D	$07F9			ADDWF	STACK_9, F
$014E	$0876			MOVF	STACK_6, W
$014F	$1803			BTFSC	STATUS, C
$0150	$0F76			INCFSZ	STACK_6, W
$0151	$07FA			ADDWF	STACK_10, F
$0152	$0877			MOVF	STACK_7, W
$0153	$1803			BTFSC	STATUS, C
$0154	$0F77			INCFSZ	STACK_7, W
$0155	$07FB			ADDWF	STACK_11, F
$0156	$	SOK22L24:
$0156	$0DF0			RLF	STACK_0, F
$0157	$3007			MOVLW	7
$0158	$00FC			MOVWF	STACK_12
$0159	$	LOOPS3232D:
$0159	$0D70			RLF	STACK_0, W
$015A	$0DF8			RLF	STACK_8, F
$015B	$0DF9			RLF	STACK_9, F
$015C	$0DFA			RLF	STACK_10, F
$015D	$0DFB			RLF	STACK_11, F
$015E	$0874			MOVF	STACK_4, W
$015F	$1C70			BTFSS	STACK_0, 0
$0160	$296F			GOTO	SADD22LD
$0161	$02F8			SUBWF	STACK_8, F
$0162	$0875			MOVF	STACK_5, W
$0163	$1C03			BTFSS	STATUS, C
$0164	$0F75			INCFSZ	STACK_5, W
$0165	$02F9			SUBWF	STACK_9, F
$0166	$0876			MOVF	STACK_6, W
$0167	$1C03			BTFSS	STATUS, C
$0168	$0F76			INCFSZ	STACK_6, W
$0169	$02FA			SUBWF	STACK_10, F
$016A	$0877			MOVF	STACK_7, W
$016B	$1C03			BTFSS	STATUS, C
$016C	$0F77			INCFSZ	STACK_7, W
$016D	$02FB			SUBWF	STACK_11, F
$016E	$297C			GOTO	SOK22LD
$016F	$	SADD22LD:
$016F	$07F8			ADDWF	STACK_8, F
$0170	$0875			MOVF	STACK_5, W
$0171	$1803			BTFSC	STATUS, C
$0172	$0F75			INCFSZ	STACK_5, W
$0173	$07F9			ADDWF	STACK_9, F
$0174	$0876			MOVF	STACK_6, W
$0175	$1803			BTFSC	STATUS, C
$0176	$0F76			INCFSZ	STACK_6, W
$0177	$07FA			ADDWF	STACK_10, F
$0178	$0877			MOVF	STACK_7, W
$0179	$1803			BTFSC	STATUS, C
$017A	$0F77			INCFSZ	STACK_7, W
$017B	$07FB			ADDWF	STACK_11, F
$017C	$	SOK22LD:
$017C	$0DF0			RLF	STACK_0, F
$017D	$0BFC			DECFSZ	STACK_12, F
$017E	$2959			GOTO	LOOPS3232D
$017F	$1870			BTFSC	STACK_0, 0
$0180	$298F			GOTO	SOK22L
$0181	$0874			MOVF	STACK_4, W
$0182	$07F8			ADDWF	STACK_8, F
$0183	$0875			MOVF	STACK_5, W
$0184	$1803			BTFSC	STATUS, C
$0185	$0F75			INCFSZ	STACK_5, W
$0186	$07F9			ADDWF	STACK_9, F
$0187	$0876			MOVF	STACK_6, W
$0188	$1803			BTFSC	STATUS, C
$0189	$0F76			INCFSZ	STACK_6, W
$018A	$07FA			ADDWF	STACK_10, F
$018B	$0877			MOVF	STACK_7, W
$018C	$1803			BTFSC	STATUS, C
$018D	$0F77			INCFSZ	STACK_7, W
$018E	$07FB			ADDWF	STACK_11, F
$018F	$	SOK22L:
$018F	$0008			RETURN
$0190	$	_COMFREM:
$0190	$1303			BCF	STATUS, RP1
$0191	$1283			BCF	STATUS, RP0
$0192	$09FB			COMF	STACK_11, F
$0193	$09FA			COMF	STACK_10, F
$0194	$09F9			COMF	STACK_9, F
$0195	$09F8			COMF	STACK_8, F
$0196	$0AF8			INCF	STACK_8, F
$0197	$1903			BTFSC	STATUS, Z
$0198	$0AF9			INCF	STACK_9, F
$0199	$1903			BTFSC	STATUS, Z
$019A	$0AFA			INCF	STACK_10, F
$019B	$1903			BTFSC	STATUS, Z
$019C	$0AFB			INCF	STACK_11, F
$019D	$0008			RETURN
$019E	$	_Lcd_Init:
$019E	$200C			CALL	_Delay_5500us
$019F	$200C			CALL	_Delay_5500us
$01A0	$200C			CALL	_Delay_5500us
$01A1	$0849			MOVF	FARG_Lcd_Init+0, 0
$01A2	$00A1			MOVWF	LCD_port_address
$01A3	$0849			MOVF	FARG_Lcd_Init+0, 0
$01A4	$0084			MOVWF	FSR
$01A5	$0180			CLRF	INDF, 1
$01A6	$1784			BSF	FSR, 7
$01A7	$0180			CLRF	INDF
$01A8	$1384			BCF	FSR, 7
$01A9	$1680			BSF	INDF, ___DB5
$01AA	$1600			BSF	INDF, ___DB4
$01AB	$1580			BSF	INDF, ___ENABLE
$01AC	$1180			BCF	INDF, ___ENABLE
$01AD	$200C			CALL	_Delay_5500us
$01AE	$1580			BSF	INDF, ___ENABLE
$01AF	$1180			BCF	INDF, ___ENABLE
$01B0	$200C			CALL	_Delay_5500us
$01B1	$1580			BSF	INDF, ___ENABLE
$01B2	$1180			BCF	INDF, ___ENABLE
$01B3	$200C			CALL	_Delay_5500us
$01B4	$1680			BSF	INDF, ___DB5
$01B5	$1200			BCF	INDF, ___DB4
$01B6	$1580			BSF	INDF, ___ENABLE
$01B7	$1180			BCF	INDF, ___ENABLE
$01B8	$200C			CALL	_Delay_5500us
$01B9	$0180			CLRF	INDF
$01BA	$1680			BSF	INDF, ___DB5
$01BB	$1580			BSF	INDF, ___ENABLE
$01BC	$1180			BCF	INDF, ___ENABLE
$01BD	$0180			CLRF	INDF
$01BE	$1780			BSF	INDF, ___DB7
$01BF	$1580			BSF	INDF, ___ENABLE
$01C0	$1180			BCF	INDF, ___ENABLE
$01C1	$200C			CALL	_Delay_5500us
$01C2	$0180			CLRF	INDF
$01C3	$1600			BSF	INDF, ___DB4
$01C4	$1580			BSF	INDF, ___ENABLE
$01C5	$1180			BCF	INDF, ___ENABLE
$01C6	$0180			CLRF	INDF
$01C7	$1580			BSF	INDF, ___ENABLE
$01C8	$1180			BCF	INDF, ___ENABLE
$01C9	$200C			CALL	_Delay_5500us
$01CA	$0180			CLRF	INDF
$01CB	$1580			BSF	INDF, ___ENABLE
$01CC	$1180			BCF	INDF, ___ENABLE
$01CD	$1600			BSF	INDF, ___DB4
$01CE	$1580			BSF	INDF, ___ENABLE
$01CF	$1180			BCF	INDF, ___ENABLE
$01D0	$200C			CALL	_Delay_5500us
$01D1	$0180			CLRF	INDF
$01D2	$1580			BSF	INDF, ___ENABLE
$01D3	$1180			BCF	INDF, ___ENABLE
$01D4	$1600			BSF	INDF, ___DB4
$01D5	$1680			BSF	INDF, ___DB5
$01D6	$1700			BSF	INDF, ___DB6
$01D7	$1780			BSF	INDF, ___DB7
$01D8	$1580			BSF	INDF, ___ENABLE
$01D9	$1180			BCF	INDF, ___ENABLE
$01DA	$200C			CALL	_Delay_5500us
$01DB	$3001			MOVLW	1
$01DC	$00A2			MOVWF	LCD_cmd_status
$01DD	$0008			RETURN
$01DE	$	_LCD_Out:
$01DE	$29F0			GOTO	L_LCD_Out_17
$01DF	$	L_LCD_Out_19:
$01DF	$3080			MOVLW	128
$01E0	$1303			BCF	STATUS, RP1
$01E1	$1283			BCF	STATUS, RP0
$01E2	$00C9			MOVWF	FARG_LCD_Out+0
$01E3	$2A03			GOTO	L_LCD_Out_18
$01E4	$	L_LCD_Out_20:
$01E4	$30C0			MOVLW	192
$01E5	$00C9			MOVWF	FARG_LCD_Out+0
$01E6	$2A03			GOTO	L_LCD_Out_18
$01E7	$	L_LCD_Out_21:
$01E7	$3094			MOVLW	148
$01E8	$00C9			MOVWF	FARG_LCD_Out+0
$01E9	$2A03			GOTO	L_LCD_Out_18
$01EA	$	L_LCD_Out_22:
$01EA	$30D4			MOVLW	212
$01EB	$00C9			MOVWF	FARG_LCD_Out+0
$01EC	$2A03			GOTO	L_LCD_Out_18
$01ED	$	L_LCD_Out_23:
$01ED	$3080			MOVLW	128
$01EE	$00C9			MOVWF	FARG_LCD_Out+0
$01EF	$2A03			GOTO	L_LCD_Out_18
$01F0	$	L_LCD_Out_17:
$01F0	$1303			BCF	STATUS, RP1
$01F1	$1283			BCF	STATUS, RP0
$01F2	$0849			MOVF	FARG_LCD_Out+0, 0
$01F3	$3A01			XORLW	1
$01F4	$1903			BTFSC	STATUS, Z
$01F5	$29DF			GOTO	L_LCD_Out_19
$01F6	$0849			MOVF	FARG_LCD_Out+0, 0
$01F7	$3A02			XORLW	2
$01F8	$1903			BTFSC	STATUS, Z
$01F9	$29E4			GOTO	L_LCD_Out_20
$01FA	$0849			MOVF	FARG_LCD_Out+0, 0
$01FB	$3A03			XORLW	3
$01FC	$1903			BTFSC	STATUS, Z
$01FD	$29E7			GOTO	L_LCD_Out_21
$01FE	$0849			MOVF	FARG_LCD_Out+0, 0
$01FF	$3A04			XORLW	4
$0200	$1903			BTFSC	STATUS, Z
$0201	$29EA			GOTO	L_LCD_Out_22
$0202	$29ED			GOTO	L_LCD_Out_23
$0203	$	L_LCD_Out_18:
$0203	$034A			DECF	FARG_LCD_Out+1, 0
$0204	$00F0			MOVWF	STACK_0
$0205	$0849			MOVF	FARG_LCD_Out+0, 0
$0206	$07F0			ADDWF	STACK_0, 1
$0207	$0870			MOVF	STACK_0, 0
$0208	$00C9			MOVWF	FARG_LCD_Out+0
$0209	$0870			MOVF	STACK_0, 0
$020A	$00CE			MOVWF	FARG_Lcd_Cmd+0
$020B	$2024			CALL	_Lcd_Cmd
$020C	$01A2			CLRF	LCD_cmd_status, 1
$020D	$01CC			CLRF	LCD_Out_i_L0, 1
$020E	$	L_LCD_Out_24:
$020E	$084C			MOVF	LCD_Out_i_L0, 0
$020F	$074B			ADDWF	FARG_LCD_Out+2, 0
$0210	$0084			MOVWF	FSR
$0211	$0800			MOVF	INDF, 0
$0212	$00F0			MOVWF	STACK_0
$0213	$0870			MOVF	STACK_0, 0
$0214	$1903			BTFSC	STATUS, Z
$0215	$2A1E			GOTO	L_LCD_Out_25
$0216	$084C			MOVF	LCD_Out_i_L0, 0
$0217	$074B			ADDWF	FARG_LCD_Out+2, 0
$0218	$0084			MOVWF	FSR
$0219	$0800			MOVF	INDF, 0
$021A	$00CD			MOVWF	FARG_Lcd_Chr_CP+0
$021B	$2059			CALL	_Lcd_Chr_CP
$021C	$0ACC			INCF	LCD_Out_i_L0, 1
$021D	$2A0E			GOTO	L_LCD_Out_24
$021E	$	L_LCD_Out_25:
$021E	$3001			MOVLW	1
$021F	$00A2			MOVWF	LCD_cmd_status
$0220	$0008			RETURN
$0221	$	_____DoICP:
$0221	$1303			BCF	STATUS, RP1
$0222	$1283			BCF	STATUS, RP0
$0223	$0824			MOVF	___DoICPHiAddr, 0
$0224	$008A			MOVWF	PCLATH
$0225	$0825			MOVF	___DoICPLoAddr, 0
$0226	$0082			MOVWF	PCL
$0227	$0008			RETURN
$0228	$	_Delay_22us:
;delays.c,10 :: 		void Delay_22us() {
;delays.c,11 :: 		Delay_us(22);
$0228	$3024			MOVLW	36
$0229	$1303			BCF	STATUS, RP1
$022A	$1283			BCF	STATUS, RP0
$022B	$00FA			MOVWF	STACK_10
$022C	$0BFA			DECFSZ	STACK_10, F
$022D	$2A2C			GOTO	$-1
$022E	$0000			NOP
;delays.c,12 :: 		}
$022F	$0008			RETURN
$0230	$	_Lcd_Chr:
$0230	$2A42			GOTO	L_Lcd_Chr_8
$0231	$	L_Lcd_Chr_10:
$0231	$3080			MOVLW	128
$0232	$1303			BCF	STATUS, RP1
$0233	$1283			BCF	STATUS, RP0
$0234	$00C9			MOVWF	FARG_Lcd_Chr+0
$0235	$2A55			GOTO	L_Lcd_Chr_9
$0236	$	L_Lcd_Chr_11:
$0236	$30C0			MOVLW	192
$0237	$00C9			MOVWF	FARG_Lcd_Chr+0
$0238	$2A55			GOTO	L_Lcd_Chr_9
$0239	$	L_Lcd_Chr_12:
$0239	$3094			MOVLW	148
$023A	$00C9			MOVWF	FARG_Lcd_Chr+0
$023B	$2A55			GOTO	L_Lcd_Chr_9
$023C	$	L_Lcd_Chr_13:
$023C	$30D4			MOVLW	212
$023D	$00C9			MOVWF	FARG_Lcd_Chr+0
$023E	$2A55			GOTO	L_Lcd_Chr_9
$023F	$	L_Lcd_Chr_14:
$023F	$3080			MOVLW	128
$0240	$00C9			MOVWF	FARG_Lcd_Chr+0
$0241	$2A55			GOTO	L_Lcd_Chr_9
$0242	$	L_Lcd_Chr_8:
$0242	$1303			BCF	STATUS, RP1
$0243	$1283			BCF	STATUS, RP0
$0244	$0849			MOVF	FARG_Lcd_Chr+0, 0
$0245	$3A01			XORLW	1
$0246	$1903			BTFSC	STATUS, Z
$0247	$2A31			GOTO	L_Lcd_Chr_10
$0248	$0849			MOVF	FARG_Lcd_Chr+0, 0
$0249	$3A02			XORLW	2
$024A	$1903			BTFSC	STATUS, Z
$024B	$2A36			GOTO	L_Lcd_Chr_11
$024C	$0849			MOVF	FARG_Lcd_Chr+0, 0
$024D	$3A03			XORLW	3
$024E	$1903			BTFSC	STATUS, Z
$024F	$2A39			GOTO	L_Lcd_Chr_12
$0250	$0849			MOVF	FARG_Lcd_Chr+0, 0
$0251	$3A04			XORLW	4
$0252	$1903			BTFSC	STATUS, Z
$0253	$2A3C			GOTO	L_Lcd_Chr_13
$0254	$2A3F			GOTO	L_Lcd_Chr_14
$0255	$	L_Lcd_Chr_9:
$0255	$034A			DECF	FARG_Lcd_Chr+1, 0
$0256	$00F0			MOVWF	STACK_0
$0257	$0849			MOVF	FARG_Lcd_Chr+0, 0
$0258	$07F0			ADDWF	STACK_0, 1
$0259	$0870			MOVF	STACK_0, 0
$025A	$00C9			MOVWF	FARG_Lcd_Chr+0
$025B	$3001			MOVLW	1
$025C	$00A2			MOVWF	LCD_cmd_status
$025D	$0870			MOVF	STACK_0, 0
$025E	$00CE			MOVWF	FARG_Lcd_Cmd+0
$025F	$2024			CALL	_Lcd_Cmd
$0260	$01A2			CLRF	LCD_cmd_status, 1
$0261	$084B			MOVF	FARG_Lcd_Chr+2, 0
$0262	$00CE			MOVWF	FARG_Lcd_Cmd+0
$0263	$2024			CALL	_Lcd_Cmd
$0264	$3001			MOVLW	1
$0265	$00A2			MOVWF	LCD_cmd_status
$0266	$0008			RETURN
$0267	$	_Mul_32x32_U:
$0267	$1303			BCF	STATUS, RP1
$0268	$1283			BCF	STATUS, RP0
$0269	$3022			MOVLW	34
$026A	$00FC			MOVWF	STACK_12
$026B	$01F8			CLRF	STACK_8
$026C	$01F9			CLRF	STACK_9
$026D	$01FA			CLRF	STACK_10
$026E	$01FB			CLRF	STACK_11
$026F	$	_NEXT:
$026F	$03FC			DECF	STACK_12, F
$0270	$1903			BTFSC	STATUS, Z
$0271	$2A9D			GOTO	_EXIT2
$0272	$1003			BCF	STATUS, C
$0273	$	_LOOP:
$0273	$0CFB			RRF	STACK_11, F
$0274	$0CFA			RRF	STACK_10, F
$0275	$0CF9			RRF	STACK_9, F
$0276	$0CF8			RRF	STACK_8, F
$0277	$0CF3			RRF	STACK_3, F
$0278	$0CF2			RRF	STACK_2, F
$0279	$0CF1			RRF	STACK_1, F
$027A	$0CF0			RRF	STACK_0, F
$027B	$1C03			BTFSS	STATUS, C
$027C	$2A6F			GOTO	_NEXT
$027D	$03FC			DECF	STACK_12, F
$027E	$1903			BTFSC	STATUS, Z
$027F	$2A8F			GOTO	_EXIT1
$0280	$0874			MOVF	STACK_4, W
$0281	$07F8			ADDWF	STACK_8, F
$0282	$0875			MOVF	STACK_5, W
$0283	$1803			BTFSC	STATUS, C
$0284	$0F75			INCFSZ	STACK_5, W
$0285	$07F9			ADDWF	STACK_9, F
$0286	$0876			MOVF	STACK_6, W
$0287	$1803			BTFSC	STATUS, C
$0288	$0F76			INCFSZ	STACK_6, W
$0289	$07FA			ADDWF	STACK_10, F
$028A	$0877			MOVF	STACK_7, W
$028B	$1803			BTFSC	STATUS, C
$028C	$0F77			INCFSZ	STACK_7, W
$028D	$07FB			ADDWF	STACK_11, F
$028E	$2A73			GOTO	_LOOP
$028F	$	_EXIT1:
$028F	$0874			MOVF	STACK_4, W
$0290	$07F8			ADDWF	STACK_8, F
$0291	$0875			MOVF	STACK_5, W
$0292	$1803			BTFSC	STATUS, C
$0293	$0F75			INCFSZ	STACK_5, W
$0294	$07F9			ADDWF	STACK_9, F
$0295	$0876			MOVF	STACK_6, W
$0296	$1803			BTFSC	STATUS, C
$0297	$0F76			INCFSZ	STACK_6, W
$0298	$07FA			ADDWF	STACK_10, F
$0299	$0877			MOVF	STACK_7, W
$029A	$1803			BTFSC	STATUS, C
$029B	$0F77			INCFSZ	STACK_7, W
$029C	$07FB			ADDWF	STACK_11, F
$029D	$	_EXIT2:
$029D	$0008			RETURN
$029E	$	_Div_32x32_S:
$029E	$1303			BCF	STATUS, RP1
$029F	$1283			BCF	STATUS, RP0
$02A0	$	FXD3232S:
$02A0	$01FC			CLRF	STACK_12
$02A1	$1BF7			BTFSC	STACK_7, 7
$02A2	$0AFC			INCF	STACK_12, F
$02A3	$01FD			CLRF	STACK_13
$02A4	$01FB			CLRF	STACK_11
$02A5	$01FA			CLRF	STACK_10
$02A6	$01F9			CLRF	STACK_9
$02A7	$01F8			CLRF	STACK_8
$02A8	$0873			MOVF	STACK_3, W
$02A9	$0472			IORWF	STACK_2, W
$02AA	$0471			IORWF	STACK_1, W
$02AB	$0470			IORWF	STACK_0, W
$02AC	$1903			BTFSC	STATUS, Z
$02AD	$2B32			GOTO	END_ALL
$02AE	$0873			MOVF	STACK_3, W
$02AF	$0677			XORWF	STACK_7, W
$02B0	$00A0			MOVWF	___math_tempb
$02B1	$1BA0			BTFSC	___math_tempb, 7
$02B2	$09FD			COMF	STACK_13, F
$02B3	$1FF7			BTFSS	STACK_7, 7
$02B4	$2AC0			GOTO	CA3232S
$02B5	$09F4			COMF	STACK_4, F
$02B6	$09F5			COMF	STACK_5, F
$02B7	$09F6			COMF	STACK_6, F
$02B8	$09F7			COMF	STACK_7, F
$02B9	$0AF4			INCF	STACK_4, F
$02BA	$1903			BTFSC	STATUS, Z
$02BB	$0AF5			INCF	STACK_5, F
$02BC	$1903			BTFSC	STATUS, Z
$02BD	$0AF6			INCF	STACK_6, F
$02BE	$1903			BTFSC	STATUS, Z
$02BF	$0AF7			INCF	STACK_7, F
$02C0	$	CA3232S:
$02C0	$1FF3			BTFSS	STACK_3, 7
$02C1	$2ACD			GOTO	C3232SX
$02C2	$09F0			COMF	STACK_0, F
$02C3	$09F1			COMF	STACK_1, F
$02C4	$09F2			COMF	STACK_2, F
$02C5	$09F3			COMF	STACK_3, F
$02C6	$0AF0			INCF	STACK_0, F
$02C7	$1903			BTFSC	STATUS, Z
$02C8	$0AF1			INCF	STACK_1, F
$02C9	$1903			BTFSC	STATUS, Z
$02CA	$0AF2			INCF	STACK_2, F
$02CB	$1903			BTFSC	STATUS, Z
$02CC	$0AF3			INCF	STACK_3, F
$02CD	$	C3232SX:
$02CD	$0873			MOVF	STACK_3, W
$02CE	$0477			IORWF	STACK_7, W
$02CF	$00A0			MOVWF	___math_tempb
$02D0	$1BA0			BTFSC	___math_tempb, 7
$02D1	$2AEE			GOTO	C3232SX1
$02D2	$	C3232S:
$02D2	$2062			CALL	_SDIV3232L
$02D3	$	C3232S2:
$02D3	$1BFC			BTFSC	STACK_12, 7
$02D4	$2B0B			GOTO	C3232SX4
$02D5	$	C3232SOK:
$02D5	$1FFD			BTFSS	STACK_13, 7
$02D6	$2B32			GOTO	END_ALL
$02D7	$09F0			COMF	STACK_0, F
$02D8	$09F1			COMF	STACK_1, F
$02D9	$09F2			COMF	STACK_2, F
$02DA	$09F3			COMF	STACK_3, F
$02DB	$0AF0			INCF	STACK_0, F
$02DC	$1903			BTFSC	STATUS, Z
$02DD	$0AF1			INCF	STACK_1, F
$02DE	$1903			BTFSC	STATUS, Z
$02DF	$0AF2			INCF	STACK_2, F
$02E0	$1903			BTFSC	STATUS, Z
$02E1	$0AF3			INCF	STACK_3, F
$02E2	$09F8			COMF	STACK_8, F
$02E3	$09F9			COMF	STACK_9, F
$02E4	$09FA			COMF	STACK_10, F
$02E5	$09FB			COMF	STACK_11, F
$02E6	$0AF8			INCF	STACK_8, F
$02E7	$1903			BTFSC	STATUS, Z
$02E8	$0AF9			INCF	STACK_9, F
$02E9	$1903			BTFSC	STATUS, Z
$02EA	$0AFA			INCF	STACK_10, F
$02EB	$1903			BTFSC	STATUS, Z
$02EC	$0AFB			INCF	STACK_11, F
$02ED	$2B32			GOTO	END_ALL
$02EE	$	C3232SX1:
$02EE	$1FF7			BTFSS	STACK_7, 7
$02EF	$2B05			GOTO	C3232SX3
$02F0	$1BF3			BTFSC	STACK_3, 7
$02F1	$2AFF			GOTO	C3232SX2
$02F2	$0873			MOVF	STACK_3, W
$02F3	$00FB			MOVWF	STACK_11
$02F4	$0872			MOVF	STACK_2, W
$02F5	$00FA			MOVWF	STACK_10
$02F6	$0871			MOVF	STACK_1, W
$02F7	$00F9			MOVWF	STACK_9
$02F8	$0870			MOVF	STACK_0, W
$02F9	$00F8			MOVWF	STACK_8
$02FA	$01F3			CLRF	STACK_3
$02FB	$01F2			CLRF	STACK_2
$02FC	$01F1			CLRF	STACK_1
$02FD	$01F0			CLRF	STACK_0
$02FE	$2AD5			GOTO	C3232SOK
$02FF	$	C3232SX2:
$02FF	$01F3			CLRF	STACK_3
$0300	$01F2			CLRF	STACK_2
$0301	$01F1			CLRF	STACK_1
$0302	$01F0			CLRF	STACK_0
$0303	$0AF0			INCF	STACK_0, F
$0304	$3400			RETLW	0x00
$0305	$	C3232SX3:
$0305	$09F3			COMF	STACK_3, F
$0306	$09F2			COMF	STACK_2, F
$0307	$09F1			COMF	STACK_1, F
$0308	$09F0			COMF	STACK_0, F
$0309	$17FC			BSF	STACK_12, 7
$030A	$2AD2			GOTO	C3232S
$030B	$	C3232SX4:
$030B	$0AF8			INCF	STACK_8, F
$030C	$1903			BTFSC	STATUS, Z
$030D	$0AF9			INCF	STACK_9, F
$030E	$1903			BTFSC	STATUS, Z
$030F	$0AFA			INCF	STACK_10, F
$0310	$1903			BTFSC	STATUS, Z
$0311	$0AFB			INCF	STACK_11, F
$0312	$0874			MOVF	STACK_4, W
$0313	$0278			SUBWF	STACK_8, W
$0314	$1D03			BTFSS	STATUS, Z
$0315	$2AD5			GOTO	C3232SOK
$0316	$0875			MOVF	STACK_5, W
$0317	$0279			SUBWF	STACK_9, W
$0318	$1D03			BTFSS	STATUS, Z
$0319	$2AD5			GOTO	C3232SOK
$031A	$0876			MOVF	STACK_6, W
$031B	$027A			SUBWF	STACK_10, W
$031C	$1D03			BTFSS	STATUS, Z
$031D	$2AD5			GOTO	C3232SOK
$031E	$0877			MOVF	STACK_7, W
$031F	$027B			SUBWF	STACK_11, W
$0320	$1D03			BTFSS	STATUS, Z
$0321	$2AD5			GOTO	C3232SOK
$0322	$01FB			CLRF	STACK_11
$0323	$01FA			CLRF	STACK_10
$0324	$01F9			CLRF	STACK_9
$0325	$01F8			CLRF	STACK_8
$0326	$0AF0			INCF	STACK_0, F
$0327	$1903			BTFSC	STATUS, Z
$0328	$0AF1			INCF	STACK_1, F
$0329	$1903			BTFSC	STATUS, Z
$032A	$0AF2			INCF	STACK_2, F
$032B	$1903			BTFSC	STATUS, Z
$032C	$0AF3			INCF	STACK_3, F
$032D	$1FF3			BTFSS	STACK_3, 7
$032E	$2AD5			GOTO	C3232SOK
$032F	$01A0			CLRF	___math_tempb
$0330	$1620			BSF	___math_tempb, 4
$0331	$34FF			RETLW	0xFF
$0332	$	END_ALL:
$0332	$01A0			CLRF	___math_tempb
$0333	$1C7C			BTFSS	STACK_12, 0
$0334	$2B36			GOTO	avoid_comfrem
$0335	$2190			CALL	_COMFREM
$0336	$	avoid_comfrem:
$0336	$3F00			ADDLW	0x00
$0337	$0008			RETURN
$0338	$	_init_MCU:
;MonitorCaricaBatterie.c,52 :: 		void init_MCU (void)
;MonitorCaricaBatterie.c,54 :: 		INTCON = 0;  // Disabilita gli interrupt
$0338	$018B			CLRF	INTCON, 1
;MonitorCaricaBatterie.c,56 :: 		ADCON1 = 0b11000100; // AN0 AN1 AN3 sono ingressi analogici
$0339	$30C4			MOVLW	196
$033A	$1303			BCF	STATUS, RP1
$033B	$1683			BSF	STATUS, RP0
$033C	$009F			MOVWF	ADCON1
;MonitorCaricaBatterie.c,59 :: 		TRISA = 0b11011111; //  Setto la PORTA
$033D	$30DF			MOVLW	223
$033E	$0085			MOVWF	TRISA
;MonitorCaricaBatterie.c,60 :: 		TRISB = 0x00;  //  Setto la PORTB come output
$033F	$0186			CLRF	TRISB, 1
;MonitorCaricaBatterie.c,61 :: 		TRISC = 0x00;  //  Setto la PORTC come output
$0340	$0187			CLRF	TRISC, 1
;MonitorCaricaBatterie.c,62 :: 		}
$0341	$0008			RETURN
$0342	$	_start_LCD:
;MonitorCaricaBatterie.c,66 :: 		void start_LCD()
;MonitorCaricaBatterie.c,68 :: 		Lcd_Init(&PORTB);  // Inizializza l'LCD sulla PORTD
$0342	$3006			MOVLW	PORTB
$0343	$1303			BCF	STATUS, RP1
$0344	$1283			BCF	STATUS, RP0
$0345	$00C9			MOVWF	FARG_Lcd_Init+0
$0346	$219E			CALL	_Lcd_Init
;MonitorCaricaBatterie.c,69 :: 		Delay_ms(5);
$0347	$3021			MOVLW	33
$0348	$00FB			MOVWF	STACK_11
$0349	$30FF			MOVLW	255
$034A	$00FA			MOVWF	STACK_10
$034B	$0BFB			DECFSZ	STACK_11, F
$034C	$2B4E			GOTO	$+2
$034D	$2B51			GOTO	$+4
$034E	$0BFA			DECFSZ	STACK_10, F
$034F	$2B4E			GOTO	$-1
$0350	$2B4B			GOTO	$-5
$0351	$3060			MOVLW	96
$0352	$00FA			MOVWF	STACK_10
$0353	$0BFA			DECFSZ	STACK_10, F
$0354	$2B53			GOTO	$-1
$0355	$0000			NOP
;MonitorCaricaBatterie.c,70 :: 		Lcd_Cmd(LCD_CLEAR);  // Clear display
$0356	$3001			MOVLW	1
$0357	$00CE			MOVWF	FARG_Lcd_Cmd+0
$0358	$2024			CALL	_Lcd_Cmd
;MonitorCaricaBatterie.c,71 :: 		Delay_ms(5);
$0359	$3021			MOVLW	33
$035A	$00FB			MOVWF	STACK_11
$035B	$30FF			MOVLW	255
$035C	$00FA			MOVWF	STACK_10
$035D	$0BFB			DECFSZ	STACK_11, F
$035E	$2B60			GOTO	$+2
$035F	$2B63			GOTO	$+4
$0360	$0BFA			DECFSZ	STACK_10, F
$0361	$2B60			GOTO	$-1
$0362	$2B5D			GOTO	$-5
$0363	$3060			MOVLW	96
$0364	$00FA			MOVWF	STACK_10
$0365	$0BFA			DECFSZ	STACK_10, F
$0366	$2B65			GOTO	$-1
$0367	$0000			NOP
;MonitorCaricaBatterie.c,72 :: 		Lcd_Cmd(LCD_CURSOR_OFF);  // Disattiva il cursore
$0368	$300C			MOVLW	12
$0369	$00CE			MOVWF	FARG_Lcd_Cmd+0
$036A	$2024			CALL	_Lcd_Cmd
;MonitorCaricaBatterie.c,73 :: 		Delay_ms(250);
$036B	$3007			MOVLW	7
$036C	$00FC			MOVWF	STACK_12
$036D	$30FF			MOVLW	255
$036E	$00FB			MOVWF	STACK_11
$036F	$30FF			MOVLW	255
$0370	$00FA			MOVWF	STACK_10
$0371	$0BFC			DECFSZ	STACK_12, F
$0372	$2B74			GOTO	$+2
$0373	$2B7B			GOTO	$+8
$0374	$0BFB			DECFSZ	STACK_11, F
$0375	$2B77			GOTO	$+2
$0376	$2B7A			GOTO	$+4
$0377	$0BFA			DECFSZ	STACK_10, F
$0378	$2B77			GOTO	$-1
$0379	$2B74			GOTO	$-5
$037A	$2B71			GOTO	$-9
$037B	$3060			MOVLW	96
$037C	$00FB			MOVWF	STACK_11
$037D	$30FF			MOVLW	255
$037E	$00FA			MOVWF	STACK_10
$037F	$0BFB			DECFSZ	STACK_11, F
$0380	$2B82			GOTO	$+2
$0381	$2B85			GOTO	$+4
$0382	$0BFA			DECFSZ	STACK_10, F
$0383	$2B82			GOTO	$-1
$0384	$2B7F			GOTO	$-5
$0385	$3013			MOVLW	19
$0386	$00FA			MOVWF	STACK_10
$0387	$0BFA			DECFSZ	STACK_10, F
$0388	$2B87			GOTO	$-1
$0389	$0000			NOP
$038A	$0000			NOP
;MonitorCaricaBatterie.c,74 :: 		}
$038B	$0008			RETURN
$038C	$	_rom_str2lcd:
;MonitorCaricaBatterie.c,38 :: 		void rom_str2lcd (unsigned char riga, unsigned char col ,char const *str_in_ROM)
;MonitorCaricaBatterie.c,40 :: 		unsigned short i = 0;
$038C	$1303			BCF	STATUS, RP1
$038D	$1283			BCF	STATUS, RP0
$038E	$01B8			CLRF	rom_str2lcd_i_L0, 1
;MonitorCaricaBatterie.c,43 :: 		do {
$038F	$	L_rom_str2lcd_0:
;MonitorCaricaBatterie.c,44 :: 		txt_msg[i] = str_in_ROM[i];
$038F	$0838			MOVF	rom_str2lcd_i_L0, 0
$0390	$3F39			ADDLW	rom_str2lcd_txt_msg_L0
$0391	$00F2			MOVWF	STACK_2
$0392	$0838			MOVF	rom_str2lcd_i_L0, 0
$0393	$0736			ADDWF	FARG_rom_str2lcd+2, 0
$0394	$00F0			MOVWF	STACK_0
$0395	$0837			MOVF	FARG_rom_str2lcd+3, 0
$0396	$1803			BTFSC	STATUS, C
$0397	$3F01			ADDLW	1
$0398	$00F1			MOVWF	STACK_0+1
$0399	$0870			MOVF	STACK_0, 0
$039A	$00A5			MOVWF	___DoICPLoAddr
$039B	$0871			MOVF	STACK_0+1, 0
$039C	$00A4			MOVWF	___DoICPHiAddr
$039D	$080A			MOVF	PCLATH, 0
$039E	$00A3			MOVWF	___DoICPSavePCLATH
$039F	$2221			CALL	_____DoICP
$03A0	$00F0			MOVWF	STACK_0
$03A1	$0823			MOVF	___DoICPSavePCLATH, 0
$03A2	$008A			MOVWF	PCLATH
$03A3	$0872			MOVF	STACK_2, 0
$03A4	$0084			MOVWF	FSR
$03A5	$0870			MOVF	STACK_0, 0
$03A6	$0080			MOVWF	INDF
;MonitorCaricaBatterie.c,45 :: 		} while (str_in_ROM[i++]);
$03A7	$0838			MOVF	rom_str2lcd_i_L0, 0
$03A8	$00F0			MOVWF	STACK_0
$03A9	$0AB8			INCF	rom_str2lcd_i_L0, 1
$03AA	$3000			MOVLW	0
$03AB	$00F1			MOVWF	STACK_0+1
$03AC	$0836			MOVF	FARG_rom_str2lcd+2, 0
$03AD	$07F0			ADDWF	STACK_0, 1
$03AE	$0837			MOVF	FARG_rom_str2lcd+3, 0
$03AF	$1803			BTFSC	STATUS, C
$03B0	$3F01			ADDLW	1
$03B1	$07F1			ADDWF	STACK_0+1, 1
$03B2	$0870			MOVF	STACK_0, 0
$03B3	$00A5			MOVWF	___DoICPLoAddr
$03B4	$0871			MOVF	STACK_0+1, 0
$03B5	$00A4			MOVWF	___DoICPHiAddr
$03B6	$080A			MOVF	PCLATH, 0
$03B7	$00A3			MOVWF	___DoICPSavePCLATH
$03B8	$2221			CALL	_____DoICP
$03B9	$00F0			MOVWF	STACK_0
$03BA	$0823			MOVF	___DoICPSavePCLATH, 0
$03BB	$008A			MOVWF	PCLATH
$03BC	$0870			MOVF	STACK_0, 0
$03BD	$1D03			BTFSS	STATUS, Z
$03BE	$2B8F			GOTO	L_rom_str2lcd_0
$03BF	$	L_rom_str2lcd_1:
;MonitorCaricaBatterie.c,47 :: 		LCD_Out(riga,col,txt_msg);
$03BF	$0834			MOVF	FARG_rom_str2lcd+0, 0
$03C0	$00C9			MOVWF	FARG_LCD_Out+0
$03C1	$0835			MOVF	FARG_rom_str2lcd+1, 0
$03C2	$00CA			MOVWF	FARG_LCD_Out+1
$03C3	$3039			MOVLW	rom_str2lcd_txt_msg_L0
$03C4	$00CB			MOVWF	FARG_LCD_Out+2
$03C5	$21DE			CALL	_LCD_Out
;MonitorCaricaBatterie.c,48 :: 		}
$03C6	$0008			RETURN
$03C7	$	table___txt_avvio1:
;MonitorCaricaBatterie.c,30 :: 		const char txt_avvio1[] = "Monitor Batteria";
$03C7	$344D			RETLW	77
$03C8	$346F			RETLW	111
$03C9	$346E			RETLW	110
$03CA	$3469			RETLW	105
$03CB	$3474			RETLW	116
$03CC	$346F			RETLW	111
$03CD	$3472			RETLW	114
$03CE	$3420			RETLW	32
$03CF	$3442			RETLW	66
$03D0	$3461			RETLW	97
$03D1	$3474			RETLW	116
$03D2	$3474			RETLW	116
$03D3	$3465			RETLW	101
$03D4	$3472			RETLW	114
$03D5	$3469			RETLW	105
$03D6	$3461			RETLW	97
$03D7	$3400			RETLW	0
$03D8	$0008			RETURN
$03D9	$	table___txt_avvio2:
;MonitorCaricaBatterie.c,31 :: 		const char txt_avvio2[] = "CSTech  Set 2007";
$03D9	$3443			RETLW	67
$03DA	$3453			RETLW	83
$03DB	$3454			RETLW	84
$03DC	$3465			RETLW	101
$03DD	$3463			RETLW	99
$03DE	$3468			RETLW	104
$03DF	$3420			RETLW	32
$03E0	$3420			RETLW	32
$03E1	$3453			RETLW	83
$03E2	$3465			RETLW	101
$03E3	$3474			RETLW	116
$03E4	$3420			RETLW	32
$03E5	$3432			RETLW	50
$03E6	$3430			RETLW	48
$03E7	$3430			RETLW	48
$03E8	$3437			RETLW	55
$03E9	$3400			RETLW	0
$03EA	$0008			RETURN
$03EB	$	table___txt_riga1:
;MonitorCaricaBatterie.c,33 :: 		const char txt_riga1[]  = "AUDI A6 :   .  V";
$03EB	$3441			RETLW	65
$03EC	$3455			RETLW	85
$03ED	$3444			RETLW	68
$03EE	$3449			RETLW	73
$03EF	$3420			RETLW	32
$03F0	$3441			RETLW	65
$03F1	$3436			RETLW	54
$03F2	$3420			RETLW	32
$03F3	$343A			RETLW	58
$03F4	$3420			RETLW	32
$03F5	$3420			RETLW	32
$03F6	$3420			RETLW	32
$03F7	$342E			RETLW	46
$03F8	$3420			RETLW	32
$03F9	$3420			RETLW	32
$03FA	$3456			RETLW	86
$03FB	$3400			RETLW	0
$03FC	$0008			RETURN
$03FD	$	table___txt_riga2:
;MonitorCaricaBatterie.c,34 :: 		const char txt_riga2[]  = "MERCEDES:   .  V";
$03FD	$344D			RETLW	77
$03FE	$3445			RETLW	69
$03FF	$3452			RETLW	82
$0400	$3443			RETLW	67
$0401	$3445			RETLW	69
$0402	$3444			RETLW	68
$0403	$3445			RETLW	69
$0404	$3453			RETLW	83
$0405	$343A			RETLW	58
$0406	$3420			RETLW	32
$0407	$3420			RETLW	32
$0408	$3420			RETLW	32
$0409	$342E			RETLW	46
$040A	$3420			RETLW	32
$040B	$3420			RETLW	32
$040C	$3456			RETLW	86
$040D	$3400			RETLW	0
$040E	$0008			RETURN
$040F	$	_Adc_Read:
$040F	$1303			BCF	STATUS, RP1
$0410	$1283			BCF	STATUS, RP0
$0411	$019F			CLRF	ADCON0, 1
$0412	$30C0			MOVLW	192
$0413	$049F			IORWF	ADCON0, 1
$0414	$1683			BSF	STATUS, RP0
$0415	$171F			BSF	ADCON1, 6
$0416	$179F			BSF	ADCON1, 7
$0417	$1283			BCF	STATUS, RP0
$0418	$0834			MOVF	FARG_Adc_Read+0, 0
$0419	$00F0			MOVWF	STACK_0
$041A	$0DF0			RLF	STACK_0, 1
$041B	$1070			BCF	STACK_0, 0
$041C	$0DF0			RLF	STACK_0, 1
$041D	$1070			BCF	STACK_0, 0
$041E	$0DF0			RLF	STACK_0, 1
$041F	$1070			BCF	STACK_0, 0
$0420	$0870			MOVF	STACK_0, 0
$0421	$049F			IORWF	ADCON0, 1
$0422	$141F			BSF	ADCON0, 0
$0423	$2228			CALL	_Delay_22us
$0424	$151F			BSF	ADCON0, 2
$0425	$	L_Adc_Read_0:
$0425	$1D1F			BTFSS	ADCON0, 2
$0426	$2C29			GOTO	L_Adc_Read_1
$0427	$0000			NOP
$0428	$2C25			GOTO	L_Adc_Read_0
$0429	$	L_Adc_Read_1:
$0429	$101F			BCF	ADCON0, 0
$042A	$3008			MOVLW	8
$042B	$00F2			MOVWF	STACK_2
$042C	$081E			MOVF	ADRESH, 0
$042D	$00F0			MOVWF	STACK_0
$042E	$01F1			CLRF	STACK_0+1
$042F	$0872			MOVF	STACK_2, 0
$0430	$	L_Adc_Read_2:
$0430	$1903			BTFSC	STATUS, Z
$0431	$2C37			GOTO	L_Adc_Read_3
$0432	$0DF0			RLF	STACK_0, 1
$0433	$0DF1			RLF	STACK_0+1, 1
$0434	$1070			BCF	STACK_0, 0
$0435	$3FFF			ADDLW	255
$0436	$2C30			GOTO	L_Adc_Read_2
$0437	$	L_Adc_Read_3:
$0437	$1683			BSF	STATUS, RP0
$0438	$081E			MOVF	ADRESL, 0
$0439	$04F0			IORWF	STACK_0, 1
$043A	$3000			MOVLW	0
$043B	$04F1			IORWF	STACK_0+1, 1
$043C	$0008			RETURN
$043D	$	_Display_Tensione:
;MonitorCaricaBatterie.c,78 :: 		void Display_Tensione(unsigned int adcVolt1, unsigned int adcVolt2)
;MonitorCaricaBatterie.c,84 :: 		tensione1 = (MAX_V1_BATTERIA * (unsigned long)adcVolt1) / 1023;
$043D	$1303			BCF	STATUS, RP1
$043E	$1283			BCF	STATUS, RP0
$043F	$0834			MOVF	FARG_Display_Tensione+0, 0
$0440	$00F0			MOVWF	STACK_0
$0441	$0835			MOVF	FARG_Display_Tensione+1, 0
$0442	$00F1			MOVWF	STACK_0+1
$0443	$01F2			CLRF	STACK_0+2
$0444	$01F3			CLRF	STACK_0+3
$0445	$3072			MOVLW	114
$0446	$00F4			MOVWF	STACK_4
$0447	$3006			MOVLW	6
$0448	$00F5			MOVWF	STACK_4+1
$0449	$01F6			CLRF	STACK_4+2
$044A	$01F7			CLRF	STACK_4+3
$044B	$2267			CALL	_mul_32x32_u
$044C	$30FF			MOVLW	255
$044D	$00F4			MOVWF	STACK_4
$044E	$3003			MOVLW	3
$044F	$00F5			MOVWF	STACK_4+1
$0450	$01F6			CLRF	STACK_4+2
$0451	$01F7			CLRF	STACK_4+3
$0452	$229E			CALL	_div_32x32_s
$0453	$0870			MOVF	STACK_0, 0
$0454	$00C0			MOVWF	FLOC_Display_Tensione+8
$0455	$0871			MOVF	STACK_0+1, 0
$0456	$00C1			MOVWF	FLOC_Display_Tensione+9
$0457	$0872			MOVF	STACK_0+2, 0
$0458	$00C2			MOVWF	FLOC_Display_Tensione+10
$0459	$0873			MOVF	STACK_0+3, 0
$045A	$00C3			MOVWF	FLOC_Display_Tensione+11
$045B	$0840			MOVF	FLOC_Display_Tensione+8, 0
$045C	$00B8			MOVWF	Display_Tensione_tensione1_L0
$045D	$0841			MOVF	FLOC_Display_Tensione+9, 0
$045E	$00B9			MOVWF	Display_Tensione_tensione1_L0+1
$045F	$0842			MOVF	FLOC_Display_Tensione+10, 0
$0460	$00BA			MOVWF	Display_Tensione_tensione1_L0+2
$0461	$0843			MOVF	FLOC_Display_Tensione+11, 0
$0462	$00BB			MOVWF	Display_Tensione_tensione1_L0+3
;MonitorCaricaBatterie.c,85 :: 		tensione2 = (MAX_V2_BATTERIA * (unsigned long)adcVolt2) / 1023;
$0463	$0836			MOVF	FARG_Display_Tensione+2, 0
$0464	$00F0			MOVWF	STACK_0
$0465	$0837			MOVF	FARG_Display_Tensione+3, 0
$0466	$00F1			MOVWF	STACK_0+1
$0467	$01F2			CLRF	STACK_0+2
$0468	$01F3			CLRF	STACK_0+3
$0469	$3072			MOVLW	114
$046A	$00F4			MOVWF	STACK_4
$046B	$3006			MOVLW	6
$046C	$00F5			MOVWF	STACK_4+1
$046D	$01F6			CLRF	STACK_4+2
$046E	$01F7			CLRF	STACK_4+3
$046F	$2267			CALL	_mul_32x32_u
$0470	$30FF			MOVLW	255
$0471	$00F4			MOVWF	STACK_4
$0472	$3003			MOVLW	3
$0473	$00F5			MOVWF	STACK_4+1
$0474	$01F6			CLRF	STACK_4+2
$0475	$01F7			CLRF	STACK_4+3
$0476	$229E			CALL	_div_32x32_s
$0477	$0870			MOVF	STACK_0, 0
$0478	$00BC			MOVWF	Display_Tensione_tensione2_L0
$0479	$0871			MOVF	STACK_0+1, 0
$047A	$00BD			MOVWF	Display_Tensione_tensione2_L0+1
$047B	$0872			MOVF	STACK_0+2, 0
$047C	$00BE			MOVWF	Display_Tensione_tensione2_L0+2
$047D	$0873			MOVF	STACK_0+3, 0
$047E	$00BF			MOVWF	Display_Tensione_tensione2_L0+3
;MonitorCaricaBatterie.c,89 :: 		ch = tensione1 / 1000;
$047F	$30E8			MOVLW	232
$0480	$00F4			MOVWF	STACK_4
$0481	$3003			MOVLW	3
$0482	$00F5			MOVWF	STACK_4+1
$0483	$01F6			CLRF	STACK_4+2
$0484	$01F7			CLRF	STACK_4+3
$0485	$0840			MOVF	FLOC_Display_Tensione+8, 0
$0486	$00F0			MOVWF	STACK_0
$0487	$0841			MOVF	FLOC_Display_Tensione+9, 0
$0488	$00F1			MOVWF	STACK_0+1
$0489	$0842			MOVF	FLOC_Display_Tensione+10, 0
$048A	$00F2			MOVWF	STACK_0+2
$048B	$0843			MOVF	FLOC_Display_Tensione+11, 0
$048C	$00F3			MOVWF	STACK_0+3
$048D	$229E			CALL	_div_32x32_s
;MonitorCaricaBatterie.c,90 :: 		LCD_Chr(1,11,48+ch);
$048E	$3001			MOVLW	1
$048F	$00C9			MOVWF	FARG_Lcd_Chr+0
$0490	$300B			MOVLW	11
$0491	$00CA			MOVWF	FARG_Lcd_Chr+1
$0492	$0870			MOVF	STACK_0, 0
$0493	$3F30			ADDLW	48
$0494	$00CB			MOVWF	FARG_Lcd_Chr+2
$0495	$2230			CALL	_Lcd_Chr
;MonitorCaricaBatterie.c,91 :: 		ch = (tensione1 / 100) % 10;
$0496	$3064			MOVLW	100
$0497	$00F4			MOVWF	STACK_4
$0498	$01F5			CLRF	STACK_4+1
$0499	$01F6			CLRF	STACK_4+2
$049A	$01F7			CLRF	STACK_4+3
$049B	$0838			MOVF	Display_Tensione_tensione1_L0, 0
$049C	$00F0			MOVWF	STACK_0
$049D	$0839			MOVF	Display_Tensione_tensione1_L0+1, 0
$049E	$00F1			MOVWF	STACK_0+1
$049F	$083A			MOVF	Display_Tensione_tensione1_L0+2, 0
$04A0	$00F2			MOVWF	STACK_0+2
$04A1	$083B			MOVF	Display_Tensione_tensione1_L0+3, 0
$04A2	$00F3			MOVWF	STACK_0+3
$04A3	$229E			CALL	_div_32x32_s
$04A4	$300A			MOVLW	10
$04A5	$00F4			MOVWF	STACK_4
$04A6	$01F5			CLRF	STACK_4+1
$04A7	$01F6			CLRF	STACK_4+2
$04A8	$01F7			CLRF	STACK_4+3
$04A9	$229E			CALL	_div_32x32_s
$04AA	$0878			MOVF	STACK_8, 0
$04AB	$00F0			MOVWF	STACK_0
$04AC	$0879			MOVF	STACK_9, 0
$04AD	$00F1			MOVWF	STACK_1
$04AE	$087A			MOVF	STACK_10, 0
$04AF	$00F2			MOVWF	STACK_2
$04B0	$087B			MOVF	STACK_11, 0
$04B1	$00F3			MOVWF	STACK_3
;MonitorCaricaBatterie.c,92 :: 		LCD_Chr_CP(48+ch);
$04B2	$0870			MOVF	STACK_0, 0
$04B3	$3F30			ADDLW	48
$04B4	$00CD			MOVWF	FARG_Lcd_Chr_CP+0
$04B5	$2059			CALL	_Lcd_Chr_CP
;MonitorCaricaBatterie.c,93 :: 		LCD_Chr_CP('.');
$04B6	$302E			MOVLW	46
$04B7	$00CD			MOVWF	FARG_Lcd_Chr_CP+0
$04B8	$2059			CALL	_Lcd_Chr_CP
;MonitorCaricaBatterie.c,94 :: 		ch = (tensione1 / 10) % 10;
$04B9	$300A			MOVLW	10
$04BA	$00F4			MOVWF	STACK_4
$04BB	$01F5			CLRF	STACK_4+1
$04BC	$01F6			CLRF	STACK_4+2
$04BD	$01F7			CLRF	STACK_4+3
$04BE	$0838			MOVF	Display_Tensione_tensione1_L0, 0
$04BF	$00F0			MOVWF	STACK_0
$04C0	$0839			MOVF	Display_Tensione_tensione1_L0+1, 0
$04C1	$00F1			MOVWF	STACK_0+1
$04C2	$083A			MOVF	Display_Tensione_tensione1_L0+2, 0
$04C3	$00F2			MOVWF	STACK_0+2
$04C4	$083B			MOVF	Display_Tensione_tensione1_L0+3, 0
$04C5	$00F3			MOVWF	STACK_0+3
$04C6	$229E			CALL	_div_32x32_s
$04C7	$300A			MOVLW	10
$04C8	$00F4			MOVWF	STACK_4
$04C9	$01F5			CLRF	STACK_4+1
$04CA	$01F6			CLRF	STACK_4+2
$04CB	$01F7			CLRF	STACK_4+3
$04CC	$229E			CALL	_div_32x32_s
$04CD	$0878			MOVF	STACK_8, 0
$04CE	$00F0			MOVWF	STACK_0
$04CF	$0879			MOVF	STACK_9, 0
$04D0	$00F1			MOVWF	STACK_1
$04D1	$087A			MOVF	STACK_10, 0
$04D2	$00F2			MOVWF	STACK_2
$04D3	$087B			MOVF	STACK_11, 0
$04D4	$00F3			MOVWF	STACK_3
;MonitorCaricaBatterie.c,95 :: 		LCD_Chr_CP(48+ch);
$04D5	$0870			MOVF	STACK_0, 0
$04D6	$3F30			ADDLW	48
$04D7	$00CD			MOVWF	FARG_Lcd_Chr_CP+0
$04D8	$2059			CALL	_Lcd_Chr_CP
;MonitorCaricaBatterie.c,96 :: 		ch = tensione1 % 10;
$04D9	$300A			MOVLW	10
$04DA	$00F4			MOVWF	STACK_4
$04DB	$01F5			CLRF	STACK_4+1
$04DC	$01F6			CLRF	STACK_4+2
$04DD	$01F7			CLRF	STACK_4+3
$04DE	$0838			MOVF	Display_Tensione_tensione1_L0, 0
$04DF	$00F0			MOVWF	STACK_0
$04E0	$0839			MOVF	Display_Tensione_tensione1_L0+1, 0
$04E1	$00F1			MOVWF	STACK_0+1
$04E2	$083A			MOVF	Display_Tensione_tensione1_L0+2, 0
$04E3	$00F2			MOVWF	STACK_0+2
$04E4	$083B			MOVF	Display_Tensione_tensione1_L0+3, 0
$04E5	$00F3			MOVWF	STACK_0+3
$04E6	$229E			CALL	_div_32x32_s
$04E7	$0878			MOVF	STACK_8, 0
$04E8	$00F0			MOVWF	STACK_0
$04E9	$0879			MOVF	STACK_9, 0
$04EA	$00F1			MOVWF	STACK_1
$04EB	$087A			MOVF	STACK_10, 0
$04EC	$00F2			MOVWF	STACK_2
$04ED	$087B			MOVF	STACK_11, 0
$04EE	$00F3			MOVWF	STACK_3
;MonitorCaricaBatterie.c,97 :: 		LCD_Chr_CP(48+ch);
$04EF	$0870			MOVF	STACK_0, 0
$04F0	$3F30			ADDLW	48
$04F1	$00CD			MOVWF	FARG_Lcd_Chr_CP+0
$04F2	$2059			CALL	_Lcd_Chr_CP
;MonitorCaricaBatterie.c,99 :: 		ch = tensione2 / 1000;
$04F3	$30E8			MOVLW	232
$04F4	$00F4			MOVWF	STACK_4
$04F5	$3003			MOVLW	3
$04F6	$00F5			MOVWF	STACK_4+1
$04F7	$01F6			CLRF	STACK_4+2
$04F8	$01F7			CLRF	STACK_4+3
$04F9	$083C			MOVF	Display_Tensione_tensione2_L0, 0
$04FA	$00F0			MOVWF	STACK_0
$04FB	$083D			MOVF	Display_Tensione_tensione2_L0+1, 0
$04FC	$00F1			MOVWF	STACK_0+1
$04FD	$083E			MOVF	Display_Tensione_tensione2_L0+2, 0
$04FE	$00F2			MOVWF	STACK_0+2
$04FF	$083F			MOVF	Display_Tensione_tensione2_L0+3, 0
$0500	$00F3			MOVWF	STACK_0+3
$0501	$229E			CALL	_div_32x32_s
;MonitorCaricaBatterie.c,100 :: 		LCD_Chr(2,11,48+ch);
$0502	$3002			MOVLW	2
$0503	$00C9			MOVWF	FARG_Lcd_Chr+0
$0504	$300B			MOVLW	11
$0505	$00CA			MOVWF	FARG_Lcd_Chr+1
$0506	$0870			MOVF	STACK_0, 0
$0507	$3F30			ADDLW	48
$0508	$00CB			MOVWF	FARG_Lcd_Chr+2
$0509	$2230			CALL	_Lcd_Chr
;MonitorCaricaBatterie.c,101 :: 		ch = (tensione2 / 100) % 10;
$050A	$3064			MOVLW	100
$050B	$00F4			MOVWF	STACK_4
$050C	$01F5			CLRF	STACK_4+1
$050D	$01F6			CLRF	STACK_4+2
$050E	$01F7			CLRF	STACK_4+3
$050F	$083C			MOVF	Display_Tensione_tensione2_L0, 0
$0510	$00F0			MOVWF	STACK_0
$0511	$083D			MOVF	Display_Tensione_tensione2_L0+1, 0
$0512	$00F1			MOVWF	STACK_0+1
$0513	$083E			MOVF	Display_Tensione_tensione2_L0+2, 0
$0514	$00F2			MOVWF	STACK_0+2
$0515	$083F			MOVF	Display_Tensione_tensione2_L0+3, 0
$0516	$00F3			MOVWF	STACK_0+3
$0517	$229E			CALL	_div_32x32_s
$0518	$300A			MOVLW	10
$0519	$00F4			MOVWF	STACK_4
$051A	$01F5			CLRF	STACK_4+1
$051B	$01F6			CLRF	STACK_4+2
$051C	$01F7			CLRF	STACK_4+3
$051D	$229E			CALL	_div_32x32_s
$051E	$0878			MOVF	STACK_8, 0
$051F	$00F0			MOVWF	STACK_0
$0520	$0879			MOVF	STACK_9, 0
$0521	$00F1			MOVWF	STACK_1
$0522	$087A			MOVF	STACK_10, 0
$0523	$00F2			MOVWF	STACK_2
$0524	$087B			MOVF	STACK_11, 0
$0525	$00F3			MOVWF	STACK_3
;MonitorCaricaBatterie.c,102 :: 		LCD_Chr_CP(48+ch);
$0526	$0870			MOVF	STACK_0, 0
$0527	$3F30			ADDLW	48
$0528	$00CD			MOVWF	FARG_Lcd_Chr_CP+0
$0529	$2059			CALL	_Lcd_Chr_CP
;MonitorCaricaBatterie.c,103 :: 		LCD_Chr_CP('.');
$052A	$302E			MOVLW	46
$052B	$00CD			MOVWF	FARG_Lcd_Chr_CP+0
$052C	$2059			CALL	_Lcd_Chr_CP
;MonitorCaricaBatterie.c,104 :: 		ch = (tensione2 / 10) % 10;
$052D	$300A			MOVLW	10
$052E	$00F4			MOVWF	STACK_4
$052F	$01F5			CLRF	STACK_4+1
$0530	$01F6			CLRF	STACK_4+2
$0531	$01F7			CLRF	STACK_4+3
$0532	$083C			MOVF	Display_Tensione_tensione2_L0, 0
$0533	$00F0			MOVWF	STACK_0
$0534	$083D			MOVF	Display_Tensione_tensione2_L0+1, 0
$0535	$00F1			MOVWF	STACK_0+1
$0536	$083E			MOVF	Display_Tensione_tensione2_L0+2, 0
$0537	$00F2			MOVWF	STACK_0+2
$0538	$083F			MOVF	Display_Tensione_tensione2_L0+3, 0
$0539	$00F3			MOVWF	STACK_0+3
$053A	$229E			CALL	_div_32x32_s
$053B	$300A			MOVLW	10
$053C	$00F4			MOVWF	STACK_4
$053D	$01F5			CLRF	STACK_4+1
$053E	$01F6			CLRF	STACK_4+2
$053F	$01F7			CLRF	STACK_4+3
$0540	$229E			CALL	_div_32x32_s
$0541	$0878			MOVF	STACK_8, 0
$0542	$00F0			MOVWF	STACK_0
$0543	$0879			MOVF	STACK_9, 0
$0544	$00F1			MOVWF	STACK_1
$0545	$087A			MOVF	STACK_10, 0
$0546	$00F2			MOVWF	STACK_2
$0547	$087B			MOVF	STACK_11, 0
$0548	$00F3			MOVWF	STACK_3
;MonitorCaricaBatterie.c,105 :: 		LCD_Chr_CP(48+ch);
$0549	$0870			MOVF	STACK_0, 0
$054A	$3F30			ADDLW	48
$054B	$00CD			MOVWF	FARG_Lcd_Chr_CP+0
$054C	$2059			CALL	_Lcd_Chr_CP
;MonitorCaricaBatterie.c,106 :: 		ch = tensione2 % 10;
$054D	$300A			MOVLW	10
$054E	$00F4			MOVWF	STACK_4
$054F	$01F5			CLRF	STACK_4+1
$0550	$01F6			CLRF	STACK_4+2
$0551	$01F7			CLRF	STACK_4+3
$0552	$083C			MOVF	Display_Tensione_tensione2_L0, 0
$0553	$00F0			MOVWF	STACK_0
$0554	$083D			MOVF	Display_Tensione_tensione2_L0+1, 0
$0555	$00F1			MOVWF	STACK_0+1
$0556	$083E			MOVF	Display_Tensione_tensione2_L0+2, 0
$0557	$00F2			MOVWF	STACK_0+2
$0558	$083F			MOVF	Display_Tensione_tensione2_L0+3, 0
$0559	$00F3			MOVWF	STACK_0+3
$055A	$229E			CALL	_div_32x32_s
$055B	$0878			MOVF	STACK_8, 0
$055C	$00F0			MOVWF	STACK_0
$055D	$0879			MOVF	STACK_9, 0
$055E	$00F1			MOVWF	STACK_1
$055F	$087A			MOVF	STACK_10, 0
$0560	$00F2			MOVWF	STACK_2
$0561	$087B			MOVF	STACK_11, 0
$0562	$00F3			MOVWF	STACK_3
;MonitorCaricaBatterie.c,107 :: 		LCD_Chr_CP(48+ch);
$0563	$0870			MOVF	STACK_0, 0
$0564	$3F30			ADDLW	48
$0565	$00CD			MOVWF	FARG_Lcd_Chr_CP+0
$0566	$2059			CALL	_Lcd_Chr_CP
;MonitorCaricaBatterie.c,108 :: 		}
$0567	$0008			RETURN
$0568	$	_main:
;MonitorCaricaBatterie.c,111 :: 		void main ()
;MonitorCaricaBatterie.c,118 :: 		init_MCU();
$0568	$2338			CALL	_init_MCU
;MonitorCaricaBatterie.c,120 :: 		PORTA.F5 = 1;
$0569	$1283			BCF	STATUS, RP0
$056A	$1685			BSF	PORTA, 5
;MonitorCaricaBatterie.c,121 :: 		start_LCD();
$056B	$2342			CALL	_start_LCD
;MonitorCaricaBatterie.c,123 :: 		Lcd_Cmd(Lcd_CLEAR);  // Clear display
$056C	$3001			MOVLW	1
$056D	$00CE			MOVWF	FARG_Lcd_Cmd+0
$056E	$2024			CALL	_Lcd_Cmd
;MonitorCaricaBatterie.c,125 :: 		rom_str2lcd(1,1,txt_avvio1);
$056F	$3001			MOVLW	1
$0570	$00B4			MOVWF	FARG_rom_str2lcd+0
$0571	$3001			MOVLW	1
$0572	$00B5			MOVWF	FARG_rom_str2lcd+1
$0573	$30C7			MOVLW	#_txt_avvio1
$0574	$00B6			MOVWF	FARG_rom_str2lcd+2
$0575	$3003			MOVLW	@#_txt_avvio1
$0576	$00B7			MOVWF	FARG_rom_str2lcd+3
$0577	$238C			CALL	_rom_str2lcd
;MonitorCaricaBatterie.c,126 :: 		rom_str2lcd(2,1,txt_avvio2);
$0578	$3002			MOVLW	2
$0579	$00B4			MOVWF	FARG_rom_str2lcd+0
$057A	$3001			MOVLW	1
$057B	$00B5			MOVWF	FARG_rom_str2lcd+1
$057C	$30D9			MOVLW	#_txt_avvio2
$057D	$00B6			MOVWF	FARG_rom_str2lcd+2
$057E	$3003			MOVLW	@#_txt_avvio2
$057F	$00B7			MOVWF	FARG_rom_str2lcd+3
$0580	$238C			CALL	_rom_str2lcd
;MonitorCaricaBatterie.c,128 :: 		Delay_ms(2000);
$0581	$3033			MOVLW	51
$0582	$00FC			MOVWF	STACK_12
$0583	$30FF			MOVLW	255
$0584	$00FB			MOVWF	STACK_11
$0585	$30FF			MOVLW	255
$0586	$00FA			MOVWF	STACK_10
$0587	$0BFC			DECFSZ	STACK_12, F
$0588	$2D8A			GOTO	$+2
$0589	$2D91			GOTO	$+8
$058A	$0BFB			DECFSZ	STACK_11, F
$058B	$2D8D			GOTO	$+2
$058C	$2D90			GOTO	$+4
$058D	$0BFA			DECFSZ	STACK_10, F
$058E	$2D8D			GOTO	$-1
$058F	$2D8A			GOTO	$-5
$0590	$2D87			GOTO	$-9
$0591	$30FD			MOVLW	253
$0592	$00FB			MOVWF	STACK_11
$0593	$30FF			MOVLW	255
$0594	$00FA			MOVWF	STACK_10
$0595	$0BFB			DECFSZ	STACK_11, F
$0596	$2D98			GOTO	$+2
$0597	$2D9B			GOTO	$+4
$0598	$0BFA			DECFSZ	STACK_10, F
$0599	$2D98			GOTO	$-1
$059A	$2D95			GOTO	$-5
$059B	$30B5			MOVLW	181
$059C	$00FA			MOVWF	STACK_10
$059D	$0BFA			DECFSZ	STACK_10, F
$059E	$2D9D			GOTO	$-1
$059F	$0000			NOP
;MonitorCaricaBatterie.c,130 :: 		Lcd_Cmd(Lcd_CLEAR);  // Clear display
$05A0	$3001			MOVLW	1
$05A1	$00CE			MOVWF	FARG_Lcd_Cmd+0
$05A2	$2024			CALL	_Lcd_Cmd
;MonitorCaricaBatterie.c,132 :: 		rom_str2lcd(1,1,txt_riga1);
$05A3	$3001			MOVLW	1
$05A4	$00B4			MOVWF	FARG_rom_str2lcd+0
$05A5	$3001			MOVLW	1
$05A6	$00B5			MOVWF	FARG_rom_str2lcd+1
$05A7	$30EB			MOVLW	#_txt_riga1
$05A8	$00B6			MOVWF	FARG_rom_str2lcd+2
$05A9	$3003			MOVLW	@#_txt_riga1
$05AA	$00B7			MOVWF	FARG_rom_str2lcd+3
$05AB	$238C			CALL	_rom_str2lcd
;MonitorCaricaBatterie.c,133 :: 		rom_str2lcd(2,1,txt_riga2);
$05AC	$3002			MOVLW	2
$05AD	$00B4			MOVWF	FARG_rom_str2lcd+0
$05AE	$3001			MOVLW	1
$05AF	$00B5			MOVWF	FARG_rom_str2lcd+1
$05B0	$30FD			MOVLW	#_txt_riga2
$05B1	$00B6			MOVWF	FARG_rom_str2lcd+2
$05B2	$3003			MOVLW	@#_txt_riga2
$05B3	$00B7			MOVWF	FARG_rom_str2lcd+3
$05B4	$238C			CALL	_rom_str2lcd
;MonitorCaricaBatterie.c,139 :: 		while (1)
$05B5	$	L_main_2:
;MonitorCaricaBatterie.c,142 :: 		adc_volt1 = 0;
$05B5	$01A6			CLRF	main_adc_volt1_L0
$05B6	$01A7			CLRF	main_adc_volt1_L0+1
$05B7	$01A8			CLRF	main_adc_volt1_L0+2
$05B8	$01A9			CLRF	main_adc_volt1_L0+3
;MonitorCaricaBatterie.c,143 :: 		adc_volt2 = 0;
$05B9	$01AA			CLRF	main_adc_volt2_L0
$05BA	$01AB			CLRF	main_adc_volt2_L0+1
$05BB	$01AC			CLRF	main_adc_volt2_L0+2
$05BC	$01AD			CLRF	main_adc_volt2_L0+3
;MonitorCaricaBatterie.c,145 :: 		for (i=0;i<NUM_LETTURE;i++){
$05BD	$01AE			CLRF	main_i_L0
$05BE	$01AF			CLRF	main_i_L0+1
$05BF	$	L_main_4:
$05BF	$3080			MOVLW	128
$05C0	$062F			XORWF	main_i_L0+1, 0
$05C1	$00F0			MOVWF	STACK_0
$05C2	$3080			MOVLW	128
$05C3	$3A01			XORLW	1
$05C4	$0270			SUBWF	STACK_0, 0
$05C5	$1D03			BTFSS	STATUS, Z
$05C6	$2DC9			GOTO	L_main_9
$05C7	$3090			MOVLW	144
$05C8	$022E			SUBWF	main_i_L0, 0
$05C9	$	L_main_9:
$05C9	$1803			BTFSC	STATUS, C
$05CA	$2E29			GOTO	L_main_5
;MonitorCaricaBatterie.c,146 :: 		adc_volt1 = adc_volt1 + ADC_read(0);  //AN0
$05CB	$01B4			CLRF	FARG_Adc_Read+0, 1
$05CC	$240F			CALL	_Adc_Read
$05CD	$3000			MOVLW	0
$05CE	$00F2			MOVWF	STACK_0+2
$05CF	$00F3			MOVWF	STACK_0+3
$05D0	$1283			BCF	STATUS, RP0
$05D1	$0826			MOVF	main_adc_volt1_L0, 0
$05D2	$07F0			ADDWF	STACK_0, 1
$05D3	$0827			MOVF	main_adc_volt1_L0+1, 0
$05D4	$1803			BTFSC	STATUS, C
$05D5	$0F27			INCFSZ	main_adc_volt1_L0+1, 0
$05D6	$07F1			ADDWF	STACK_0+1, 1
$05D7	$0828			MOVF	main_adc_volt1_L0+2, 0
$05D8	$1803			BTFSC	STATUS, C
$05D9	$0F28			INCFSZ	main_adc_volt1_L0+2, 0
$05DA	$07F2			ADDWF	STACK_0+2, 1
$05DB	$0829			MOVF	main_adc_volt1_L0+3, 0
$05DC	$1803			BTFSC	STATUS, C
$05DD	$0F29			INCFSZ	main_adc_volt1_L0+3, 0
$05DE	$07F3			ADDWF	STACK_0+3, 1
$05DF	$0870			MOVF	STACK_0, 0
$05E0	$00A6			MOVWF	main_adc_volt1_L0
$05E1	$0871			MOVF	STACK_0+1, 0
$05E2	$00A7			MOVWF	main_adc_volt1_L0+1
$05E3	$0872			MOVF	STACK_0+2, 0
$05E4	$00A8			MOVWF	main_adc_volt1_L0+2
$05E5	$0873			MOVF	STACK_0+3, 0
$05E6	$00A9			MOVWF	main_adc_volt1_L0+3
;MonitorCaricaBatterie.c,147 :: 		adc_volt2 = adc_volt2 + ADC_read(1);  //AN1
$05E7	$3001			MOVLW	1
$05E8	$00B4			MOVWF	FARG_Adc_Read+0
$05E9	$240F			CALL	_Adc_Read
$05EA	$3000			MOVLW	0
$05EB	$00F2			MOVWF	STACK_0+2
$05EC	$00F3			MOVWF	STACK_0+3
$05ED	$1283			BCF	STATUS, RP0
$05EE	$082A			MOVF	main_adc_volt2_L0, 0
$05EF	$07F0			ADDWF	STACK_0, 1
$05F0	$082B			MOVF	main_adc_volt2_L0+1, 0
$05F1	$1803			BTFSC	STATUS, C
$05F2	$0F2B			INCFSZ	main_adc_volt2_L0+1, 0
$05F3	$07F1			ADDWF	STACK_0+1, 1
$05F4	$082C			MOVF	main_adc_volt2_L0+2, 0
$05F5	$1803			BTFSC	STATUS, C
$05F6	$0F2C			INCFSZ	main_adc_volt2_L0+2, 0
$05F7	$07F2			ADDWF	STACK_0+2, 1
$05F8	$082D			MOVF	main_adc_volt2_L0+3, 0
$05F9	$1803			BTFSC	STATUS, C
$05FA	$0F2D			INCFSZ	main_adc_volt2_L0+3, 0
$05FB	$07F3			ADDWF	STACK_0+3, 1
$05FC	$0870			MOVF	STACK_0, 0
$05FD	$00AA			MOVWF	main_adc_volt2_L0
$05FE	$0871			MOVF	STACK_0+1, 0
$05FF	$00AB			MOVWF	main_adc_volt2_L0+1
$0600	$0872			MOVF	STACK_0+2, 0
$0601	$00AC			MOVWF	main_adc_volt2_L0+2
$0602	$0873			MOVF	STACK_0+3, 0
$0603	$00AD			MOVWF	main_adc_volt2_L0+3
;MonitorCaricaBatterie.c,148 :: 		Delay_ms(TEMPO_LETTURA);
$0604	$3007			MOVLW	7
$0605	$00FB			MOVWF	STACK_11
$0606	$30FF			MOVLW	255
$0607	$00FA			MOVWF	STACK_10
$0608	$0BFB			DECFSZ	STACK_11, F
$0609	$2E0B			GOTO	$+2
$060A	$2E0E			GOTO	$+4
$060B	$0BFA			DECFSZ	STACK_10, F
$060C	$2E0B			GOTO	$-1
$060D	$2E08			GOTO	$-5
$060E	$3079			MOVLW	121
$060F	$00FA			MOVWF	STACK_10
$0610	$0BFA			DECFSZ	STACK_10, F
$0611	$2E10			GOTO	$-1
$0612	$0000			NOP
;MonitorCaricaBatterie.c,150 :: 		if (PORTA.F2 == 0) {
$0613	$3000			MOVLW	0
$0614	$1905			BTFSC	PORTA, 2
$0615	$3001			MOVLW	1
$0616	$00F4			MOVWF	STACK_4
$0617	$0874			MOVF	STACK_4, 0
$0618	$3A00			XORLW	0
$0619	$1D03			BTFSS	STATUS, Z
$061A	$2E1C			GOTO	L_main_7
;MonitorCaricaBatterie.c,151 :: 		PORTA.F5 = 0;
$061B	$1285			BCF	PORTA, 5
;MonitorCaricaBatterie.c,152 :: 		}
$061C	$	L_main_7:
;MonitorCaricaBatterie.c,154 :: 		if (PORTA.F2 == 1) {
$061C	$3000			MOVLW	0
$061D	$1905			BTFSC	PORTA, 2
$061E	$3001			MOVLW	1
$061F	$00F4			MOVWF	STACK_4
$0620	$0874			MOVF	STACK_4, 0
$0621	$3A01			XORLW	1
$0622	$1D03			BTFSS	STATUS, Z
$0623	$2E25			GOTO	L_main_8
;MonitorCaricaBatterie.c,155 :: 		PORTA.F5 = 1;
$0624	$1685			BSF	PORTA, 5
;MonitorCaricaBatterie.c,156 :: 		}
$0625	$	L_main_8:
;MonitorCaricaBatterie.c,157 :: 		}
$0625	$	L_main_6:
;MonitorCaricaBatterie.c,145 :: 		for (i=0;i<NUM_LETTURE;i++){
$0625	$0AAE			INCF	main_i_L0, 1
$0626	$1903			BTFSC	STATUS, Z
$0627	$0AAF			INCF	main_i_L0+1, 1
;MonitorCaricaBatterie.c,157 :: 		}
$0628	$2DBF			GOTO	L_main_4
$0629	$	L_main_5:
;MonitorCaricaBatterie.c,159 :: 		adc_volt1 = adc_volt1 / NUM_LETTURE;
$0629	$3090			MOVLW	144
$062A	$00F4			MOVWF	STACK_4
$062B	$3001			MOVLW	1
$062C	$00F5			MOVWF	STACK_4+1
$062D	$01F6			CLRF	STACK_4+2
$062E	$01F7			CLRF	STACK_4+3
$062F	$0826			MOVF	main_adc_volt1_L0, 0
$0630	$00F0			MOVWF	STACK_0
$0631	$0827			MOVF	main_adc_volt1_L0+1, 0
$0632	$00F1			MOVWF	STACK_0+1
$0633	$0828			MOVF	main_adc_volt1_L0+2, 0
$0634	$00F2			MOVWF	STACK_0+2
$0635	$0829			MOVF	main_adc_volt1_L0+3, 0
$0636	$00F3			MOVWF	STACK_0+3
$0637	$229E			CALL	_div_32x32_s
$0638	$0870			MOVF	STACK_0, 0
$0639	$00B0			MOVWF	FLOC_main+10
$063A	$0871			MOVF	STACK_0+1, 0
$063B	$00B1			MOVWF	FLOC_main+11
$063C	$0872			MOVF	STACK_0+2, 0
$063D	$00B2			MOVWF	FLOC_main+12
$063E	$0873			MOVF	STACK_0+3, 0
$063F	$00B3			MOVWF	FLOC_main+13
$0640	$0830			MOVF	FLOC_main+10, 0
$0641	$00A6			MOVWF	main_adc_volt1_L0
$0642	$0831			MOVF	FLOC_main+11, 0
$0643	$00A7			MOVWF	main_adc_volt1_L0+1
$0644	$0832			MOVF	FLOC_main+12, 0
$0645	$00A8			MOVWF	main_adc_volt1_L0+2
$0646	$0833			MOVF	FLOC_main+13, 0
$0647	$00A9			MOVWF	main_adc_volt1_L0+3
;MonitorCaricaBatterie.c,160 :: 		adc_volt2 = adc_volt2 / NUM_LETTURE;
$0648	$3090			MOVLW	144
$0649	$00F4			MOVWF	STACK_4
$064A	$3001			MOVLW	1
$064B	$00F5			MOVWF	STACK_4+1
$064C	$01F6			CLRF	STACK_4+2
$064D	$01F7			CLRF	STACK_4+3
$064E	$082A			MOVF	main_adc_volt2_L0, 0
$064F	$00F0			MOVWF	STACK_0
$0650	$082B			MOVF	main_adc_volt2_L0+1, 0
$0651	$00F1			MOVWF	STACK_0+1
$0652	$082C			MOVF	main_adc_volt2_L0+2, 0
$0653	$00F2			MOVWF	STACK_0+2
$0654	$082D			MOVF	main_adc_volt2_L0+3, 0
$0655	$00F3			MOVWF	STACK_0+3
$0656	$229E			CALL	_div_32x32_s
$0657	$0870			MOVF	STACK_0, 0
$0658	$00AA			MOVWF	main_adc_volt2_L0
$0659	$0871			MOVF	STACK_0+1, 0
$065A	$00AB			MOVWF	main_adc_volt2_L0+1
$065B	$0872			MOVF	STACK_0+2, 0
$065C	$00AC			MOVWF	main_adc_volt2_L0+2
$065D	$0873			MOVF	STACK_0+3, 0
$065E	$00AD			MOVWF	main_adc_volt2_L0+3
;MonitorCaricaBatterie.c,162 :: 		Display_Tensione (adc_volt1, adc_volt2);
$065F	$0830			MOVF	FLOC_main+10, 0
$0660	$00B4			MOVWF	FARG_Display_Tensione+0
$0661	$0831			MOVF	FLOC_main+11, 0
$0662	$00B5			MOVWF	FARG_Display_Tensione+1
$0663	$0870			MOVF	STACK_0, 0
$0664	$00B6			MOVWF	FARG_Display_Tensione+2
$0665	$0871			MOVF	STACK_0+1, 0
$0666	$00B7			MOVWF	FARG_Display_Tensione+3
$0667	$243D			CALL	_Display_Tensione
;MonitorCaricaBatterie.c,163 :: 		}
$0668	$2DB5			GOTO	L_main_2
;MonitorCaricaBatterie.c,165 :: 		}
$0669	$2E69			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		Delay_1us
$000C		Delay_5500us
$001D		Delay_50us
$0024		Lcd_Cmd
$0059		Lcd_Chr_CP
$0062		SDIV3232L
$0190		COMFREM
$019E		Lcd_Init
$01DE		LCD_Out
$0221		____DoICP
$0228		Delay_22us
$0230		Lcd_Chr
$0267		Mul_32x32_U
$029E		Div_32x32_S
$0338		init_MCU
$0342		start_LCD
$038C		rom_str2lcd
$03C7		?table___txt_avvio1
$03D9		?table___txt_avvio2
$03EB		?table___txt_riga1
$03FD		?table___txt_riga2
$040F		Adc_Read
$043D		Display_Tensione
$0568		main


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_Delay_1us:
$000C		_Delay_5500us:
$001D		_Delay_50us:
$0024		_Lcd_Cmd:
$002B		L_Lcd_Cmd_0:
$0039		L_Lcd_Cmd_1:
$003A		L_Lcd_Cmd_2:
$003F		L_Lcd_Cmd_3:
$004E		L_Lcd_Cmd_4:
$004F		L_Lcd_Cmd_5:
$0057		L_Lcd_Cmd_6:
$0058		L_Lcd_Cmd_7:
$0059		_Lcd_Chr_CP:
$0062		_SDIV3232L:
$0075		LOOPS3232A:
$008B		SADD22LA:
$0098		SOK22LA:
$00B1		SADD22L8:
$00BE		SOK22L8:
$00C1		LOOPS3232B:
$00D7		SADD22LB:
$00E4		SOK22LB:
$00FD		SADD22L16:
$010A		SOK22L16:
$010D		LOOPS3232C:
$0123		SADD22LC:
$0130		SOK22LC:
$0149		SADD22L24:
$0156		SOK22L24:
$0159		LOOPS3232D:
$016F		SADD22LD:
$017C		SOK22LD:
$018F		SOK22L:
$0190		_COMFREM:
$019E		_Lcd_Init:
$01DE		_LCD_Out:
$01DF		L_LCD_Out_19:
$01E4		L_LCD_Out_20:
$01E7		L_LCD_Out_21:
$01EA		L_LCD_Out_22:
$01ED		L_LCD_Out_23:
$01F0		L_LCD_Out_17:
$0203		L_LCD_Out_18:
$020E		L_LCD_Out_24:
$021E		L_LCD_Out_25:
$0221		_____DoICP:
$0228		_Delay_22us:
$0230		_Lcd_Chr:
$0231		L_Lcd_Chr_10:
$0236		L_Lcd_Chr_11:
$0239		L_Lcd_Chr_12:
$023C		L_Lcd_Chr_13:
$023F		L_Lcd_Chr_14:
$0242		L_Lcd_Chr_8:
$0255		L_Lcd_Chr_9:
$0267		_Mul_32x32_U:
$026F		_NEXT:
$0273		_LOOP:
$028F		_EXIT1:
$029D		_EXIT2:
$029E		_Div_32x32_S:
$02A0		FXD3232S:
$02C0		CA3232S:
$02CD		C3232SX:
$02D2		C3232S:
$02D3		C3232S2:
$02D5		C3232SOK:
$02EE		C3232SX1:
$02FF		C3232SX2:
$0305		C3232SX3:
$030B		C3232SX4:
$0332		END_ALL:
$0336		avoid_comfrem:
$0338		_init_MCU:
$0342		_start_LCD:
$038C		_rom_str2lcd:
$038F		L_rom_str2lcd_0:
$03BF		L_rom_str2lcd_1:
$03C7		table___txt_avvio1:
$03D9		table___txt_avvio2:
$03EB		table___txt_riga1:
$03FD		table___txt_riga2:
$040F		_Adc_Read:
$0425		L_Adc_Read_0:
$0429		L_Adc_Read_1:
$0430		L_Adc_Read_2:
$0437		L_Adc_Read_3:
$043D		_Display_Tensione:
$0568		_main:
$05B5		L_main_2:
$05BF		L_main_4:
$05C9		L_main_9:
$061C		L_main_7:
$0625		L_main_6:
$0625		L_main_8:
$0629		L_main_5:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0006		PORTB
$000A		PCLATH
$000B		INTCON
$001E		ADRESH
$001F		ADCON0
$0020		___math_tempb
$0021		LCD_port_address
$0022		LCD_cmd_status
$0023		___DoICPSavePCLATH
$0024		___DoICPHiAddr
$0025		___DoICPLoAddr
$0026		main_adc_volt1_L0
$002A		main_adc_volt2_L0
$002E		main_i_L0
$0030		
$0034		FARG_Adc_Read+0
$0034		FARG_Display_Tensione+0
$0034		FARG_rom_str2lcd+0
$0035		FARG_rom_str2lcd+1
$0036		FARG_Display_Tensione+2
$0036		FARG_rom_str2lcd+2
$0038		Display_Tensione_tensione1_L0
$0038		rom_str2lcd_i_L0
$0039		rom_str2lcd_txt_msg_L0
$003C		Display_Tensione_tensione2_L0
$0040		
$0049		FARG_Lcd_Chr+0
$0049		FARG_Lcd_Init+0
$0049		FARG_LCD_Out+0
$004A		FARG_Lcd_Chr+1
$004A		FARG_LCD_Out+1
$004B		FARG_Lcd_Chr+2
$004B		FARG_LCD_Out+2
$004C		LCD_Out_i_L0
$004D		FARG_Lcd_Chr_CP+0
$004E		FARG_Lcd_Cmd+0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0086		TRISB
$0087		TRISC
$009E		ADRESL
$009F		ADCON1


